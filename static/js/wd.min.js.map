{"version":3,"sources":["webdirect.js"],"names":["WD","lockResolver","terminal","connected","itemqueue","browsers","dirtydata","dirtydataprompt","sentdata","idletimerid","MAX_TCL_IDLE_TIME","keepTCLhidden","hostfocusprompt","mainwindow","selfreload","loggedout","connecting","screensdisabled","wcontainer","$","schemesettings","editor","diffnav","clicktimer","alttab","searching","isgc","hasClass","tclcols","tclrows","socket","socketManager","disconnected","autoconnect","clickqueue","screens","reconnectTimer","languageObject","renderdataqueue","waitingclasstimeoutid","globaltoasttimeout","itemqueueprocessed","previousfocusinput","isdisplayed","index","item","style","display","inputhistory","input","history","push","i","on","e","key","which","val","length","splice","preventDefault","fixObjectHeight","oScroll","oWnd","oSiblings","extraHeight","height","sizeOfWindow","each","Math","round","this","outerHeight","window","clientHeight","css","addWindowListener","addEventListener","receiveMessage","setupTerminal","Terminal","tdom","width","open","get","onData","handleterminaldata","event","stopPropagation","find","hidetcl","setTerminalSize","resize","data","charCodeAt","popupBlockerChecker","check","popup_window","_scope","test","navigator","userAgent","toLowerCase","setTimeout","_is_popup_blocked","onload","_displayError","scope","innerHeight","setCookie","close","displayPopupWarning","appName","WARNING_HEADER","loadstringliteral","toUpperCase","WARNING_MESSAGE","displaytoast","msg","replace","msgtype","getiframe","targetid","contents","iframe","jQueryID","is","document","getElementById","setupLogin","account","$accountElement","wdserveroverride","lastServer","getCookie","$serverElement","children","first","onServerChange","trigger","prop","wdaccountoverride","checkBrowser","popup","bowser","chrome","msedge","chromium","BROWSER_ERR","showmessage","button","buttonlabel","nosend","header","image","setupEditor","require","config","paths","vs","approot","monaco","languages","register","id","extensions","aliases","mimetypes","def","eval","setMonarchTokensProvider","setLanguageConfiguration","comments","lineComment","MODES","modesIds","getLanguages","map","lang","sort","modeId","sampleURL","$lp","o","createElement","textContent","append","setEditorLanguage","cancelEditor","saveEditor","$tp","savedTheme","currentTheme","options","selectedIndex","value","setTheme","bSideBySide","updateOptions","renderSideBySide","updateEditorSettings","showEditor","hotkeys","setScope","show","ready","hideEditor","hide","$lang","myModel","getModel","original","setModelLanguage","text","modified","clearEditor","ESCAPE","VM","len","models","getModels","dispose","$container","title","removeData","html","failEditor","xhr","url","reqtype","outdata","cb","ajax","type","dataType","processData","contentType","error","jqXHR","textStatus","errorThrown","done","loadEditorContent","uri","language","readonly","sid","err","console","empty","create","model","theme","readOnly","wordBasedSuggestions","oldModel","newModel","createModel","Uri","file","setModel","addCommand","KeyMod","CtrlCmd","Shift","KeyCode","KEY_U","KEY_L","getModeId","parent","addClass","split","slice","focus","loadDiffEditorContent","uriOrig","uriMod","dataMod","msgError","dataOrig","callback","then","data1","data2","$id","savedSideBySide","originalModel","createDiffEditor","modifiedModel","createDiffNavigator","followsCaret","ignoreCharChanges","removeClass","fail","status","getValue","EndOfLinePreference","CRLF","responseText","launcheditorwindow","command","targeturl","encodeURIComponent","htmlUnescape","str","cname","cvalue","exdays","d","Date","expires","setTime","getTime","toUTCString","secure","location","protocol","cookie","name","ca","c","charAt","substring","indexOf","getPromptObjects","partial","getnativeelems","querystr","querySelectorAll","promptID","addHandlers","repositionblocker","layout","fixgridheader","tab","isrequiredempty","questionwin","stopImmediatePropagation","jElem","left","top","positionscreen","positionmenubar","focusel","attr","target","classList","required","contains","resizeTextarea","tagName","isTextArea","textareaKeyHandler","parents","evttarget","updateelement","isConnected","disabled","focuselement","removeAttribute","jthis","ctrlKey","code","clipboard","inputElem","writeText","scrollhandler","LEAVE_MESSAGE","filter","sendBeacon","setupHotkeys","handler","selmenu","last","prev","next","row","currow","newrow","hascheckbox","ssdblclick","ssprocessclick","elem","blurprompt","senddata","execCommand","ERR_MSG","getpromptnum","promptid","includerow","temp","activeElement","blur","processingevent","eventname","duration","$target","dataname","showupcancel","src","$tool","String","fromCharCode","AM","SM","init","substr","storedmsg","sessionStorage","getItem","removeItem","gettcl","showtcl","hideconnecting","tclsetfocus","scrollToBottom","toggletcl","cleartclwait","requestlogout","request","logout","newloc","delayedtoast","loginserver","serveroverride","accountoverride","reload","oldlogout","closeallbrowsers","initui","clear","showstart","enablescreens","outerWidth","updateprogressbar","hidestart","clearTimeout","disablescreens","writeTCL","tcldata","clearcode","tcltoggle","replaceAll","repeat","write","processqueueitem","flash_msg_target","cmdpromptmap","tclcleared","isscreeninqueue","resp","shift","datatype","respcommand","is_display_cmd","is_flash_msg","resptarget","undefined","cmdprompts","cmdpromptstemp","forEach","elemname","getAttribute","mvndx","displayprompt","runcommand","prompting","doneconnecting","isScreen","renderedarray","render","rendered","unshift","sdrag","sdragparent","sdragparentpos","position","draggable","containment","bottom","start","ui","drag","stop","startpoll","processresponse","response","login","results","apply","renderids","post","JSON","stringify","Object","assign","always","bind","itemid","itemtoload","wc","renderid","renderdata","screenObj","origitem","screentoload","activeId","parentid","insertpos","itempos","$itemsep","remove","$item","$parentband","$insertionpoint","after","prepend","before","datatypelower","scrollable","tagname","tempBt","closest","proptext","propdict","parse","addGrid","log","addPrompt","addButton","addText","props","screenid","WDC","unmountComponentAtNode","structuredClone","Screen","replaceWith","processrender","applyscheme","renderitem","renderitemparent","childScreen","focusprompt","hostfocus","removeAttr","prevAll","addautocomplete","jQuery","SmartMenus","Bootstrap","smartmenus","prompt","autocomplete","source","getaclist","listid","list","gridparent","cols","colwidth","$thead","trs","$tbody","minHeight","$headrow","$bodyrow","slicesize","$lastheadcol","minWidth","scrollLeft","right","screenpos","my","prevscreen","not","parseInt","at","of","updatetext","updatemailstatus","href","exturl","encodeURI","updateprompt","updatemenubar","closecommand","cleartoast","fireevent","updatebrowser","externalbrowser","insertRowInGrid","mvpos","deleteRowFromGrid","schemeobj","element","area","colour","updateScheme","selectfile","updateaclist","askquestion","getinfo","alert","connect","root","captcha_val","replaceState","connecturl","enable_logging","rootelem","reqdata","user","password","server","passcode","captcha","logging","ssl","method","relogin","failed","showconnecting","runlogfile","logfile","logdelay","firetlb","jPrompt","siblings","optvalue","origvalue","jPrompts","oldvalue","jPromptObj","pushdirtydata","getjump","focused","toString","alreadyhasfocus","focusedelement","jPromptGrid","promptliteral","hasdirtydata","getgridfromprompt","forcesend","search","scrollintoview","unsetfocus","select","displaymanualprompt","ssclick","grid","send","dirty","singleclick","jgrid","showselect","busy","sendrow","currentel","highlightrow","currentrow","tbody","selectrow","gridsetpromptliteral","disabledInput","hostprompt","firstitem","about","$about","zIndex","load","modal","buttonclick","escapedata","inputid","prompts","promptcount","counter","menuclick","option","origfile","targetfile","retfile","keyboard","backdrop","filechosen","filename","pop","uploadfile","formData","FormData","retfilename","files","doupload","cache","enctype","success","cancelfileupload","fireandforget","skipdata","noenter","sendfocus","opener","in","emit","session","locks","promise","Promise","res","mode","socketiopath","origin","pathname","io","Manager","reconnectionDelay","reconnectionAttempts","query","sessionid","path","testConnectionValid","connectionDelay","reason","errorMsg","manualReconnect","now","attemptReconnect","delay","disconnect","restartConnection","connectionPending","connectionfailure","pbholder","pb","pbl","modalwin","message","update","menubar","action","newval","scrollIntoViewIfNeeded","scrollIntoView","toitem","dragmove","blockWindow","draggableScreenAfterMenu","menuTop","menuchildren","sameexlevel","floor","calldifference","mbislive","insertAfter","toparent","collision","nextAll","screenPosition","isnooverflow","delayClicks","targetelement","reset","frames","j","frame","contentDocument","updatetype","innerHTML","outerHTML","hasOwnProperty","win","specs","newwindow","tag","cmd","closed","realurl","bgndbrowser","promptObj","browser","zorder","reverse","visible","promptObjWindow","contentWindow","iframeActiveElement","EDGE","HTML1","focusCurrentElement","mailcont","mail","iconname","unreadnum","sendtype","carrret","sendtext","flash","bgnd","bgndnames","bgndurl","rptnames","valid","packet","connectwin","one","label","inputtype","showdraggablemodal","modelelem","properties","handle","destroymodaldraggable","dialogbutton","abutton","sbutton","clone","returndata","focusbutton","itemset","add","winblocker","lastitem","eq","insertBefore","hidewinblockedpromptscreen","scrs","manualprompts","allBtns","screenelements","container","screen","objstoclose","tToast","screenattachedtotoast","setmenubar","live","siblingsdisabled","jmenubar","promptObjs","wdtlbInput","jThis","jThisParent","tlb","newhtml","tlbicon","tlbleft","has","filteredprompt","infocus","screenInput","dirtyitems","setGridValuefromHost","bgcolour","textcolour","setValuefromHost","updateiframefunctions","WDEDI","movefocus","scrollToGridItem","enabledInput","isCheckbox","wcontainerbgsc","jManPrompt","jPromptHtml","jTarget","jParent","checkinview","elemTop","isTotal","contHeight","scrollTop","elemBottom","offset","isPart","setItem","notimeout","lastscreen","lastscreenelem","fadeOut","positioned","xpos","ypos","bodyscale","parseFloat","ypx","xpx","within","targetprompt","fadeIn","csi_navigate","navigate","post_to_url","posttourl","overwritehref","overwritesubmit","HTMLFormElement","prototype","submit","handlesubmit","parentNode","iframepromptno","doc","href_val","convertserializetolatin1","reduce","paramsstr","currentparam","currentparamval","decodeURIComponent","encodeLatin1URIComponent","jform","serialize","parentsUntil","params","navigatePath","paramlatin1","current_param_key","params_str","current_param","inputStr","param_string_list","charlist","inputStrLen","inputCharIndex","char_base","inputChar","charcode","charliststr","join","char_mod","tmpURL","t","scrollHeight","selectionStart","selectionEnd","offsetHeight","saveLoginInfo","checkForMFA","sourceHTML","sourceElement","accountElement","wdallowfree","changeTerminalSize","rows","printterm","termoutput","buffer","normal","getLine","translateToString","twin","scrollingElement","keyCode","context","telement","tcolour","tarea","viewLogs","toggleLogs","loggingEnabled","jqxhr","$parent","enableLogStr","disableLogStr","sendContextHelp","getScope","standaloneeditorinit","nextdiff","prevdiff","previous","beforeprint","iFrame","externalprintsource","localcss","subframes","getallcss","body","internalcss","getalllinks","styletags","getElementsByTagName","head","alllinks","link","rel","appendChild","setlanguageobject","langObj","objKey","langVal","es5trim","resourceId","defaultValue","trim","promptrootid"],"mappings":"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","file":"wd.min.js","sourcesContent":["// WebDirect Javascript\r\n// @author: bouchcla\r\n//\r\n\r\n// WebDirect Namespace\r\nvar WD = function() {\r\n    var lockResolver;\r\n    var terminal = null;\r\n    var connected = false;\r\n    var itemqueue = [];\r\n    var browsers = {};\r\n    var dirtydata = null;\r\n    var dirtydataprompt = 0;\r\n    var sentdata = false;\r\n    var idletimerid = 0;\r\n    var MAX_TCL_IDLE_TIME = 20000; // 20 seconds\r\n    var keepTCLhidden = true;\r\n    var hostfocusprompt = -1;\r\n    var mainwindow = false;\r\n    var selfreload = false;\r\n    var loggedout = true;\r\n    var connecting = false;\r\n    var screensdisabled = false;\r\n    var wcontainer = $(\"#windowcontainer\");\r\n    var schemesettings = {};\r\n    var editor = null;\r\n    var diffnav = null;\r\n    var clicktimer = null;\r\n    var alttab = false;\r\n    var searching = false;\r\n    var isgc = $(\"body\").hasClass(\"gc\");\r\n    var tclcols = 80;\r\n    var tclrows = 24;\r\n    var socket = null;\r\n    var socketManager = null;\r\n    var disconnected = null;\r\n    var autoconnect = false;\r\n    var clickqueue = [];\r\n    var screens = [];\r\n    var reconnectTimer = null;\r\n    var languageObject = {};\r\n    var renderdataqueue = {};\r\n    var waitingclasstimeoutid = null;\r\n    var globaltoasttimeout;\r\n    var itemqueueprocessed = true;\r\n    var previousfocusinput = null;\r\n\r\n    function isdisplayed(index, item) {\r\n        return item.style.display != \"none\";\r\n    }\r\n\r\n    function inputhistory(input) {\r\n        input.history = [];\r\n        input.history.push(\"\");\r\n        var i = 0;\r\n        input.on(\"keydown\", function(e) {\r\n            var key = e.which;\r\n            switch (key) {\r\n                case 13: // Enter\r\n                    if (input.val() != \"\") {\r\n                        i = input.history.length;\r\n                        input.history[i - 1] = input.val();\r\n                        input.history.push(\"\");\r\n                        if (input.history[i - 1] == input.history[i - 2]) {\r\n                            input.history.splice(-2, 1);\r\n                            i--;\r\n                        }\r\n                    }\r\n                    return;\r\n                case 38: // Up\r\n                case 40: // Down\r\n                    input.history[i] = input.val();\r\n                    if (key == 38 && i != 0) {\r\n                        i--;\r\n                    } else if (key == 40 && i < input.history.length - 1) {\r\n                        i++;\r\n                    }\r\n                    input.val(input.history[i]);\r\n                    break;\r\n\r\n                default:\r\n                    return;\r\n            }\r\n            e.preventDefault();\r\n        });\r\n    }\r\n\r\n    function fixObjectHeight(oScroll, oWnd, oSiblings, extraHeight) {\r\n        // get height of our \"siblings\" we care about\r\n        var height = 0;\r\n        oSiblings.each(function() {\r\n            height += Math.round($(this).outerHeight(true));\r\n        });\r\n        if (extraHeight !== undefined && extraHeight !== null) {\r\n            height += extraHeight;\r\n        }\r\n        var sizeOfWindow = 0;\r\n        // find our window size\r\n        if (oWnd === window) {\r\n            sizeOfWindow = $(oWnd).height() - height;\r\n        } else {\r\n            sizeOfWindow = oWnd.clientHeight - height;\r\n        }\r\n        // subtract our outer window size\r\n        sizeOfWindow -= (oScroll.outerHeight(true) - oScroll.height()) + 10;\r\n        oScroll.css(\"height\", sizeOfWindow + \"px\");\r\n    }\r\n\r\n    function addWindowListener() {\r\n        window.addEventListener(\"message\", WD.receiveMessage, false);\r\n    }\r\n\r\n    function setupTerminal() {\r\n        // Terminal Window Setup\r\n        terminal = new Terminal();\r\n        var tdom = $(\"#output\");\r\n        tdom.css({\r\n            width: \"100%\"\r\n        });\r\n        terminal.open(tdom.get(0));\r\n        terminal.onData(handleterminaldata);\r\n        // Stop parent div from setting focus back to input box when terminal clicked\r\n        tdom.on(\"click\", function(event) {\r\n            event.stopPropagation();\r\n        });\r\n        $(\"#tcl\").find(\".modal\").on(\"click\", function() {\r\n            WD.hidetcl();\r\n        });\r\n        $(\"#tcl\").find(\".modal-dialog\").on(\"click\", function() {\r\n            event.stopPropagation();\r\n        });\r\n        inputhistory($(\"#tclinput\"));\r\n    }\r\n\r\n    function setTerminalSize() {\r\n        // should we track terminal size from host\r\n        terminal.resize(tclcols, tclrows);\r\n    }\r\n\r\n    function handleterminaldata(data) {\r\n        // handle terminal data\r\n        if (data.length == 1 && data.charCodeAt(0) == 127) {\r\n            // Fix for backspace key\r\n            data = \"\\b\";\r\n        }\r\n        WD.input(data, null, null, true);\r\n    }\r\n\r\n    var popupBlockerChecker = {\r\n        check: function(popup_window) {\r\n            var _scope = this;\r\n            if (popup_window) {\r\n                if (/chrome/.test(navigator.userAgent.toLowerCase())) {\r\n                    setTimeout(function() {\r\n                        _scope._is_popup_blocked(_scope, popup_window);\r\n                    }, 200);\r\n                } else {\r\n                    popup_window.onload = function() {\r\n                        _scope._is_popup_blocked(_scope, popup_window);\r\n                    };\r\n                }\r\n            } else {\r\n                _scope._displayError();\r\n            }\r\n        },\r\n        _is_popup_blocked: function(scope, popup_window) {\r\n            if ((popup_window.innerHeight > 0) == false) {\r\n                setCookie(\"popupcheck\", \"false\", 14);\r\n                scope._displayError();\r\n            } else {\r\n                setCookie(\"popupcheck\", \"true\", 9999);\r\n                popup_window.close();\r\n            }\r\n        },\r\n        _displayError: function() {\r\n            displayPopupWarning();\r\n        }\r\n    };\r\n\r\n    function displayPopupWarning() {\r\n        var appName = \"WebDirect\";\r\n        if (isgc) {\r\n            appName = \"CloudCare\";\r\n        }\r\n\r\n        setTimeout(function() {\r\n\r\n            var WARNING_HEADER = WD.loadstringliteral(\"IDS_ERROR0079\").toUpperCase();\r\n            var WARNING_MESSAGE = WD.loadstringliteral(\"IDS_WEBWARN0001\");\r\n    \r\n            WD.displaytoast({\r\n                msg: (\"<h2 style='text-align:center'>\" + WARNING_HEADER + \"<br/>\" + WARNING_MESSAGE + \".</h2>\").replace(\"<appName>\", appName),\r\n                msgtype: \"ERROR\"\r\n            });\r\n\r\n        }, 100);\r\n    }\r\n\r\n    function getiframe(targetid, contents) {\r\n        var iframe = $(\"#\" + jQueryID(targetid));\r\n        if (iframe.length > 0) {\r\n            if (iframe.is(\"div\")) {\r\n                iframe = iframe.find(\"iframe\");\r\n            }\r\n        } else {\r\n            // could be an external browser\r\n            if (targetid in browsers) {\r\n                iframe = $(browsers[targetid].document.getElementById(\"externalsource\"));\r\n            }\r\n        }\r\n        if (iframe && iframe.length && contents) {\r\n            iframe = iframe.contents();\r\n        }\r\n        return iframe;\r\n    }\r\n    // Setup Login fields\r\n    function setupLogin() {\r\n        if ($('#login').length == 0) return;\r\n\r\n        var overrides = false;\r\n        if (wdserveroverride != \"\") {\r\n            overrides = true;\r\n        }\r\n\r\n        var lastServer = getCookie(\"server\");\r\n        var $serverElement = $(\"#server\");\r\n        if (wdserveroverride != \"\") {\r\n            $serverElement.val(wdserveroverride);\r\n        } else if (lastServer != \"\" && $serverElement.is(\":visible\")) {\r\n            $serverElement.val(lastServer);\r\n        }\r\n        if (!$serverElement.val()) {\r\n            $serverElement.val($serverElement.children().first().val());\r\n        }\r\n\r\n        // This can't be last\r\n        // and if first, need to call \".change()\" on #server after changing its\r\n        // val()\r\n        $(document).on(\"change\", \"#server\", WD.onServerChange);\r\n        $serverElement.trigger(\"change\");\r\n\r\n        // Enable server prompt if more than one choice, else disable\r\n        if ($serverElement.children().length <= 1 && $serverElement.prop(\"nodeName\").toUpperCase() == \"SELECT\") {\r\n            $serverElement.prop(\"disabled\", true);\r\n        } else {\r\n            $serverElement.prop(\"disabled\", false);\r\n        }\r\n\r\n        var account = getCookie(\"account\");\r\n        var $accountElement = $(\"#account\");\r\n        if (wdaccountoverride != \"\") {\r\n            $accountElement.val(wdaccountoverride);\r\n        } else if (account != \"\" && $accountElement.is(\":visible\")) {\r\n            $accountElement.val(account);\r\n        }\r\n        if (!$accountElement.val()) {\r\n            $accountElement.val($accountElement.children().first().val());\r\n        }\r\n    }\r\n    /*\r\n     * Checks to see if a supported browser is being used and, if not, displays a message\r\n     */\r\n    function checkBrowser() {\r\n        if (!bowser.chrome && !bowser.msedge && !bowser.chromium) {\r\n            // bowser.name + \" \" + bowser.version + \": Is IE? \" + bowser.msie);\r\n            var BROWSER_ERR = WD.loadstringliteral(\"IDS_WEBERR0005\", \"You are using an unsupported browser!  Please switch to Chrome or MS Edge (Chromium based).\");\r\n            WD.showmessage({\r\n                msg: BROWSER_ERR,\r\n                msgtype: \"ERROR\",\r\n                button: [{\r\n                    buttonlabel: \"OK\",\r\n                    nosend: true\r\n                }],\r\n                header: WD.loadstringliteral(\"IDS_ERROR0022\"),\r\n                image: \"wdres/exclamation.svg\"\r\n            });\r\n        }\r\n        var popupcheck = getCookie(\"popupcheck\");\r\n        if (popupcheck != \"true\") {\r\n            var popup = window.open(\"static/blank.html\", '_blank');\r\n            popupBlockerChecker.check(popup);\r\n        }\r\n    }\r\n    // Setup Editor\r\n    function setupEditor() {\r\n        require.config({\r\n            paths: {\r\n                'vs': approot + 'static/monaco-editor/min/vs'\r\n            }\r\n        });\r\n        require(['vs/editor/editor.main'], function() {\r\n            /**\r\n             * Load custom SG/SX/Pick editor\r\n             * https://microsoft.github.io/monaco-editor/playground.html#extending-language-services-custom-languages\r\n             * view-source:https://microsoft.github.io/monaco-editor/monarch.html\r\n             */\r\n            monaco.languages.register({\r\n                id: \"sgx\",\r\n                extensions: [\".sgx\"],\r\n                aliases: [\"SGSX\", \"PickBASIC\"],\r\n                mimetypes: [\"text/x.sgx\"]\r\n            });\r\n            $.get(approot + \"static/editor-languages/sgx.js\", function(data) {\r\n                var def = eval(\"(function(){ \" + data + \"; })()\");\r\n                monaco.languages.setMonarchTokensProvider(\"sgx\", def);\r\n                monaco.languages.setLanguageConfiguration(\"sgx\", {\r\n                    comments: {\r\n                        lineComment: \"*\"\r\n                    }\r\n                });\r\n            }, \"text\");\r\n\r\n            // Build list of languages and populate picker\r\n            var MODES = (function() {\r\n                var modesIds = monaco.languages.getLanguages().map(function(lang) {\r\n                    return lang.id;\r\n                });\r\n                modesIds.sort();\r\n\r\n                return modesIds.map(function(modeId) {\r\n                    return {\r\n                        modeId: modeId,\r\n                        sampleURL: 'index/samples/sample.' + modeId + '.txt'\r\n                    };\r\n                });\r\n            })();\r\n            var $lp = $(\"#language-picker\");\r\n            for (var i = 0; i < MODES.length; i++) {\r\n                var o = document.createElement('option');\r\n                o.textContent = MODES[i].modeId;\r\n                $lp.append(o);\r\n            }\r\n            $lp.on(\"change\", setEditorLanguage);\r\n            $(\"#wdeditcancel\").on(\"click\", cancelEditor);\r\n            $(\"#wdeditsave\").on(\"click\", saveEditor);\r\n            // Update Theme\r\n            var $tp = $(\"#theme-picker\");\r\n            var savedTheme = getCookie(\"edtheme\");\r\n            if (savedTheme) $tp.val(savedTheme);\r\n            $tp.on(\"change\", function() {\r\n                //console.log($tp.get(0));\r\n                var currentTheme = $tp.get(0).options[$tp.get(0).selectedIndex].value;\r\n                setCookie(\"edtheme\", $tp.val(), 30);\r\n                monaco.editor.setTheme(currentTheme);\r\n            });\r\n            $('#inline-diff').on(\"change\", function() {\r\n                var bSideBySide = !$(this).is(':checked');\r\n                editor.updateOptions({\r\n                    renderSideBySide: bSideBySide\r\n                });\r\n                setCookie(\"edsbs\", bSideBySide, 30);\r\n            });\r\n        });\r\n    }\r\n    // Change Editor Settings\r\n    function updateEditorSettings() {\r\n        //editor.updateOptions({\r\n        //    lineNumbers: true\r\n        //});\r\n    }\r\n    /**\r\n     * Shows the Editor\r\n     */\r\n    function showEditor() {\r\n        hotkeys.setScope(\"editor\");\r\n        $(\"#editorcontainer\").show();\r\n        // flip cursor to ready\r\n        WD.ready();\r\n    }\r\n    /**\r\n     * Hides the Editor\r\n     */\r\n    function hideEditor() {\r\n        $(\"#editorcontainer\").hide();\r\n    }\r\n    /**\r\n     * Sets the language of the file being editted\r\n     */\r\n    function setEditorLanguage() {\r\n        var $lang = $(\"#language-picker :selected\");\r\n        var myModel = editor.getModel();\r\n        if (myModel.original) {\r\n            monaco.editor.setModelLanguage(myModel.original, $lang.text());\r\n            monaco.editor.setModelLanguage(myModel.modified, $lang.text());\r\n        } else {\r\n            monaco.editor.setModelLanguage(myModel, $lang.text());\r\n        }\r\n    }\r\n    /**\r\n     * Cancels the editting of the current file\r\n     */\r\n    function cancelEditor() {\r\n        hideEditor();\r\n        clearEditor();\r\n        // Send some command back to terminate editing\r\n        WD.input(WD.ESCAPE + \"WHIR:WDEC\" + WD.VM + \"CANCEL\", true);\r\n    }\r\n    /**\r\n     * Clear Editor and its model(s)\r\n     */\r\n    function clearEditor() {\r\n        var index, len;\r\n        var models;\r\n        if (editor) {\r\n            if (editor.getModels) {\r\n                models = editor.getModels();\r\n                for (index = 0, len = models.length; index < len; index++) {\r\n                    // console.log(\"Disposing editor model # \" + index.toString());\r\n                    models[index].dispose();\r\n                }\r\n            } else if (editor.getModel) {\r\n                var myModel = editor.getModel();\r\n                if (myModel) {\r\n                    if (myModel.original) {\r\n                        // console.log(\"Disposing diff models\");\r\n                        myModel.original.dispose();\r\n                        if (myModel.modified) {\r\n                            myModel.modified.dispose();\r\n                        }\r\n                        if (diffnav) {\r\n                            diffnav.dispose();\r\n                            diffnav = null;\r\n                        }\r\n                    } else {\r\n                        // console.log(\"Disposing editor model\");\r\n                        myModel.dispose();\r\n                    }\r\n                }\r\n            }\r\n            editor.dispose();\r\n            editor = null;\r\n        }\r\n        var $container = $('#editfilecontainer');\r\n        if ($container.data(\"oldtitle\")) {\r\n            document.title = $container.data(\"oldtitle\");\r\n            $container.removeData(\"oldtitle\");\r\n            $(\"#editorlabel\").html(\"\");\r\n        }\r\n    }\r\n    /**\r\n     * Called when Editting fails for some reason\r\n     */\r\n    function failEditor() {\r\n        hideEditor();\r\n        WD.input(WD.ESCAPE + \"WHIR:WDEC\" + WD.VM + \"FAIL-GEN\", true);\r\n    }\r\n    /**\r\n     * Callback for xhr (XML HTTP Request)\r\n     * @callback xhrCallback\r\n     * @param {string} error\r\n     * @param {string} data\r\n     */\r\n    /**\r\n     * XML HTTP Request\r\n     * @param {string} url\r\n     * @param {string} reqtype Request type (GET, POST, PUT, etc.)\r\n     * @param {string} outdata Data to be sent (on POST, PUT, etc.)\r\n     * @param {xhrCallback} cb callback\r\n     */\r\n    function xhr(url, reqtype, outdata, cb) {\r\n        $.ajax({\r\n            type: reqtype,\r\n            url: url,\r\n            dataType: 'text',\r\n            data: outdata,\r\n            processData: false,\r\n            contentType: \"text/plain\",\r\n            error: function(jqXHR, textStatus, errorThrown) {\r\n                cb(jqXHR, this, null);\r\n            }\r\n        }).done(function(data, textStatus, jqXHR) {\r\n            cb(jqXHR, null, data);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Load Editor content\r\n     * @param {string} uri - uri to source\r\n     * @param {string} language - Force code language used\r\n     * @param {boolean} readonly - Whether the document is readonly or not\r\n     */\r\n    function loadEditorContent(uri, language, readonly) {\r\n        xhr(approot + sid + \"/edit/\" + uri, \"GET\", \"\", function(jqXHR, err, data) {\r\n            var $container = $('#editfilecontainer');\r\n\r\n            clearEditor();\r\n\r\n            if (err) {\r\n                console.error(err);\r\n                hideEditor();\r\n                return;\r\n            }\r\n\r\n            if (!editor) {\r\n                $container.empty();\r\n                showEditor();\r\n                var $tp = $(\"#theme-picker\");\r\n                var currentTheme = $tp.get(0).options[$tp.get(0).selectedIndex].value;\r\n                editor = monaco.editor.create($container.get(0), {\r\n                    model: null,\r\n                    theme: currentTheme,\r\n                    readOnly: readonly,\r\n                    wordBasedSuggestions: false\r\n                    //                     quickSuggestions: false\r\n                });\r\n            }\r\n\r\n            // Create model\r\n            var oldModel = editor.getModel();\r\n            var newModel = monaco.editor.createModel(data, language, monaco.Uri.file(uri));\r\n            editor.setModel(newModel);\r\n            if (oldModel) {\r\n                oldModel.dispose();\r\n            }\r\n\r\n            // add uppser and case shortcuts (CTRL-SHIFT-U/S)\r\n            editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.KEY_U, function() {\r\n                editor.trigger(\"anystring\", \"editor.action.transformToUppercase\");\r\n            });\r\n            editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.KEY_L, function() {\r\n                editor.trigger(\"anystring\", \"editor.action.transformToLowercase\");\r\n            });\r\n\r\n            var $lp = $(\"#language-picker\");\r\n            $lp.get(0).value = editor.getModel().getModeId();\r\n            $('#inline-diff').parent().addClass(\"hidden\");\r\n            $('#diffnavprev').parent().addClass(\"hidden\");\r\n\r\n            // Update page title / browser tab caption, if editing in main session (not a pop-up tab)\r\n            if (!readonly) {\r\n                $container.data(\"oldtitle\", document.title);\r\n                document.title = 'Editing \"' + uri.split(\"\\\\\").slice(-1)[0].split(\"/\").slice(-1)[0] + '\"';\r\n                $(\"#editorlabel\").html(document.title);\r\n            }\r\n\r\n            $container.data(\"uri\", sid + \"/edit/\" + uri);\r\n\r\n            editor.focus();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Load Diff Editor content\r\n     * @param {string} uriOrig - URI to original copy of file (old)\r\n     * @param {string} uriMod - URI to modified copy of file (new)\r\n     * @param {string} language - Force source language used\r\n     */\r\n    function loadDiffEditorContent(uriOrig, uriMod, language) {\r\n        var dataOrig = \"\";\r\n        var dataMod = \"\";\r\n\r\n        if (uriOrig == uriMod) {\r\n            clearEditor();\r\n            var msgError = WD.loadstringliteral(\"IDS_WEB0001\", \"Filenames are identical\");\r\n            WD.showmessage({\r\n                msg: msgError,\r\n                msgtype: \"INFO\",\r\n                button: [{\r\n                    buttonlabel: WD.loadstringliteral(\"IDS_CAP0067\"),\r\n                    nosend: true,\r\n                    callback: function() {\r\n                        window.close();\r\n                    }\r\n                }],\r\n                header: WD.loadstringliteral(\"IDS_CAP0029\"),\r\n                image: \"wdres/info.svg\"\r\n            });\r\n            hideEditor();\r\n            return;\r\n        }\r\n        $.get({\r\n            url: approot + sid + \"/edit/\" + uriOrig,\r\n            dataType: \"text\"\r\n        }).then(function(data1) {\r\n            dataOrig = data1;\r\n            return $.get({\r\n                url: approot + sid + \"/edit/\" + uriMod,\r\n                dataType: \"text\"\r\n            });\r\n        }).done(function(data2) {\r\n            dataMod = data2;\r\n            var $container = $('#editfilecontainer');\r\n\r\n            clearEditor();\r\n\r\n            $container.empty();\r\n            showEditor();\r\n            var $tp = $(\"#theme-picker\");\r\n            var currentTheme = $tp.get(0).options[$tp.get(0).selectedIndex].value;\r\n\r\n            // Set diff view (default to side-by-side, if no cookie)\r\n            var $id = $('#inline-diff');\r\n            var savedSideBySide = (getCookie(\"edsbs\") === \"false\") ? false : true;\r\n            $id.prop(\"checked\", !savedSideBySide);\r\n\r\n            editor = monaco.editor.createDiffEditor($container.get(0), {\r\n                theme: currentTheme,\r\n                renderSideBySide: savedSideBySide,\r\n                readOnly: true // If host supported it, could edit while in diff mode\r\n            });\r\n\r\n            var originalModel = monaco.editor.createModel(dataOrig, language, monaco.Uri.file(uriOrig));\r\n            var modifiedModel = monaco.editor.createModel(dataMod, language, monaco.Uri.file(uriMod));\r\n\r\n            editor.setModel({\r\n                original: originalModel,\r\n                modified: modifiedModel\r\n            });\r\n\r\n            diffnav = monaco.editor.createDiffNavigator(editor, {\r\n                followsCaret: true, // resets the navigator state when the user selects something in the editor\r\n                ignoreCharChanges: true // jump from line to line\r\n            });\r\n\r\n            var $lp = $(\"#language-picker\");\r\n            $lp.get(0).value = originalModel.getModeId();\r\n\r\n            $id.parent().removeClass(\"hidden\");\r\n\r\n            $('#diffnavprev').parent().removeClass(\"hidden\");\r\n\r\n            //$container.data(\"uri\", sid + \"/edit/\" + uri);\r\n            $container.data(\"uri\", \"diff:\" + approot + sid + \"/edit/\" + uriOrig + \";\" + approot + sid + \"/edit/\" + uriMod);\r\n\r\n            editor.focus();\r\n        }).fail(function(jqXHR, textStatus, errorThrown) {\r\n            clearEditor();\r\n            var msgErrorPrefix = WD.loadstringliteral(\"IDS_WEBERR0001\", \"Compare failed with the following error:\"); \r\n            var msgError = msgErrorPrefix + \"<br>\" + errorThrown + \" (\" + jqXHR.status + \")\";\r\n            if (jqXHR.status == 404) {\r\n                // use jQuery to html-encode url as it could be specified by a malicious actor\r\n                msgError = msgError + \" on file '\" + $('<div/>').text(this.url).html() + \"'\";\r\n            }\r\n            WD.showmessage({\r\n                msg: msgError,\r\n                msgtype: \"ERROR\",\r\n                button: [{\r\n                    buttonlabel: WD.loadstringliteral(\"IDS_CAP0067\"),\r\n                    nosend: true,\r\n                    callback: function() {\r\n                        window.close();\r\n                    }\r\n                }],\r\n                header: WD.loadstringliteral(\"IDS_ERROR0022\"),\r\n                image: \"wdres/exclamation.svg\"\r\n            });\r\n            hideEditor();\r\n            return;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Saves any changes in the editor\r\n     */\r\n    function saveEditor() {\r\n        // PUT content back to WD\r\n        var $container = $('#editfilecontainer');\r\n        xhr($container.data(\"uri\"), \"PUT\", editor.getModel().getValue(monaco.editor.EndOfLinePreference.CRLF), function(jqXHR, err, data) {\r\n            if (err) {\r\n                console.error(\"err\");\r\n                WD.displaytoast({\r\n                    msg: WD.loadstringliteral(\"IDS_WEBERR0002\", \"Failed to save file.\") + \"<br><br>\" + jqXHR.responseText,\r\n                    msgtype: \"ERROR\"\r\n                });\r\n                return;\r\n            }\r\n\r\n            hideEditor();\r\n            clearEditor();\r\n        });\r\n    }\r\n    /**\r\n     * Opens an editor in a new tab\r\n     * \r\n     * @param {Object} command - Command object\r\n     * @param {string} command.type - DIFF-FILE\r\n     * @param {string} command.uriOrig - URI to original copy of file (old)\r\n     * @param {string} command.uriMod - URI to modified copy of file (new)\r\n     * @param {string} command.language - Language override\r\n     */\r\n    function launcheditorwindow(command) {\r\n        var targeturl;\r\n        if (command.type == \"DIFF-FILE\") {\r\n            targeturl = sid + \"/diff?mod=\" + encodeURIComponent(command.uriMod) + \"&orig=\" + encodeURIComponent(command.uriOrig);\r\n        } else {\r\n            targeturl = sid + \"/view?orig=\" + encodeURIComponent(command.uri);\r\n        }\r\n\r\n        window.open(targeturl);\r\n    }\r\n    // Utility Functions\r\n    function htmlUnescape(str) {\r\n        return str\r\n            .replace(/&quot;/g, '\"')\r\n            .replace(/&#39;/g, \"'\")\r\n            .replace(/&lt;/g, '<')\r\n            .replace(/&gt;/g, '>')\r\n            .replace(/&amp;/g, '&');\r\n    }\r\n    // Set Cookie\r\n    function setCookie(cname, cvalue, exdays) {\r\n        var d = new Date();\r\n        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n        var expires = \"expires=\" + d.toUTCString();\r\n        secure = \"\";\r\n        if (location.protocol === \"https:\") {\r\n            secure = \"; secure\";\r\n        }\r\n        document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=\" + approot + secure;\r\n    }\r\n    // Get Cookie\r\n    function getCookie(cname) {\r\n        var name = cname + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for (var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) == 0) {\r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    function getPromptObjects(id, partial, getnativeelems) {\r\n        // getnativeelems will get you native htmlelemnts instead of jquery (only for non partial now)\r\n        // get all objects that name ID\r\n        var querystr = \"[name='\" + id + \"']\";\r\n        if (partial) {\r\n            // include rows (which always have prompt id + _ + row)\r\n            querystr += \",[name*='\" + id + \"_']\";\r\n        }\r\n        var promptobjs = getnativeelems ? document.querySelectorAll(querystr) : $(querystr);\r\n        return promptobjs;\r\n    }\r\n    // Massage ID for use in jQuery selector (handles dots and things in ids)\r\n    function jQueryID(promptID) {\r\n        // Our Prompt ID's have : in them, which can confuse jQuery\r\n        // http://api.jquery.com/category/selectors/#Special_characters_in_selectors\r\n        return promptID.replace(/(!|\"|#|\\$|%|&|'|\\(|\\)|\\*|\\+|,|\\.|\\/|:|;|<|=|>|\\?|@|\\[|\\\\|\\]|\\^|`|{|\\||}| |~)/g, '\\\\$1');\r\n    }\r\n\r\n    function addHandlers() {\r\n        $(window).on(\"resize\", function() {\r\n            WD.repositionblocker();\r\n            if (editor) {\r\n                editor.layout();\r\n            }\r\n            WD.fixgridheader($(document));\r\n        }).on(\"focus\", function() {\r\n            if ($(\"div.focuselement\").length == 0) {\r\n                // We must have tabbed right off the screen and the WD.tab is still pending when we come back, but it's meaningless now\r\n                // We don't want alttab set under this condition, either, because focus is effectively lost and we want the jump to fire\r\n                // Set to -1 to handle the fact window.focus fires multiple times before the element focus triggers\r\n                if (WD.tab !== 0) {\r\n                    WD.tab = -1;\r\n                }\r\n                else if (searching) {\r\n                    // Searching with Ctrl+F falsely caused alttab to get set, losing some jump commands\r\n                    searching = false;\r\n                }\r\n                else if (WD.tab == 0) {\r\n                    alttab = true;\r\n                }\r\n            }\r\n        });\r\n        var isrequiredempty = false;\r\n        $(document).on('click', '.nav-pills a', function(event) {\r\n            // disable clicking on disabled boostrap nav pills\r\n            // console.log(\"clicking on nav-pill\",\r\n            // $(this).parent('li').hasClass('disabled'));\r\n            if ($(this).parent('li').hasClass('disabled')) {\r\n                event.preventDefault();\r\n                event.stopImmediatePropagation();\r\n                return false;\r\n            }\r\n        }).on(\"dblclick\", \".reactscreen\", function(event) {\r\n            var jElem = $(this);\r\n            jElem.css({\r\n                left: jElem.data(\"startcol\") + \"em\",\r\n                top: jElem.data(\"startrow\") + \"em\"\r\n            });\r\n            WD.positionscreen(jElem);\r\n            WD.positionmenubar(jElem, true);\r\n        }).on(\"click\", \".reactscreen\", function(event) {\r\n            var focusel = $(\".focuselement\");\r\n            if (focusel.length > 0) {\r\n                if (focusel.is(\":focus\") === false) {\r\n                    if (dirtydata === null) {\r\n                        focusel.trigger(\"focus\");\r\n                    }\r\n                }\r\n            }\r\n        }).on(\"input keyup\", \".prompt\", function(event) {\r\n            if (event.which !== 13 && event.which !== 9) {\r\n                $(this).data(\"dirty\", true);\r\n            }\r\n        }).on('keyup', '.grid table tbody tr', function(event) {\r\n            // hotkeys script doesnt support the insert key for some reason\r\n            if (event.which == 45) { // Insert Key\r\n                WD.input(WD.ESCAPE + \"F8\", true);\r\n            }\r\n        }).on(\"blur\", \"input, textarea\", function(event) {\r\n            \r\n            $('#promptliteral').html('')\r\n            .attr(\"title\", \"\");\r\n            \r\n            var target = event.target;\r\n            var classList = target.classList;\r\n\r\n            isrequiredempty = false;\r\n            if (target.required && !target.value && classList.contains(\"prompt\")) {\r\n                previousfocusinput = target;\r\n                event.preventDefault();\r\n                isrequiredempty = true;\r\n                return false;\r\n            }\r\n            \r\n        }).on(\"keyup\", \"textarea.prompt\", function(event) {\r\n            WD.resizeTextarea(this);\r\n        }).on(\"keydown\", \".prompt\", function(event) {\r\n            \r\n            var tagName =  (event.target.tagName || \"\").toLowerCase();\r\n            var isTextArea = tagName === 'textarea'; \r\n            if (isTextArea) {\r\n                WD.textareaKeyHandler(event);\r\n            } \r\n            \r\n            if ((tagName === 'input' || isTextArea) && event.key === 'Tab' && WD.tab !== 1 && $(event.target).parents(\".screen\").length !== 0) {\r\n                WD.tab = 1; // In Some Cases hotkeys is not setting tab to 1 on screens, do it on keydown\r\n            }\r\n\r\n        }).on(\"change\", \".promptcontainer input[type='text'].prompt,.promptcontainer input[type='password'].prompt,.promptcontainer textarea.prompt\", function(event) {\r\n            var evttarget = event.target;\r\n            if (!evttarget.value && evttarget.required) {\r\n                setTimeout(function() {\r\n                    evttarget.focus();\r\n                }, 80);\r\n                WD.displaytoast({msg: WD.loadstringliteral(\"IDS_WEBERR01\")});\r\n                previousfocusinput = evttarget;\r\n                return;\r\n            }\r\n            WD.updateelement(event,this);\r\n        }).on(\"dragstart\", \".promptcontainer input[type='text'].prompt,.promptcontainer input[type='password'].prompt,.promptcontainer textarea.prompt\", function(event) {\r\n            return false;\r\n        }).on(\"click\", \".promptcontainer input[type='radio'].prompt\", function(event) {\r\n            WD.updateelement(event,this);\r\n            return false;\r\n        }).on(\"focus\", \".promptcontainer input[type='text'].prompt,.promptcontainer input[type='password'].prompt,.promptcontainer textarea.prompt\", function(event) {\r\n            var target = event.target;\r\n            // In Jquery 3.7 focus event is triggered on disabled element too while in older it is not (added condition for compatibility)\r\n            if (previousfocusinput && previousfocusinput.id != target.id && previousfocusinput.isConnected && isrequiredempty) {\r\n                event.preventDefault();\r\n                return false;\r\n            }\r\n            previousfocusinput = null;\r\n            if (!target.disabled) {\r\n                isrequiredempty = false;\r\n                WD.focuselement(event, this.id);\r\n                if (target.tagName.toLowerCase() !== 'textarea' && this.type == \"password\" && $(this).prop('readonly')) {\r\n                    this.removeAttribute('readonly'); \r\n                }\r\n            }\r\n\r\n        }).on(\"click\", \".menuitem\", function(e) {\r\n            // Highlight Menu Items\r\n            var jthis = $(this);\r\n            if (jthis.hasClass(\"selected\")) {\r\n                jthis.removeClass(\"selected\");\r\n            } else {\r\n                $(\".menuitem.selected\").removeClass(\"selected\");\r\n                jthis.addClass(\"selected\");\r\n            }\r\n        }).on(\"keydown\", \"body\", function(event) {\r\n            // detect crtl+c for elem\r\n            if (event.target && event.target.tagName.toLowerCase() === 'body' && event.ctrlKey && event.code === 'KeyC' && navigator.clipboard) {\r\n                var inputElem = $('.sshighlight input[disabled][type=\"text\"].focuselement');\r\n                if (inputElem.length > 0 && inputElem.val()) {\r\n                    navigator.clipboard.writeText(inputElem.val());\r\n                }\r\n            }\r\n        });\r\n        // Stop Passthrough Clicks\r\n        $('#windowblock').on(\"click\", function(e) {\r\n            e.stopPropagation();\r\n            return false;\r\n        });\r\n        /*\r\n         * Scroll vertically-fixed grid headers horizontally with body\r\n         *\r\n         * dom.on(\"scroll\",\".grid table tbody\"... doesn't work with scroll event\r\n         */\r\n        document.addEventListener('scroll', WD.scrollhandler, true /*Capture event*/ );\r\n\r\n        // Give message before leaving\r\n        $(window).on('beforeunload', function() {\r\n            if (selfreload || loggedout) {\r\n                return;\r\n            }\r\n\r\n            var LEAVE_MESSAGE = WD.loadstringliteral(\"IDS_WEB0014\", 'Leaving the page may cause loss of data. Are you sure you wish to leave?');\r\n            if ($(\"#start\").filter(isdisplayed).length == 0) {\r\n                return LEAVE_MESSAGE;\r\n            }\r\n        });\r\n\r\n        window.addEventListener('unload', function() {\r\n            navigator.sendBeacon(approot + sid + \"/logout\");\r\n        }, false);\r\n\r\n        // setup question dialog window\r\n        var questionwin = $(\"#question\").children().first();\r\n        questionwin.on(\"shown.bs.modal\", function() {\r\n            $(\"#questioninput\").trigger(\"focus\");\r\n        }).on(\"keyup\", function(e) {\r\n            if (e.which == 13) {\r\n                questionwin.find(\".okbutton\").trigger(\"click\");\r\n            } else if (e.which == 27) {\r\n                questionwin.find(\".cancelbutton\").trigger(\"click\");\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    // as a general note for all this hotkey stuff, any case where false is returned\r\n    // prevents it from passing on the key press. I.E; F3 causes something to pop up in \r\n    // AFW, and the same keypress in Chrome opens up the Search bar.\r\n    function setupHotkeys() {\r\n        // by default hotkeys dont trigger from input-type prompts\r\n        hotkeys.filter = function(e) {\r\n            // allow all things to trigger hotkeys.\r\n            // this can be modified to include certain types of prompts,\r\n            // or even set scope based on types of prompts as well\r\n            // i.e, make prompt-grid or prompt scopes and have hotkeys\r\n            // registered off of those.\r\n            return true;\r\n        };\r\n\r\n        //  Menu Scope hotkeys\r\n        hotkeys('f1,left,up,right,down,enter', 'menu-selected', function(e, handler) {\r\n            var selmenu = $(\".menu\", wcontainer).last().find(\".menuitem.selected\");\r\n            if (selmenu.length > 0) {\r\n                switch (handler.key) {\r\n                    case \"up\":\r\n                        selmenu.removeClass(\"selected\");\r\n                        var prevmenu;\r\n                        if ($(\".menu:last .menusection:first\", wcontainer).is(selmenu.parent())) {\r\n                            // if they are the first, go to the last menu section\r\n                            prevmenu = $(\".menu:last\", wcontainer).find(\".menusection:last\");\r\n                        } else {\r\n                            prevmenu = selmenu.parent().prev(\".menusection\");\r\n                        }\r\n                        prevmenu.find(\".menuitem:first\", wcontainer).addClass(\"selected\");\r\n                        break;\r\n                    case \"down\":\r\n                        selmenu.removeClass(\"selected\");\r\n                        var nextmenu;\r\n                        if ($(\".menu:last .menusection:last\", wcontainer).is(selmenu.parent())) {\r\n                            // if they are the last, fo to the first menu section\r\n                            nextmenu = $(\".menu:last\").find(\".menusection:first\");\r\n                        } else {\r\n                            nextmenu = selmenu.parent().next(\".menusection\");\r\n                        }\r\n                        nextmenu.find(\".menuitem:first\", wcontainer).addClass(\"selected\");\r\n                        break;\r\n                    case \"left\":\r\n                        selmenu.removeClass(\"selected\");\r\n                        if (selmenu.parent().find(\".menuitem:first\").is(selmenu)) {\r\n                            // if they are first, go to the last in the row\r\n                            selmenu.parent().find(\".menuitem:last\").addClass(\"selected\");\r\n                        } else {\r\n                            selmenu.prev(\".menuitem\").addClass(\"selected\");\r\n                        }\r\n                        break;\r\n                    case \"right\":\r\n                        selmenu.removeClass(\"selected\");\r\n                        if (selmenu.parent().find(\".menuitem:last\").is(selmenu)) {\r\n                            // if they are last, go to the first in the row\r\n                            selmenu.parent().find(\".menuitem:first\").addClass(\"selected\");\r\n                        } else {\r\n                            selmenu.next(\".menuitem\").addClass(\"selected\");\r\n                        }\r\n                        break;\r\n                    case \"enter\":\r\n                        selmenu.trigger(\"click\");\r\n                        break;\r\n                    case \"f1\":\r\n                        WD.input(\"?\" + selmenu.attr(\"id\"), false);\r\n                        return false;\r\n                }\r\n            }\r\n        });\r\n        hotkeys(\"*\", \"menu\", function() {\r\n            // var keypressed = hotkeys.getPressedKeyCodes();\r\n            // limit some keys maybe?\r\n            //if (keypressed >= 91 && keypressed <= 46) { return false; }\r\n            var selmenu = $(\".menu\", wcontainer).last().find(\".menuitem.selected\");\r\n            if (selmenu.length == 0) {\r\n                $(\".menu\", wcontainer).last().find(\".menuitem:first\").addClass(\"selected\");\r\n                // change scope so events dont double fire\r\n                hotkeys.setScope(\"menu-selected\");\r\n            }\r\n        });\r\n        // show select hotkeys\r\n        hotkeys('up,down,pageup,pagedown,enter', 'showselect', function(e, handler) {\r\n            var row = $(\"tr\").filter(\".sshighlight\").filter(\"[data-promptno='\" + hostfocusprompt + \"']\");\r\n            if (row.length > 0) {\r\n                var currow = row.parent().children().index(row) + 1;\r\n                var newrow = 0;\r\n                if (handler.key == \"enter\") {\r\n                    // treat as double click\r\n                    var hascheckbox = (row.find(\":checkbox\").length > 0);\r\n                    WD.ssdblclick(row, currow, true, !hascheckbox);\r\n                } else {\r\n                    switch (handler.key) {\r\n                        case \"up\":\r\n                            newrow = -1;\r\n                            break;\r\n                        case \"pageup\":\r\n                            newrow = -5;\r\n                            break;\r\n                        case \"down\":\r\n                            newrow = 1;\r\n                            break;\r\n                        case \"pagedown\":\r\n                            newrow = 5;\r\n                            break;\r\n                    }\r\n                    newrow = currow + newrow;\r\n                    if (newrow > row.parent().children().length) {\r\n                        newrow = 1;\r\n                    }\r\n                    if (newrow !== 0) {\r\n                        // treat as single click\r\n                        WD.ssprocessclick(row, newrow, false, (row.find(\":checkbox\").length == 0), true);\r\n                        e.preventDefault();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //  Screen Scope hotkeys\r\n        hotkeys(\"f1,f3,f8,tab,shift+tab,alt+down,enter,esc,up,down,pageup,pagedown\", \"screen\", function(e, handler) {\r\n            switch (handler.key) {\r\n                case \"f1\":\r\n                    WD.input(WD.ESCAPE + \"F1\", true);\r\n                    return false;\r\n                case \"f8\":\r\n                    WD.input(WD.ESCAPE + \"F8\", true);\r\n                    break;\r\n                case \"shift+tab\":\r\n                    WD.tab = 2;\r\n                    break;\r\n                case \"tab\":\r\n                    WD.tab = 1;\r\n                    break;\r\n                case \"enter\":\r\n                    // really, want to do an update element if the data has changed\r\n                    var elem = $(e.target);\r\n                    if (elem.parents(\".screen\").length > 0) {\r\n                        if (elem.is(\":button\")) {\r\n                            elem.trigger(\"click\");\r\n                            return false;\r\n                        } else if (elem.data(\"dirty\") != true) {\r\n                            // nothing changed, so let's let the host move focus\r\n                            // This goes against everything I stand for\r\n                            blurprompt();\r\n                            WD.senddata(\"R\", true);\r\n                            return false;\r\n                        } else {\r\n                            return true;\r\n                        }\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                    break;\r\n                case \"esc\":\r\n                    document.execCommand('undo', false, null);\r\n                    break;\r\n                case \"alt+down\":\r\n                    WD.input(WD.ESCAPE + \"?\", true);\r\n                    break;\r\n                case \"up\":\r\n                    if ($(\".ui-autocomplete:visible\").length === 0 && (e.target.id !== \"tclinput\")) {\r\n                        blurprompt();\r\n                        WD.senddata(\"U\", true);\r\n                    }\r\n                    break;\r\n                case \"down\":\r\n                    if ($(\".ui-autocomplete:visible\").length === 0 && (e.target.id !== \"tclinput\")) {\r\n                        blurprompt();\r\n                        WD.senddata(\"D\", true);\r\n                    }\r\n                    break;\r\n                case \"pagedown\":\r\n                    blurprompt();\r\n                    WD.senddata(\"N\", true);\r\n                    break;\r\n                case \"pageup\":\r\n                    blurprompt();\r\n                    WD.senddata(\"P\", true);\r\n                    break;\r\n            }\r\n        });\r\n        //  Global Scope hotkeys\r\n        hotkeys('f2,f3,f4,shift+f4,f5,f9,ctrl+f', function (e, handler) {\r\n            switch (handler.key) {\r\n                case \"f2\":\r\n                    blurprompt();\r\n                    WD.senddata(\"F2\", true);\r\n                    break;\r\n                case \"f3\":\r\n                    WD.input(WD.ESCAPE + \"F3\", true);\r\n                    return false;\r\n                case \"shift+f4\":\r\n                    WD.input(WD.ESCAPE + \"EXITTOLEVEL\", true);\r\n                    return false;\r\n                case \"f4\":\r\n                    WD.input(WD.ESCAPE + \"F4\", true);\r\n                    return false;\r\n                case \"f5\":\r\n                    return false;\r\n                case \"f9\":\r\n                    WD.input(WD.ESCAPE + \"F9\", true);\r\n                    break;\r\n                case \"ctrl+f\":\r\n                    searching = true;\r\n                    break;\r\n            }\r\n\r\n        });\r\n        //Editor scope hotkeys\r\n        hotkeys('ctrl+s,ctrl+q,f3', \"editor\", function(e, handler) {\r\n            switch (handler.key) {\r\n                case \"ctrl+s\":\r\n                    var ERR_MSG = WD.loadstringliteral(\"IDS_WEBERR0006\", \"Are you sure you wish to save and exit?\");\r\n                    WD.showmessage({\r\n                        msg: ERR_MSG,\r\n                        msgtype: \"ERROR\",\r\n                        button: [{\r\n                            buttonlabel: WD.loadstringliteral(\"IDS_CAP0095\"),\r\n                            nosend: true,\r\n                            callback: function() {\r\n                                $(\"#wdeditsave\").trigger(\"click\");\r\n                            }\r\n                        }, {\r\n                            buttonlabel: WD.loadstringliteral(\"IDS_CAP0096\"),\r\n                            nosend: true\r\n                        }],\r\n                        header: WD.loadstringliteral(\"IDS_WEB0002\", \"Confirm save and exit\") ,\r\n                        image: \"wdres/exclamation.svg\"\r\n                    });\r\n                    return false;\r\n                case \"ctrl+q\":\r\n                    $(\"#wdeditcancel\").trigger(\"click\");\r\n                    return false;\r\n                case \"f3\":\r\n                    return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    function getpromptnum(promptid, includerow) {\r\n        if (!promptid) {\r\n            return 0;\r\n        }\r\n        var temp = promptid.split(\"_\");\r\n        if (includerow && temp.length > 2) {\r\n            return temp[1] + \".\" + temp[2];\r\n        } else {\r\n            return temp[1];\r\n        }\r\n    }\r\n\r\n    function blurprompt() {\r\n        if (document.activeElement) {\r\n            document.activeElement.blur();\r\n        }\r\n    }\r\n    /*\r\n     * Ensure that only one invocation is processed over some period of time\r\n     */\r\n    function processingevent(target, eventname, duration) {\r\n        // target : DOM element, not string\r\n        // eventname : eg. \"click\"\r\n        // duration : Time to wait before resetting in milliseconds\r\n        $target = $(target);\r\n        eventname = eventname || \"\";\r\n        duration = duration || 1000;\r\n        dataname = \"processing-\" + eventname;\r\n\r\n        if ($target.data(dataname)) {\r\n            // Already processing\r\n            return true;\r\n        } else {\r\n            // Start processing\r\n            $target.data(dataname, true);\r\n            setTimeout(function(target, data) {\r\n                target.data(data, false);\r\n            }, duration, $target, dataname);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function showupcancel() {\r\n        var $tool = $(\"#COMMANDBAR_BAND_bndToolbarStandardCOMMANDBAR_TOOL_attCancelUp img, #COMMANDBAR_BAND_bndMenuStandardCOMMANDBAR_TOOL_attCancelUp img\");\r\n        if ($tool.length) {\r\n            var src = $tool.attr(\"src\");\r\n            if ($(\".screen\", wcontainer).filter(isdisplayed).length) {\r\n                // Have screen, show Cancel\r\n                src = src.replace(\"uptool.svg\", \"canceltool.svg\");\r\n                \r\n                $tool.attr(\"src\",src);\r\n                $tool.attr(\"title\",\"Cancel\");\r\n                $tool.attr(\"alt\",\"Cancel\");\r\n            } else {\r\n                // Do not have screen, show Up\r\n                src = src.replace(\"canceltool.svg\", \"uptool.svg\");\r\n                \r\n                $tool.attr(\"src\",src);\r\n                $tool.attr(\"title\",\"Up\");\r\n                $tool.attr(\"alt\",\"Up\");\r\n            }\r\n            \r\n        }\r\n    }\r\n    // Public Stuff\r\n    return {\r\n        // Constants\r\n        tab: 0,\r\n        ESCAPE: String.fromCharCode(27),\r\n        AM: String.fromCharCode(254),\r\n        VM: String.fromCharCode(253),\r\n        SM: String.fromCharCode(252),\r\n        // Functions\r\n        init: function() {\r\n            mainwindow = true;\r\n            window.name = \"WD_\" + sid.substr(0, 8);\r\n            setupTerminal();\r\n            setupLogin();\r\n            setupHotkeys();\r\n            addHandlers();\r\n            setupEditor();\r\n            checkBrowser();\r\n            addWindowListener();\r\n            var storedmsg = sessionStorage.getItem(\"message\");\r\n            if (storedmsg) {\r\n                WD.displaytoast({\r\n                    \"msg\": storedmsg,\r\n                    \"msgtype\": sessionStorage.getItem(\"msgtype\")\r\n                });\r\n                sessionStorage.removeItem(\"message\");\r\n                sessionStorage.removeItem(\"msgtype\");\r\n            }\r\n        },\r\n        gettcl: function() {\r\n            return $(\"#tcl\").children().first();\r\n        },\r\n        showtcl: function() {\r\n            WD.gettcl().addClass('show');\r\n            WD.hideconnecting();\r\n            setTerminalSize();\r\n            WD.tclsetfocus();\r\n            WD.ready();\r\n            terminal.scrollToBottom();\r\n        },\r\n        hidetcl: function() {\r\n            WD.gettcl().removeClass(\"show\");\r\n            var focusel = $(\".focuselement\");\r\n            if (focusel.length > 0 && focusel.filter(\":focus\").length == 0) {\r\n                focusel.trigger(\"focus\");\r\n            }\r\n        },\r\n        toggletcl: function() {\r\n            if (WD.gettcl().hasClass(\"show\")) {\r\n                WD.hidetcl();\r\n            } else {\r\n                WD.showtcl();\r\n            }\r\n        },\r\n        tclsetfocus: function() {\r\n            if (!$(\"#output .xterm-helper-textarea\").is(':focus') && !$(\"#tclinput\").is(':focus')) {\r\n                $(\"#tclinput\").trigger(\"focus\");\r\n            }\r\n            WD.cleartclwait();\r\n        },\r\n        requestlogout: function() {\r\n            var request = WD.ESCAPE + \"WDD\" + WD.AM + \"EXIT\";\r\n            WD.input(request);\r\n        },\r\n        logout: function(command) {\r\n            selfreload = true;\r\n            WD.delayedtoast(command);\r\n            var newloc;\r\n            if (autoconnect) {\r\n                newloc = approot + \"loggedout/\" + loginserver;\r\n                newloc = newloc.replace(\"//\", \"/\");\r\n                window.location = newloc;\r\n                //$(\"body\").load(\"/loggedout\");\r\n            } else if (serveroverride) {\r\n                newloc = approot + serveroverride;\r\n                if (accountoverride) {\r\n                    newloc += \"/\" + accountoverride;\r\n                }\r\n                newloc = newloc.replace(\"//\", \"/\");\r\n                window.location = newloc;\r\n            } else {\r\n                // A logout should be a clean thing\r\n                // Let error messages display, if navigating to external error page\r\n                setTimeout(function() {\r\n                    window.location.reload();\r\n                }, 1); // DoEvents, then reload\r\n            }\r\n        },\r\n        oldlogout: function() {\r\n            // deprecated code\r\n            // reset ourselves to the base\r\n            loggedout = true;\r\n            WD.closeallbrowsers();\r\n            WD.initui();\r\n            terminal.clear();\r\n            keepTCLhidden = true;\r\n            WD.hideconnecting();\r\n            WD.hidetcl();\r\n            WD.cleartclwait();\r\n            $(\".wdbg\").show();\r\n            WD.showstart();\r\n            $(\"#devout\").hide();\r\n            $(\"#logoutbutton\").hide();\r\n            WD.enablescreens();\r\n            document.title = $(\"body\").data(\"origtitle\");\r\n            $(\"#statusbar\").hide();\r\n        },\r\n        initui: function() {\r\n            wcontainer.empty().hide();\r\n            if (isgc) {\r\n                wcontainer.css('left', $(\"#commandbarcontainer\").outerWidth());\r\n            } else {\r\n                wcontainer.css('left', 0);\r\n            }\r\n            $(\"#commandbarcontainer\").empty().hide();\r\n            WD.updateprogressbar({\r\n                close: true\r\n            });\r\n            $(\"#WGBGB_1\").hide();\r\n        },\r\n        showstart: function() {\r\n            $(\"#start\").show()\r\n                .find(\"input\").prop(\"disabled\", false);\r\n        },\r\n        hidestart: function() {\r\n            $(\"#start\").hide()\r\n                .find(\"input\").prop(\"disabled\", true);\r\n        },\r\n        cleartclwait: function() {\r\n            if (idletimerid !== 0) {\r\n                clearTimeout(idletimerid);\r\n                idletimerid = 0;\r\n            }\r\n            $(\"#tcltoggle\").removeClass(\"tclactivity tclwaiting\");\r\n        },\r\n        enablescreens: function() {\r\n            //$(\"#thescreens\").attr(\"disabled\",false);\r\n            //$(\"input\").prop(\"readonly\", false);\r\n            //screensdisabled = false;\r\n        },\r\n        disablescreens: function() {\r\n            //$(\"#thescreens\").attr(\"disabled\",true);\r\n            //$(\"input\").prop(\"readonly\", true);\r\n            //screensdisabled = true; \r\n        },\r\n        writeTCL: function(tcldata) {\r\n            // buffer the screen so we have it for scrollback\r\n            var clearcode = WD.ESCAPE + \"[2J\";\r\n            if (isgc) {\r\n                clearcode = WD.ESCAPE + \"[J\";\r\n            }\r\n            if (tcldata.indexOf(clearcode) >= 0) {\r\n                tcldata = tcldata.replaceAll(clearcode, String.fromCharCode(10).repeat(tclrows) + clearcode);\r\n            }\r\n            terminal.write(htmlUnescape(tcldata));\r\n            var tcltoggle = $(\"#tcltoggle\"); \r\n            tcltoggle.addClass(\"tclactivity\");\r\n            if ($(\".screen,.menu\", wcontainer).length == 0 && !keepTCLhidden) {\r\n                // auto show if we don't have a menu / screen\r\n                WD.showtcl();\r\n            } else if (itemqueue.length == 0 && !keepTCLhidden) {\r\n                // show right away if nothing after this\r\n                WD.showtcl();\r\n            } else if (idletimerid === 0) {\r\n                idletimerid = setTimeout(function() {\r\n                    if (idletimerid !== 0) {\r\n                        tcltoggle.addClass(\"tclwaiting\").removeClass(\"tclactivity\");\r\n                        idletimerid = 0;\r\n                        if (!loggedout) {\r\n                            // don't show if we've already been logged out\r\n                            WD.showtcl();\r\n                        }\r\n                    }\r\n                }, MAX_TCL_IDLE_TIME);\r\n            }\r\n        },\r\n        processqueueitem: function() {\r\n            sentdata = true;\r\n            itemqueueprocessed = false;\r\n            // console.log(\"processqueueitem\");\r\n\r\n            var cmdpromptmap = {};\r\n            var tclcleared = false;\r\n            var isscreeninqueue = false;\r\n            var flash_msg_target;\r\n\r\n            while (itemqueue.length > 0) {\r\n                resp = itemqueue.shift();\r\n                // console.log(resp.datatype, itemqueue);\r\n                if (resp.datatype === \"TCL\") {\r\n                    if (resp.tcldata !== \"\") {\r\n                        WD.writeTCL(resp.tcldata);\r\n                    }\r\n                } else if (resp.datatype === \"COMMAND\") {\r\n                    // Command from WebDirect\r\n\r\n                    var respcommand = resp.command;\r\n                    var is_display_cmd = respcommand.type === \"DISPLAY\";\r\n                    var is_flash_msg = respcommand.msgtype === \"FLASH\";\r\n\r\n                    if (!tclcleared || !is_display_cmd) {\r\n                        WD.cleartclwait();\r\n                        WD.hidetcl();\r\n                        tclcleared = true;\r\n                    }\r\n\r\n                    if (is_flash_msg) {\r\n                        flash_msg_target = flash_msg_target === undefined ? respcommand.targetid : null;\r\n                    }\r\n\r\n                    var resptarget = is_display_cmd? String(respcommand.targetid || \"\").split(\"_\", 1)[0] : undefined;\r\n                    var cmdprompts = is_display_cmd? cmdpromptmap[resptarget] : undefined;\r\n\r\n                    if (is_display_cmd && resptarget && !cmdprompts) {\r\n                        var cmdpromptstemp = document.querySelectorAll('[name^=\"' + resptarget + '\"]');\r\n                        cmdprompts = {};\r\n\r\n                        cmdpromptstemp.forEach(function(elem) {\r\n                            var elemname = elem.getAttribute(\"name\");\r\n                            var cmpprompt = cmdprompts[elemname];\r\n                            if (!cmpprompt) {\r\n                                cmpprompt = cmdprompts[elemname] = [];\r\n                            }\r\n                            cmpprompt.push(elem);\r\n                        });\r\n                        cmdpromptmap[resptarget] = cmdprompts;\r\n                    }\r\n\r\n                    if (is_display_cmd && respcommand.focus && !isscreeninqueue && flash_msg_target && !respcommand.mvndx) {\r\n                        respcommand.flash_msg_target = flash_msg_target;\r\n                    }\r\n\r\n                    if (is_display_cmd && cmdprompts) {\r\n                        WD.displayprompt(respcommand, cmdprompts);\r\n                    } else {\r\n                        WD.runcommand(respcommand);\r\n                    }\r\n\r\n                    if (resp.prompting) {\r\n                        WD.ready();\r\n                        WD.doneconnecting();\r\n                    }\r\n                } else if (resp.datatype === \"\") {\r\n                    // nothing to do\r\n                } else {\r\n                    // Render Object From Host\r\n                    WD.cleartclwait();\r\n                    WD.hidetcl();\r\n\r\n                    var isScreen = resp.datatype === \"SCREEN\";\r\n                    isscreeninqueue = isscreeninqueue || isScreen;\r\n                \r\n                    var renderedarray = WD.render(resp);\r\n                    var rendered = renderedarray[0];\r\n                    var renderedstr = renderedarray[1] || \"\";\r\n                    if (!rendered) {\r\n                        // still waiting for data from the host, put us back on and pop\r\n                        itemqueue.unshift(resp);\r\n                        return;\r\n                    } \r\n                }\r\n            }\r\n            // done processing items, make sure right item has focus\r\n            WD.enablescreens();\r\n            var focusel = $(\".focuselement\");\r\n            if (focusel.length > 0 && focusel.filter(\":focus\").length == 0 && !WD.gettcl().is(\":visible\")) {\r\n                focusel.trigger(\"focus\");\r\n            }\r\n            sdrag = $(\".screen\", wcontainer).last().children();\r\n            if (sdrag.length > 0 && sdrag.data(\"position\") !== \"FULLSCREEN\") {\r\n                sdragparent = sdrag.parent();\r\n                sdragparentpos = sdragparent.position();\r\n                sdrag.draggable({\r\n                    containment: [sdragparentpos.left - 400,\r\n                        sdragparentpos.top - 400,\r\n                        sdragparentpos.left + sdragparent.outerWidth() + 400,\r\n                        sdragparentpos.bottom + sdragparent.outerHeight() + 400\r\n                    ],\r\n                    start: function(event, ui) {\r\n                        WD.positionmenubar($(this), true);\r\n                    },\r\n                    drag: function(event, ui) {\r\n                        WD.positionmenubar($(this), true);\r\n                    },\r\n                    stop: function(event, ui) {\r\n                        WD.positionmenubar($(this), true);\r\n                        var focusel = $(\".focuselement\");\r\n                        if (focusel.length > 0) {\r\n                            focusel.trigger(\"focus\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            WD.ready();\r\n            WD.startpoll();\r\n            sentdata = false;\r\n            itemqueueprocessed = true;\r\n            \r\n            while (clickqueue.length > 0) {\r\n                clickqueue.shift().trigger(\"click\");\r\n            }\r\n            // console.log(\"processqueue ends\")\r\n        },\r\n        processresponse: function(response) {\r\n            if (!mainwindow) {\r\n                return;\r\n            }\r\n            // handle responses\r\n            if (response && response.login) {\r\n                selfreload = true;\r\n                window.location.reload();\r\n            } else if (response && response.results.length > 0) {\r\n                // console.log(response.results);\r\n                itemqueue.push.apply(itemqueue, response.results);\r\n                if (response.renderids.length > 0) {\r\n                    // wait for render data\r\n                    // console.log(\"Renders for \", response.renderids);\r\n                    $.post(sid + \"/render\", {\r\n                        id: JSON.stringify(response.renderids)\r\n                    }, function(data) {\r\n                        // console.log(response.renderids, data);\r\n                        previousfocusinput = null;\r\n                        Object.assign(renderdataqueue, data);\r\n                        WD.processqueueitem();\r\n                    }).fail(function() {\r\n                        WD.logout({\r\n                            msg: WD.loadstringliteral(\"IDS_WEBERR0003\", \"Connection has been lost\"),\r\n                            msgtype: 'ERROR'\r\n                        });\r\n                    }).always(WD.ready.bind(this));\r\n                } else {\r\n                    WD.processqueueitem();\r\n                }\r\n            } else {\r\n                WD.startpoll();\r\n            }\r\n        },\r\n        render: function(response) {\r\n            // render item in UI\r\n            // Will need a way to add buttons to toolbar\r\n            var itemid = response.targetid;\r\n            var datatype = response.datatype;\r\n            var itemtoload = null;\r\n            var wc = wcontainer;\r\n            var renderid = \"r\" + response.renderid;\r\n            // early check to see if we have the data yet\r\n            var renderdata = renderdataqueue[renderid];\r\n            if (renderdata == undefined || renderdata == null) {\r\n                return [false, \"\"];\r\n            }\r\n            // remove from object\r\n            delete renderdataqueue[renderid];\r\n            // console.log(itemid, renderdata);\r\n            var screentoload = false;\r\n            if (response.datatype === \"COMMANDBAR\") {\r\n                wc = $(\"#commandbarcontainer\");\r\n                wc.html(\"<div id='\" + itemid + \"'></div>\");\r\n            } else if (response.datatype === \"COMMANDBARTOOL\") {\r\n                itemid = response.parentid + itemid;\r\n                var insertpos = response.position;\r\n                var itempos = -1;\r\n                wc = $(\"#commandbarcontainer\");\r\n\r\n                // Remove seperator if exists (it will be added again as part of button html)\r\n                var $itemsep = $(\"#\" + jQueryID(itemid + \"-sep\"), wc);\r\n                if ($itemsep.length) {\r\n                    $itemsep.remove();\r\n                }\r\n\r\n                // Get item or create placeholder if doesn't already exist\r\n                var $item = $(\"#\" + jQueryID(itemid), wc);\r\n                if ($item.length) {\r\n                    itempos = $(\"#\" + jQueryID(response.parentid) + \" > li\", wc).index($item);\r\n                    if (insertpos > itempos) {\r\n                        // Adjust insertion index if item is moving down/right\r\n                        insertpos += 1;\r\n                    }\r\n                } else {\r\n                    $item = $(\"<div/>\", {\r\n                        id: itemid\r\n                    });\r\n                }\r\n\r\n                // Find insertion point for new/updated tool\r\n                var $parentband = $(\"#\" + jQueryID(response.parentid), wc);\r\n                if ($parentband.length) {\r\n                    /*\r\n                     * nth-child is 1-based, insertpos is 0-based so this effectively\r\n                     * selects the n-1th element (the one before)\r\n                     */\r\n                    if (insertpos >= 0) {\r\n                        var $insertionpoint = $(\"#\" + jQueryID(response.parentid) + \" > :nth-child(\" + insertpos + \")\", wc);\r\n                        if ($insertionpoint.length) {\r\n                            // If I can find element at position-1, add after element\r\n                            if (insertpos != itempos) {\r\n                                // Only insert/move if item is in different location\r\n                                $insertionpoint.after($item);\r\n                            }\r\n                        } else {\r\n                            // if I have an empty band or can't find item, add inside band\r\n                            $parentband.prepend($item);\r\n                        }\r\n                    }\r\n                }\r\n            } else if (response.datatype === \"BGBROWSER\") {\r\n                if (itemid == \"WGBGB_1\") {\r\n                    if ($(\"body\").find(\"#\" + itemid).length === 0) {\r\n                        wc.before(\"<div id='\" + itemid + \"' class='\" + response.datatype.toLowerCase() + \"'></div>\");\r\n                    }\r\n                } else {\r\n                    if (wc.find(\"#\" + itemid).length === 0) {\r\n                        wc.append(\"<div id='\" + itemid + \"' class='\" + response.datatype.toLowerCase() + \"'></div>\");\r\n                    }\r\n                }\r\n            } else if ([\"SCREEN\", \"MENU\"].indexOf(datatype)!==-1) {\r\n\r\n                var datatypelower = datatype.toLowerCase();\r\n                hotkeys.setScope(datatypelower);\r\n                itemid = itemid + \"_\" + datatypelower;\r\n                screentoload = $(\"#\" + jQueryID(itemid)).length === 0;\r\n                if (screentoload) {\r\n                    wc.append(\"<div id='\" + itemid + \"' class='\" + datatypelower + \"'></div>\");\r\n                }\r\n            } else if (datatype === \"MENUBAR\") {\r\n                itemtoload = wc.find(\".wdmenubar\");\r\n                if (itemtoload.length === 0) {\r\n                    wc.append(\"<div id='\" + itemid + \"' class='wdmenubar'></div>\");\r\n                    itemtoload = wc.find(\".wdmenubar\");\r\n                }\r\n            } else if ([\"PROMPT\", \"GRID\", \"BUTTON\", \"TEXT\"].indexOf(datatype)!==-1) {\r\n                var screenObj = $(\"#\" + response.targetid.split(\"_\")[0] + \"_screen\").find(\".subscreen\");\r\n                if (screenObj.find(\"#\" + jQueryID(itemid)).length === 0) {\r\n                    if (response.datatype === \"PROMPT\") {\r\n                        var scrollable = screenObj.find(\".scrollable\");\r\n                        if (scrollable.length > 0) {\r\n                            screenObj = scrollable\r\n                        }\r\n                        screenObj.append(\"<span id='\" + itemid + \"' class='promptcontainer'></span>\");\r\n                    } else {\r\n                        screenObj.append(\"<span id='\" + itemid + \"'></span>\");\r\n                    }\r\n                }\r\n            }\r\n            // Make sure container shows\r\n            wc.show();\r\n            if ($(\"#start\").filter(isdisplayed).length > 0) {\r\n                WD.hidestart();\r\n            }\r\n\r\n            var activeId = document.activeElement.id;\r\n            var targetid = activeId ? response.targetid : \"\";\r\n            var tagname = document.activeElement.tagName.toLowerCase();\r\n            // if focus is on previous screen shift to current subscreen\r\n            if (screentoload && targetid && activeId.indexOf(targetid) === -1 && ['input', 'button'].indexOf(tagname) !== -1) {\r\n                /* \r\n                    If in previous screen focus was on input or button (blur doesn't take away tab functionality), \r\n                    creating new button adding to the screen and reset focus\r\n                    # SEE: https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus\r\n                */\r\n                var tempBt = $(\"<button></button>\");\r\n                var item = $(\"#\" + itemid);\r\n                item.append(tempBt[0]);\r\n                tempBt[0].focus();\r\n                tempBt.remove();\r\n            }\r\n            // console.log(\"render\",response, itemid);\r\n            itemtoload = itemtoload || $(\"#\" + jQueryID(itemid));\r\n            if (itemtoload.length > 0) {\r\n                if (response.datatype === \"PROMPT\") {\r\n                    var origitem = itemtoload;\r\n                    itemtoload = itemtoload.closest(\".promptcontainer\");\r\n                    if (itemtoload.length === 0) {\r\n                        // failed to find closest container\r\n                        itemtoload = origitem;\r\n                    }\r\n                    // I'd rather only remove these when I'm sure the load works\r\n                    // Would need to mark them somehow. Set a data tag?\r\n                //    $(\"label[for='\" + itemid + \"']\", wcontainer).remove();\r\n                }\r\n                // console.log(\"Render for \", response.renderid, renderdata.html(), data, itemtoload);\r\n                var data;\r\n                if (response.datatype === \"GRID\") {\r\n                    var proptext = renderdata;\r\n                    try {\r\n                        var propdict = JSON.parse(proptext);\r\n                        screens[0].addGrid(propdict);\r\n                        data = $(itemtoload[0]);\r\n                    } catch (e) {\r\n                        console.log(\"Error parsing renderdata\", renderdata, e);\r\n                    }\r\n                } else if (response.datatype === \"PROMPT\") {\r\n                    var proptext = renderdata;\r\n                    try {\r\n                        var propdict = JSON.parse(proptext);\r\n                        screens[0].addPrompt(propdict);\r\n                    } catch (e) {\r\n                        console.log(\"Error parsing renderdata\", renderdata, e);\r\n                    }\r\n                } else if (response.datatype === \"BUTTON\") {\r\n                    var proptext = renderdata;\r\n                    try {\r\n                        var propdict = JSON.parse(proptext);\r\n                        screens[0].addButton(propdict);\r\n                    } catch (e) {\r\n                        console.log(\"Error parsing renderdata\", renderdata, e);\r\n                    }\r\n                } else if(response.datatype === \"TEXT\"){\r\n                    var proptext = renderdata;\r\n                    try {\r\n                        var propdict = JSON.parse(proptext);\r\n                        screens[0].addText(propdict);\r\n                    } catch (e) {\r\n                        console.log(\"Error parsing renderdata\", renderdata, e);\r\n                    }\r\n                } else if (response.datatype === \"SCREEN\") {\r\n                    if (screens.length > 0 && response.targetid === screens[0].props.screenid) {\r\n                        WDC.unmountComponentAtNode(itemtoload[0]);\r\n                        screens.shift();\r\n                    }\r\n                    var proptext = renderdata;\r\n                    try {\r\n                        var propdict = JSON.parse(proptext);\r\n                        propdict[\"scheme\"] = structuredClone(schemesettings);\r\n                        propdict[\"isgc\"] = $(\"body\").hasClass(\"gc\")\r\n                        screens.unshift(WDC.render(WDC.createElement(WDC.Screen, propdict), itemtoload[0]));\r\n                        data = $(itemtoload[0]);\r\n                    } catch (e) {\r\n                        console.log(\"Error parsing renderdata\", renderdata, e);\r\n                    }\r\n                } else {\r\n                    data = $(renderdata)\r\n                    itemtoload.replaceWith(data);\r\n                }\r\n                if (data) {\r\n                    WD.processrender(data);\r\n                    WD.applyscheme(data);\r\n                }\r\n            }\r\n            return [true, renderdata];\r\n        },\r\n        processrender: function(renderitem) {\r\n            childScreen = renderitem.children('.reactscreen');\r\n            if (renderitem.is(\".screen, .menu\")) {\r\n                if (wcontainer.children(\".screen,.bgbrowser,.menu\").last().is(\".bgbrowser\")) {\r\n                    // need to move our screen/menu to after the browser\r\n                    renderitem.after(wcontainer.children(\".screen,.bgbrowser,.menu\").last());\r\n                }\r\n                if (renderitem.is(\".screen\")) {\r\n                    WD.positionscreen(childScreen);\r\n                    if (renderitem.is(isdisplayed)) {\r\n                        WD.positionmenubar(renderitem);\r\n                    }\r\n                    var focusprompt = childScreen.data(\"focuspromptid\");\r\n                    if (focusprompt !== undefined && focusprompt !== null && focusprompt != \"\") {\r\n                        WD.hostfocus(focusprompt);\r\n                    } else {\r\n                        // at least remove focus from previous item\r\n                        if (document.activeElement) {\r\n                            document.activeElement.blur();\r\n                        }\r\n                    }\r\n                    childScreen.removeAttr(\"data-focuspromptid\");\r\n                    renderitem.prevAll().find(\"input,textarea:not([readonly]),button\").prop(\"readOnly\", true).addClass(\"tempreadonly\");\r\n                    WD.addautocomplete(renderitem);\r\n                    WD.fixgridheader(renderitem);\r\n                }\r\n                WD.repositionblocker();\r\n            } else if (renderitem.is(\".navbar\")) {\r\n                jQuery.SmartMenus.Bootstrap.init();\r\n            } else if (renderitem.parents(\".navbar\").length) {\r\n                $(\".nav\").smartmenus('refresh');\r\n            } else if (renderitem.is(\".bgbrowser\")) {\r\n                if (renderitem.get(0).id == \"WGBGB_1\") {\r\n                    if (renderitem.is(isdisplayed)) {\r\n                        wcontainer.css('left', renderitem.css(\"width\"));\r\n                    } else {\r\n                        if (isgc) {\r\n                            wcontainer.css('left', $(\"#commandbarcontainer\").outerWidth());\r\n                        } else {\r\n                            wcontainer.css('left', 0);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderitem.is(isdisplayed) && renderitem.data(\"zorder\") == \"0\") {\r\n                        wcontainer.append(renderitem);\r\n                    }\r\n                    WD.repositionblocker();\r\n                }\r\n            } else if (renderitem.is(\".wdmenubar\")) {\r\n                WD.positionmenubar($(\".screen\", wcontainer).last());\r\n            }\r\n\r\n            if (renderitem.is(\".grid\")) {\r\n                var renderitemparent = renderitem.parent(); \r\n                WD.addautocomplete(renderitemparent);\r\n                WD.fixgridheader(renderitemparent);\r\n            }\r\n            WD.hidetcl();\r\n            // console.log(\"done rendering\");\r\n            showupcancel();\r\n        },\r\n        addautocomplete: function(parent) {\r\n            var inputs = parent.find(\"input\").filter(\"[data-list]\");\r\n            inputs.each(function() {\r\n                var prompt = $(this);\r\n                prompt.on(\"focus\", function() {\r\n                    prompt.autocomplete({\r\n                        source: WD.getaclist(prompt)\r\n                    });\r\n                });\r\n            });\r\n        },\r\n        getaclist: function(prompt) {\r\n            var listid = jQueryID(prompt.data(\"list\"));\r\n            var list = $(\"#\" + listid);\r\n            var results = [];\r\n            list.find(\"option\").each(function() {\r\n                results.push(this.value);\r\n            });\r\n            return results;\r\n        },\r\n        fixgridheader: function(gridparent) {\r\n            var theads = gridparent.find(\".grid thead\");\r\n            theads.each(function() {\r\n                var $thead = $(this);\r\n                var trs = $thead.find(\"tr\");\r\n                $thead.css({ minHeight: trs.outerHeight() + 2 });\r\n\r\n                var $tbody = $thead.closest('table').find('tbody');\r\n                var $headrow = $thead.find('tr:first');\r\n                var $bodyrow = $tbody.find('tr:first');\r\n                var scrollallowance = 50;\r\n                if ($bodyrow && $headrow && $headrow.width() !== $bodyrow.width()) {\r\n                    // Sync up row widths\r\n\r\n                    // Add padding to last col for scrollbar discrepancy\r\n                    if ($headrow.find(\"th\").length > 1) {\r\n                        $headrow.width($bodyrow.width());\r\n                        $lastheadcol = $headrow.find(\"th:last\");\r\n                        var slicesize = $lastheadcol.attr(\"colspan\") * -1;\r\n                        var cols = $bodyrow.find(\"td\").slice(slicesize);\r\n                        var colwidth = 0;\r\n                        cols.each(function() {\r\n                            colwidth += $(this).width();\r\n                        });\r\n                        $lastheadcol.css({\r\n                            minWidth: (colwidth + scrollallowance) + \"px\"\r\n                        });\r\n                    } else {\r\n                        $headrow.width($bodyrow.width() + scrollallowance);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        scrollhandler: function(e) {\r\n            var target = e.target;\r\n            if (target) {\r\n                var $tbody = $(target);\r\n                if ($tbody.is(\"div\")) {\r\n                    var $thead = $tbody.closest('table').find('thead');\r\n                    $thead.scrollLeft($tbody.scrollLeft());\r\n                }\r\n            }\r\n        },\r\n        positionscreen: function(renderitem) {\r\n            var screenpos = renderitem.data(\"position\");\r\n            if (screenpos && screenpos !== \"\" && screenpos !== \"FULLSCREEN\") {\r\n                var target = wcontainer;\r\n                // center is default\r\n                var my = \"center center\";\r\n                // move screen to correct location\r\n                if (screenpos === \"BOTTOMRIGHT\") {\r\n                    my = \"right bottom\";\r\n                } else if (screenpos === \"TOPRIGHT\") {\r\n                    my = \"right top\";\r\n                } else if (screenpos === \"BOTTOMLEFT\") {\r\n                    my = \"left bottom\";\r\n                } else if (screenpos === \"TOPLEFT\") {\r\n                    my = \"left top\";\r\n                } else if (screenpos === \"TOPCENTER\") {\r\n                    my = \"center top\";\r\n                } else if (screenpos === \"BOTTOMCENTER\") {\r\n                    my = \"center bottom\";\r\n                }\r\n                if (screenpos === \"CENTER\") {\r\n                    var prevscreen = wcontainer.find(\".reactscreen\").not(renderitem).last();\r\n                    if (prevscreen.length > 0 && prevscreen.is(isdisplayed) && prevscreen.position().left >= 0 && prevscreen.data(\"position\") !== \"FULLSCREEN\") {\r\n                        var calldifference = parseInt(prevscreen.data('screenid')) - parseInt(renderitem.data('screenid'));\r\n                        // need to make sure it's also not smaller than the new window\r\n                        if (calldifference < 2 && prevscreen.data(\"endrow\") == renderitem.data(\"endrow\") && prevscreen.height() >= renderitem.height()) {\r\n                            my = \"center bottom\";\r\n                            target = prevscreen;\r\n                        }\r\n                    }\r\n                }\r\n                renderitem.position({\r\n                    my: my,\r\n                    at: my,\r\n                    of: target\r\n                });\r\n            }\r\n            if (renderitem.data(\"startrow\") >= 0) {\r\n                // make sure screen fits if we have room for it\r\n                var bottom = renderitem.position().top + renderitem.outerHeight();\r\n                var top = renderitem.position().top;\r\n                var right = renderitem.position().left + renderitem.outerWidth();\r\n                // console.log(bottom, right, wcontainer.prop(\"clientHeight\"), wcontainer.prop(\"clientWidth\") );\r\n                // need to find scrollable tbody\r\n                if (top < 0) {\r\n                    // if we are off the top of the screen, move us down\r\n                    renderitem.css({\r\n                        top: 0\r\n                    });\r\n                } else if (bottom > wcontainer.prop(\"clientHeight\") && renderitem.outerHeight() < wcontainer.prop(\"clientHeight\") && renderitem.position().top > 0) {\r\n                    renderitem.css({\r\n                        top: (renderitem.position().top - (bottom - wcontainer.prop(\"clientHeight\")))\r\n                    });\r\n                    // console.log(\"moved screen up by\", (bottom - wcontainer.prop(\"clientHeight\")));\r\n                }\r\n                if (right > wcontainer.prop(\"clientWidth\") && renderitem.outerWidth() < wcontainer.prop(\"clientWidth\") && renderitem.position().left > 0) {\r\n                    renderitem.css({\r\n                        left: (renderitem.position().left - (right - wcontainer.prop(\"clientWidth\")))\r\n                    });\r\n                    // console.log(\"moved screen left by\", (right - wcontainer.prop(\"clientWidth\")));\r\n                }\r\n            }\r\n        },\r\n        runcommand: function(command) {\r\n            // console.log(\"Command\", command);\r\n            // run command\r\n            switch (command.type) {\r\n                case \"INITUI\":\r\n                    WD.initui();\r\n                    break;\r\n                case \"DONELOG\":\r\n                    loggedout = true;\r\n                    break;\r\n                case \"UPDATETITLE\":\r\n                    document.title = command.value;\r\n                    break;\r\n                case \"UPDATETEXT\":\r\n                    WD.updatetext(command);\r\n                    break;\r\n                case \"MAIL\":\r\n                    WD.updatemailstatus(command);\r\n                    break;\r\n                case \"LOGOUT\":\r\n                    WD.logout(command);\r\n                    break;\r\n                case \"NAVEXT\":\r\n                    itemqueue.length = 0;\r\n                    window.location.href = command.exturl + \"&return=\" + encodeURI(window.location.href);\r\n                    break;\r\n                case \"MSG\":\r\n                    // message\r\n                    // this should just be for flash messages\r\n                    // everything else should be an alert\r\n                    if (command.msgtype == \"FLASH\") {\r\n                        if (command.msg != \"\") {\r\n                            WD.displaytoast(command);\r\n                        }\r\n                    } else {\r\n                        WD.showmessage(command);\r\n                    }\r\n                    break;\r\n                case \"DISPLAY\":\r\n                    WD.displayprompt(command);\r\n                    break;\r\n                case \"UPDATEPROMPT\":\r\n                    WD.updateprompt(command);\r\n                    break;\r\n                case \"STATUSBAR\":\r\n                    WD.updateprogressbar(command);\r\n                    break;\r\n                case \"MENUBAR\":\r\n                    WD.updatemenubar(command);\r\n                    break;\r\n                case \"CLOSEMENU\":\r\n                case \"CLOSESCREEN\":\r\n                    WD.closecommand(command);\r\n                    showupcancel();\r\n                    break;\r\n                case \"CLEARFLASH\":\r\n                    WD.cleartoast();\r\n                    break;\r\n                case \"FIREEVENT\":\r\n                    WD.fireevent(command, true);\r\n                    break;\r\n                case \"UPDATEBROWSER\":\r\n                    WD.updatebrowser(command);\r\n                    break;\r\n                case \"EXTERNALBROWSER\":\r\n                    WD.externalbrowser(command);\r\n                    break;\r\n                case \"INSERTMV\":\r\n                    screens[0].insertRowInGrid(command.prompt, command.mvpos);\r\n                    break;\r\n                case \"DELETEMV\":\r\n                    screens[0].deleteRowFromGrid(command.prompt, command.mvpos);\r\n                    break;\r\n                case \"WAITONBUTTON\":\r\n                    hostfocusprompt = 0;\r\n                    dirtydata = null;\r\n                    dirtydataprompt = 0;\r\n                    $(\"#\" + jQueryID(command.targetid)).trigger(\"focus\").addClass(\"focuselement\");\r\n                    break;\r\n                case \"DONECONNECTING\":\r\n                    WD.doneconnecting();\r\n                    break;\r\n                case \"SHOWTCL\":\r\n                    WD.showtcl();\r\n                    break;\r\n                case \"DELITEM\":\r\n                    // console.log(command.targetid);\r\n                    $(\"#\" + jQueryID(command.targetid)).remove();\r\n                    break;\r\n                case \"CHANGECOLOUR\":\r\n                    // maintain list based on areas and just update info each time\r\n                    var schemeobj = {\r\n                        \"element\": command.targetid,\r\n                        \"area\": command.area\r\n                    };\r\n                    if (command.colour !== \"\") {\r\n                        schemeobj.colour = command.colour;\r\n                    }\r\n\r\n                    schemesettings[command.area] = schemeobj;\r\n                    WD.applyscheme();\r\n                    if (screens.length > 0) {\r\n                        screens[0].updateScheme(schemeobj);\r\n                    }\r\n                    break;\r\n                case \"FILEPICKER\":\r\n                    WD.ready();\r\n                    WD.selectfile(command);\r\n                    break;\r\n                case \"EDITFILE\":\r\n                    if (command.readonly) {\r\n                        launcheditorwindow(command);\r\n                    } else {\r\n                        loadEditorContent(command.uri, command.language, command.readonly);\r\n                    }\r\n                    break;\r\n                case \"DIFF-FILE\":\r\n                    launcheditorwindow(command);\r\n                    break;\r\n                case \"UPDATEACLIST\":\r\n                    WD.updateaclist(command);\r\n                    break;\r\n                case \"QUESTION\":\r\n                    WD.askquestion(command);\r\n                    break;\r\n                case \"INFO\":\r\n                    WD.getinfo(command);\r\n                    break;\r\n                case true:\r\n                    alert(WD.loadstringliteral(\"IDS_WEBERR0004\", \"unknown command type:\") + \" \" + command.type);\r\n                    break;\r\n            }\r\n        },\r\n        connect: function(event, root, captcha_val) {\r\n            if (!mainwindow) {\r\n                return;\r\n            }\r\n            // Makes Connection to Host Universe\r\n            window.history.replaceState(\"\", \"Connect\", approot);\r\n            connecturl = sid + \"/connect\";\r\n            rootelem = $(\"#\" + root);\r\n\r\n            var enable_logging = rootelem.find(\"#loggingsessioncheck\").prop(\"checked\");\r\n            reqdata = {\r\n                user: rootelem.find(\"#username\").val(),\r\n                password: rootelem.find(\"#password\").val(),\r\n                server: rootelem.find(\"#server\").val(),\r\n                account: rootelem.find(\"#account\").val(),\r\n                passcode: rootelem.find(\"#passcode\").val(),\r\n                captcha: captcha_val,\r\n                logging: enable_logging\r\n            };\r\n            if (rootelem.find(\"#ssl:checked\").length > 0) {\r\n                reqdata.ssl = \"Y\";\r\n            }\r\n            WD.cleartoast();\r\n            $.ajax({\r\n                url: connecturl,\r\n                method: \"POST\",\r\n                data: reqdata\r\n            }).done(function(data) {\r\n                connected = data.connect ? data.connect : 0;\r\n                relogin = data.login ? data.login : 0;\r\n                failed = data.error ? data.error : 0;\r\n                if (connected) {\r\n                    // $(\"#start\").hide();\r\n                    // $(\"#tclinput\").trigger(\"focus\");\r\n                    sid = data.sid;\r\n                    loggedout = false;\r\n                    WD.showconnecting();\r\n                    WD.startpoll();\r\n                    // Clear credentials for next session\r\n                    rootelem.find(\"#username\").val(\"\");\r\n                    rootelem.find(\"#password\").val(\"\");\r\n                } else if (relogin) {\r\n                    WD.logout({\r\n                        msg: data.error,\r\n                        msgtype: 'ERROR'\r\n                    });\r\n                } else if (failed) {\r\n                    WD.displaytoast({\r\n                        msg: data.error,\r\n                        msgtype: \"ERROR\"\r\n                    });\r\n                } else {\r\n                    WD.logout();\r\n                }\r\n            });\r\n            event.preventDefault();\r\n        },\r\n        autoconnect: function() {\r\n            if (!mainwindow) {\r\n                return;\r\n            }\r\n            // Makes Connection to Host Universe\r\n            connecturl = sid + \"/connect\";\r\n            connecting = true;\r\n            $.ajax({\r\n                url: connecturl,\r\n                method: \"POST\"\r\n            }).done(function(data) {\r\n                connected = data.connect ? data.connect : 0;\r\n                relogin = data.login ? data.login : 0;\r\n                failed = data.error ? data.error : 0;\r\n                if (connected) {\r\n                    sid = data.sid;\r\n                    loggedout = false;\r\n                    WD.startpoll();\r\n                } else if (relogin) {\r\n                    WD.logout({\r\n                        msg: data.error,\r\n                        msgtype: 'ERROR'\r\n                    });\r\n                } else if (failed) {\r\n                    WD.displaytoast({\r\n                        msg: data.error,\r\n                        msgtype: \"ERROR\"\r\n                    });\r\n                } else {\r\n                    WD.logout();\r\n                }\r\n            });\r\n            autoconnect = true;\r\n        },\r\n        runlogfile: function() {\r\n            if (!mainwindow) {\r\n                return;\r\n            }\r\n            $(\"#devout\").show();\r\n            // Runs a log file on the server\r\n            connecturl = sid + \"/logfile\";\r\n            reqdata = {\r\n                logfile: $(\"#logfilename\").val(),\r\n                logdelay: $(\"#logdelay\").val()\r\n            };\r\n            $.ajax({\r\n                url: connecturl,\r\n                method: \"GET\",\r\n                data: reqdata\r\n            }).done(function(data) {\r\n                if (data && data.error) {\r\n                    WD.displaytoast({\r\n                        msg: data.error,\r\n                        msgtype: \"ERROR\"\r\n                    });\r\n                } else {\r\n                    loggedout = false;\r\n                    WD.hidestart();\r\n                    WD.startpoll();\r\n                }\r\n            });\r\n        },\r\n        firetlb: function(e, prompt) {\r\n            // Fire Table Lookup for Prompt\r\n            var jPrompt = $(prompt);\r\n            if (jPrompt.is(\":disabled\")) {\r\n                return false;\r\n            }\r\n            if (getpromptnum(jPrompt.siblings(\"input\").first().get(0).id, true) != hostfocusprompt) {\r\n                WD.updateelement(e, jPrompt.siblings(\"input\").first().get(0), WD.ESCAPE + \"?\");\r\n                return false;\r\n            }\r\n            if (dirtydata !== WD.ESCAPE + \"?\") {\r\n                if (dirtydata !== null && dirtydata != \"\") {\r\n                    WD.input(\"?\" + dirtydata);\r\n                } else {\r\n                    WD.input(WD.ESCAPE + \"?\");\r\n                }\r\n                dirtydata = null;\r\n                jPrompt.addClass(\"active\");\r\n            }\r\n        },\r\n        updateelement: function(e, prompt, optvalue) {\r\n            // update an element\r\n            // may need to do something with promptid in future\r\n            // only trust things which are user initiated - isTrustred in\r\n            // Chrome/Firefox or\r\n            // which if initiated from mouse/keyboard (all browsers)\r\n            // ie: don't want focus() calls to send something to the host\r\n            // console.log(\"UpdateElement\",prompt.id, optvalue, prompt.value);\r\n            $(\"#promptliteral\").html(\"\")\r\n                .attr(\"title\", \"\");\r\n\r\n            var jPrompt = $(prompt);\r\n            var value = prompt.value;\r\n            var promptid = prompt.id;\r\n            var origvalue = jPrompt.data(\"orig\");\r\n            if (optvalue != null && optvalue != undefined) {\r\n                value = optvalue;\r\n            } else if (prompt.type == undefined || prompt.type == null) {\r\n                // do nothing\r\n            } else if (prompt.type == \"checkbox\") {\r\n                if (jPrompt.is(\":checked\")) {\r\n                    value = jPrompt.data('checkedvalue');\r\n                } else {\r\n                    value = jPrompt.data('uncheckedvalue');\r\n                }\r\n                if (jPrompt.parents(\".multiselect\").length == 0) {\r\n                    value = value + WD.AM + WD.ESCAPE + \"J\" + getpromptnum(promptid) + \".0\";\r\n                }\r\n                if (getpromptnum(promptid, false) == hostfocusprompt) {\r\n                    // we're good as is\r\n                } else {\r\n                    // let host know we've tried to move here\r\n                    WD.senddata(WD.ESCAPE + \"J\" + getpromptnum(promptid) + \".0\");\r\n                    sentdata = true;\r\n                }\r\n                //if (!jPrompt.hasClass(\"focuselement\")) {\r\n                //    value = WD.ESCAPE + \"J\" + getpromptnum(promptid) + \".0\" + WD.AM + value;\r\n                //}\r\n            } else if (prompt.type == \"radio\") {\r\n                jPrompts = getPromptObjects(prompt.name);\r\n                // console.log(\"current focus\",getpromptnum(prompt.name,false),hostfocusprompt);\r\n                promptid = prompt.name;\r\n                value = value + WD.AM + WD.ESCAPE + \"J\" + getpromptnum(promptid) + \".0\";\r\n                if (getpromptnum(promptid, false) == hostfocusprompt) {\r\n                    // we're good as is\r\n                } else {\r\n                    // let host know we've tried to move here\r\n                    WD.senddata(WD.ESCAPE + \"J\" + getpromptnum(promptid) + \".0\");\r\n                    sentdata = true;\r\n                }\r\n            }\r\n            if (value == WD.ESCAPE + \"?\" && getpromptnum(promptid, true) != hostfocusprompt) {\r\n                WD.senddata(WD.ESCAPE + \"J\" + getpromptnum(promptid, true));\r\n                sentdata = true;\r\n            }\r\n\r\n            if (prompt.oldvalue === undefined) {\r\n                prompt.oldvalue = \"\";\r\n            }\r\n            /*\r\n             * TLB Handling\r\n             * Get \"??\"/\"?\" before changed field value, so \"??\"/\"?\" ends up in dirtydata\r\n             * Tested order in both Chrome and Edge, so far no difference\r\n             */\r\n            if (dirtydata == WD.ESCAPE + \"?\" || dirtydata == \"?\") {\r\n                if (prompt.oldvalue != prompt.value) {\r\n                    // Perform lookup against entered data\r\n                    value = \"?\" + value;\r\n                    dirtydata = null;\r\n                } else {\r\n                    // No new value, so leave dirtydata alone\r\n                    return;\r\n                }\r\n            }\r\n            // trying to handle clearing field\r\n            if (value == \"\" && prompt.oldvalue != prompt.value && prompt.oldvalue != \"\") {\r\n                value = \" \" + WD.AM;\r\n            }\r\n            if (jPrompt.parent().hasClass(\"nav-pills\")) {\r\n                var data = \"WGUF:\" + ((promptid.split(\"_\")[0] - 500) % 1000) + \":\" + getpromptnum(promptid) + \":\" + value;\r\n                WD.disablescreens();\r\n                WD.senddata(data, true);\r\n            } else {\r\n                if (origvalue == value && !jPromptObj.data(\"dirty\")) {\r\n                    // don't send anything, from display command\r\n                } else {\r\n                    dirtydata = value;\r\n                    if (jPrompt.parents(\".multiselect, .showselect\").length == 0) {\r\n                        dirtydataprompt = getpromptnum(promptid, true);\r\n                    } else {\r\n                        dirtydataprompt = jPrompt.parents(\"tr\").data(\"promptno\") + \".\" + value;\r\n                    }\r\n                    if (!sentdata) {\r\n                        setTimeout(WD.pushdirtydata, 250);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        getjump: function(promptid) {\r\n            var data = WD.ESCAPE + \"J\";\r\n            data += getpromptnum(promptid, true);\r\n            if (data.indexOf(\".\") == -1) {\r\n                data += \".0\";\r\n            }\r\n            return data;\r\n        },\r\n        focused: function(promptid) {\r\n            // return true if we are the host focused element\r\n            if (hostfocusprompt.toString().split(\".\")[0] == getpromptnum(promptid, false)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n        focuselement: function(e, promptid) {\r\n            // send jump command to host\r\n            // promptid is Screen_Prompt\r\n            // only trust things which are user initiated - isTrustred in\r\n            // Chrome/Firefox or\r\n            // which if initiated from mouse/keyboard (all browsers)\r\n            // ie: don't want focus() calls to send something to the host\r\n            // console.log(\"Focus Element\", promptid, sentdata);\r\n            var jPrompt = $(\"#\" + jQueryID(promptid));\r\n            if (jPrompt.attr(\"click\")) {\r\n                // buttons issue an onfocus before onclick\r\n                // don't want to send to packets to host in this case\r\n                jPrompt.removeAttr(\"click\");\r\n                return;\r\n            }\r\n\r\n            var alreadyhasfocus = (hostfocusprompt == getpromptnum(promptid, true));\r\n            var focusedelement = jPrompt.hasClass(\"focuselement\");\r\n            var data = null;\r\n            var hasdirtydata = (dirtydata !== null);\r\n\r\n            var jPromptGrid = WD.getgridfromprompt(jPrompt);\r\n            \r\n            /* In some cases itemqueue is being processed and focusevent is triggered simualtnously \r\n                (in that case focus event should force send otherwise data is not synced)*/\r\n            var forcesend = !itemqueueprocessed && jPromptGrid && jPromptGrid.data(\"focusedgridrow\") !== promptid;\r\n\r\n            //console.log(\"focuselement sentdata=\"+ sentdata+ \", alttab=\" +alttab);\r\n            if ((!sentdata || forcesend) && (!alttab || !alreadyhasfocus)) {\r\n                if (hasdirtydata) {\r\n                    data = dirtydata;\r\n                }\r\n                dirtydata = null;\r\n                dirtydataprompt = 0;\r\n                //console.log(\"focuscheck\", hostfocusprompt, getpromptnum(promptid, true), alreadyhasfocus, focusedelement);\r\n                //console.log(e);\r\n                if (!alreadyhasfocus && !focusedelement && e !== null) {\r\n                    $(\".focuselement\").removeClass(\"focuselement\");\r\n                    if (data === null) {\r\n                        data = \"\";\r\n                    }\r\n                    // clearing fields can add another AM\r\n                    if (data !== \"\" && (typeof data === 'string' && data.search(WD.AM) == -1)) {\r\n                        data += WD.AM;\r\n                    }\r\n                    if (WD.tab > 0) {\r\n                        // console.log(promptid, WD.tab);\r\n                        if (WD.tab == 2) {\r\n                            data += WD.ESCAPE + \"L\";\r\n                        } else {\r\n                            data += WD.ESCAPE + \"R\";\r\n                        }\r\n                    } else if (!jPrompt.is(\"button,input[type=button]\")) {\r\n                        data += WD.getjump(promptid);\r\n                    }\r\n                }\r\n                //console.log(\"data=\"+data);\r\n            }\r\n\r\n            // Dismiss active flash message, unless on button\r\n            if (!alreadyhasfocus && !jPrompt.is(\"button\")) {\r\n                WD.cleartoast();\r\n                if (jPrompt.parents(\"td\").length > 0) {\r\n                    // if in a grid, make sure we scroll into view\r\n                    WD.scrollintoview(jPrompt.get(0));\r\n                }\r\n            }\r\n\r\n            // remove class from previous element, add to us\r\n            if (!alreadyhasfocus) {\r\n                WD.unsetfocus();\r\n            }\r\n            jPrompt.addClass(\"focuselement\");\r\n            WD.applyscheme(jPrompt);\r\n            if (jPrompt.length > 0) {\r\n                var promptliteral = jPrompt.data(\"promptliteral\");\r\n                $(\"#promptliteral\").html(promptliteral)\r\n                    .attr(\"title\", promptliteral);\r\n            }\r\n            var prompt = jPrompt.get(0);\r\n\r\n            // Store Old Value\r\n            if (prompt && prompt.type && (prompt.type.toLowerCase() !== \"radio\" && prompt.type.toLowerCase() !== \"checkbox\" && prompt.type.toLowerCase() !== \"submit\")) {\r\n                prompt.oldvalue = prompt.value;\r\n                prompt.select();\r\n            } else if (jPrompt.is(\"iframe\")) {\r\n                // This was some bad code, not sure what the intention was\r\n                // jPrompt.contentWindow.get\r\n            }\r\n\r\n            if (jPrompt.hasClass(\"manualprompt\")) {\r\n                WD.displaymanualprompt(jPrompt, true);\r\n                return;\r\n            }\r\n\r\n            // don't send stuff if we were already on the prompt\r\n            // console.log(\"focus\", promptid, data, alreadyhasfocus, alttab);\r\n            if (data != null && (!alreadyhasfocus || prompt.type.toLowerCase() == \"radio\" || prompt.type.toLowerCase() == \"checkbox\" || data.substr(0, 2) == (WD.ESCAPE + \"?\")) && !alttab) {\r\n                //if (hasdirtydata) { WD.disablescreens(); }\r\n                WD.disablescreens();\r\n                WD.senddata(data);\r\n                sentdata = true;\r\n                // console.log(\"We should send data\");\r\n            }\r\n            // reset tab key\r\n            WD.tab = 0;\r\n            alttab = false;\r\n            searching = false;\r\n            if (jPrompt.parents(\".editgrid\") && clicktimer) {\r\n                clearTimeout(clicktimer);\r\n                clicktimer = null;\r\n            }\r\n\r\n            if (jPromptGrid) {\r\n                jPromptGrid.data(\"focusedgridrow\", promptid);\r\n            }\r\n        },\r\n        // Supress multiple single clicks\r\n        // 500ms was too short, given the 450 delay we have before sending, increase to 750ms\r\n        // Apply to whole table instead of just one row, clicking quickly across rows also confused the host\r\n        ssclick: function(grid, row, send, dirty) {\r\n            if (!processingevent($(grid).parents(\"table\").get(0), \"click\", 750)) {\r\n                WD.ssprocessclick(grid, row, send, dirty, true);\r\n            }\r\n        },\r\n        ssdblclick: function(grid, row, send, dirty) {\r\n            if (!processingevent(grid, \"dblclick\", 500)) {\r\n                WD.ssprocessclick(grid, row, send, dirty, false);\r\n            }\r\n        },\r\n        ssprocessclick: function(grid, row, send, dirty, singleclick) {\r\n            var jgrid = $(grid);\r\n            WD.showselect(jgrid, row, send, dirty);\r\n            if (!singleclick) {\r\n                // Send the doubleclick, clear any pending singleclick\r\n                WD.sendrow(jgrid, row, send, dirty);\r\n            } else {\r\n                WD.input(WD.ESCAPE + \"WDD\" + WD.AM + \"ROW\" + WD.AM + jgrid.data(\"promptno\") + WD.AM + row, true);\r\n                if (send) {\r\n                    // only show busy if this should be a send\r\n                    WD.busy();\r\n                }\r\n                // Slap this in a timeout, want to handle double click vs single click in an appropriate fashion\r\n                clicktimer = setTimeout(function() {\r\n                    WD.sendrow(jgrid, row, send, dirty);\r\n                }, 450);\r\n            }\r\n        },\r\n        unsetfocus: function() {\r\n            var element = $(\".focuselement\");\r\n            element.removeClass(\"focuselement\");\r\n            element.data(\"dirty\", false);\r\n            // if focus element isn't active, but something else is\r\n            // remove focus from it\r\n            var currentel = document.activeElement;\r\n            if (currentel !== element.get(0) && !$(currentel).is(\"iframe\") && $(currentel).parents(\".screen\").length > 0) {\r\n                if (hostfocusprompt != getpromptnum(currentel.id, true)) {\r\n                    $(currentel).data(\"dirty\", false);\r\n                    document.activeElement.blur();\r\n                }\r\n            }\r\n            return element;\r\n        },\r\n        highlightrow: function(currentrow, row) {\r\n            tbody = currentrow.parent();\r\n            tbody.find(\"tr\").removeClass(\"sshighlight\");\r\n            currentrow.addClass(\"sshighlight\");\r\n            return currentrow;\r\n        },\r\n        showselect: function(currentrow, row, send, dirty) {\r\n            // console.log(\"showselect\", row, send);\r\n            // unfocus any other prompt that had focus\r\n            WD.unsetfocus();\r\n            document.activeElement.blur();\r\n            // remove any dirty data it may have set (can cause issues, AWD-1786)\r\n            dirtydata = null;\r\n            //  Set highlight on new row\r\n            var selectrow = WD.highlightrow(currentrow, row);\r\n            WD.scrollintoview(selectrow.get(0));\r\n            WD.gridsetpromptliteral(selectrow);\r\n\r\n            var disabledInput = selectrow.find(\"input[disabled]:first\");\r\n\r\n            if (document.activeElement.tagName.toUpperCase() === 'BODY') {\r\n                $(\".focuselement\").removeClass(\"focuselement\");\r\n                disabledInput.addClass(\"focuselement\");\r\n            }\r\n\r\n            return selectrow;\r\n        },\r\n        sendrow: function(selectrow, row, send, dirty) {\r\n            // console.log(\"Selecting \" + row, send, selectrow.data(\"promptno\"), hostfocusprompt, tbody.parents(\".multiselect\").length, dirty);\r\n            // process prompt\r\n            var hostprompt = hostfocusprompt.toString().split(\".\")[0];\r\n            // Let webdirect know what row is selected (for WC:QUERYROW)\r\n            if (send !== null && send !== undefined && send) {\r\n                if (dirtydata != null) {\r\n                    dirtydata = null;\r\n                    dirtydataprompt = 0;\r\n                }\r\n                WD.disablescreens();\r\n                if (parseInt(selectrow.data(\"promptno\")) !== parseInt(hostprompt)) {\r\n                    // WinGem sends this as TWO packets, wtf\r\n                    // WD has to send TWO packets too, with timeout set for 2nd packet, GC-349 \r\n                    WD.input(WD.ESCAPE + \"J\" + selectrow.data(\"promptno\") + \".\" + row);\r\n                    setTimeout(function() {\r\n                        WD.senddata(row);\r\n                    }, 500);\r\n                } else {\r\n                    WD.senddata(row);\r\n                }\r\n            } else if (parseInt(selectrow.data(\"promptno\")) !== parseInt(hostprompt) && (selectrow.parents(\"div.showselect\") || (dirtydataprompt != 0 && dirtydataprompt != (hostprompt + \".\" + row)))) {\r\n                WD.disablescreens();\r\n                WD.senddata(\"J\" + selectrow.data(\"promptno\") + \".\" + row, true);\r\n            } else if (dirty) {\r\n                // don't think we need to set dirty at all\r\n                // we do for show select grids on ok. SIGH.\r\n                dirtydata = row;\r\n                dirtydataprompt = selectrow.data(\"promptno\");\r\n            }\r\n            if (clicktimer !== null) {\r\n                clearTimeout(clicktimer);\r\n                clicktimer = null;\r\n            }\r\n        },\r\n        gridsetpromptliteral: function(row) {\r\n            var firstitem = row.find(\"input\").not(\"input[type=checkbox]\").first();\r\n            $(\"#promptliteral\").html(firstitem.data(\"promptliteral\"))\r\n                .attr(\"title\", firstitem.data(\"promptliteral\"));\r\n        },\r\n        pushdirtydata: function() {\r\n            // this gets queued up\r\n            if (sentdata) {\r\n                setTimeout(WD.pushdirtydata, 250);\r\n            } else if (dirtydata != null) {\r\n                // console.log(\"pushing dirty data\",dirtydata);\r\n                WD.disablescreens();\r\n                var data = dirtydata + WD.AM;\r\n                dirtydata = null;\r\n                dirtydataprompt = 0;\r\n                WD.senddata(data);\r\n            }\r\n        },\r\n        about: function() {\r\n            var $about = $(\"#about\");\r\n            if (!$about.length) {\r\n                $(\"body\").append(\"<div id='about'></div>\");\r\n                $('#about').on('hidden.bs.modal', function(e) {\r\n                    $(\".wdbg\").get(0).style.zIndex = \"-1\";\r\n                });\r\n                $about = $(\"#about\");\r\n            }\r\n            $about.load(sid + \"/about\", function() {\r\n                $(\".wdbg\").get(0).style.zIndex = \"1000\";\r\n                $about.children().first().modal();\r\n            });\r\n        },\r\n        buttonclick: function(target, senddata, escapedata) {\r\n            if (!screensdisabled) {\r\n\r\n                if (senddata === \"F2\" && target.id) { \r\n                    // if button is ok and is clicked return focus to same input\r\n                    var inputid = (target.id || \"\").split(\"_\", 1)[0];\r\n                    if (inputid) {\r\n                        var prompts = document.querySelectorAll(\"input.prompt[required][id^='\" + inputid + \"'\" );\r\n                        var promptcount = prompts.length;\r\n                        var counter = 0;\r\n                        while (counter < promptcount) {\r\n                            var prompt = prompts[counter];\r\n                            if (!prompt.value) {\r\n                                prompt.focus();\r\n                                WD.displaytoast({msg: WD.loadstringliteral(\"IDS_WEBERR01\")});\r\n                                return;\r\n                            }\r\n                            counter+=1;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!processingevent(target, \"click\", 1000)) {\r\n                    WD.cleartoast();\r\n                    WD.senddata(senddata, escapedata);\r\n                }\r\n            }\r\n        },\r\n        menuclick: function(target, senddata, escapedata) {\r\n            // make a seperate function in case we need to tweak numbers\r\n            // seperately.\r\n            // and also because JHO likes duplicating code.\r\n            if (!screensdisabled) {\r\n                if (!processingevent(target, \"click\", 500)) {\r\n                    WD.senddata(senddata, escapedata);\r\n                    WD.cleartoast();\r\n                }\r\n            }\r\n        },\r\n        senddata: function(data, escapedata) {\r\n            // Sending input data\r\n            if (escapedata !== null && escapedata !== undefined && escapedata) {\r\n                data = WD.ESCAPE + data;\r\n            }\r\n            // turn ino compound packet\r\n            if (dirtydata != null) {\r\n                // don't do this if data is the same as dirtydata\r\n                if (dirtydata != data && data !== \"\") {\r\n                    data = dirtydata + WD.AM + data;\r\n                }\r\n                dirtydata = null;\r\n                dirtydataprompt = 0;\r\n            }\r\n            WD.input(data);\r\n        },\r\n        busy: function() {\r\n            // If busy is called again and removeClass was not removed clear the timeout (as busy would have corresponding ready function call)\r\n            clearTimeout(waitingclasstimeoutid);\r\n            $(\"body\").addClass(\"waiting\");\r\n        },\r\n        ready: function() {\r\n            // in case there was an already ready function that was called earlier cancel it and reinit it\r\n            clearTimeout(waitingclasstimeoutid);\r\n            waitingclasstimeoutid = setTimeout(function() {\r\n                $(\"body\").removeClass(\"waiting\");\r\n            }, 300);\r\n        },\r\n        updateaclist: function(command) {\r\n            var target = $(\"#\" + jQueryID(command.name));\r\n            if (target.length > 0) {\r\n                target.empty();\r\n                for (var i = 0; i < command.list.length; i++) {\r\n                    var option = document.createElement(\"option\");\r\n                    option.value = command.list[i];\r\n                    target.append(option);\r\n                }\r\n            }\r\n        },\r\n        selectfile: function(command) {\r\n            if (command.origfile) {\r\n                $(\"#origfile\").removeClass('hidden');\r\n                $(\"#originalfilename\").html(command.origfile);\r\n            } else {\r\n                $(\"#origfile\").addClass('hidden');\r\n            }\r\n            $(\"#targetfilename\").html(command.targetfile);\r\n            $(\"#retfilename\").html(command.retfile);\r\n            $(\"#filepicker\").children().first().modal({\r\n                show: true,\r\n                keyboard: false,\r\n                backdrop: 'static'\r\n            });\r\n            $(\"#fileupload\").val(null);\r\n            $(\"#upload\").attr(\"disabled\", true);\r\n            $(\"#chosenfilenames\").empty();\r\n            $(\"#chosenfiles\").addClass(\"hidden\");\r\n        },\r\n        filechosen: function() {\r\n            // A file was chosen\r\n            /// console.log(\"filechosen\", $(\"#fileupload\").val());\r\n            var filename = $(\"#fileupload\").val().split('/').pop().split('\\\\').pop();\r\n            $(\"#chosenfilenames\").html(\"<span>\" + filename + \"</span><br/>\");\r\n            $(\"#chosenfiles\").removeClass(\"hidden\");\r\n            if (filename !== \"\") {\r\n                $(\"#upload\").attr(\"disabled\", false);\r\n            }\r\n        },\r\n        uploadfile: function() {\r\n            // upload given file\r\n            var data = $('#fileupload');\r\n            var filename = $('#targetfilename').html();\r\n            var formData = new FormData();\r\n            formData.append(\"upfile\", data.get(0).files[0]);\r\n            if (filename === \"\" && data.get(0).files[0]) {\r\n                // get filename from file picker\r\n                filename = data.get(0).files[0].name;\r\n            }\r\n            var retfilename = ($(\"#retfilename\").html() == \"true\");\r\n            if (retfilename) {\r\n                // test\r\n                formData.append(\"retfile\", 1);\r\n            }\r\n            if (data.get(0).files[0]) {\r\n                var successfunc = function(data, textStatus, xhr) {\r\n                    //console.log(\"File uploaded\", textStatus);\r\n                    //WD.displaytoast({\r\n                    //    msg: \"File uploaded succesfully\"\r\n                    //});\r\n                };\r\n                WD.doupload(filename, formData, successfunc);\r\n            } else {\r\n                if (retfilename) {\r\n                    WD.input(WD.ESCAPE + 'WHIR:');\r\n                } else {\r\n                    WD.input(WD.ESCAPE + 'WDF' + WD.AM + 'CANCEL');\r\n                }\r\n            }\r\n        },\r\n        doupload: function(filename, formData, callback) {\r\n            $.ajax({\r\n                url: sid + \"/upload/\" + encodeURIComponent(filename),\r\n                type: 'POST',\r\n                data: formData,\r\n                cache: false,\r\n                contentType: false,\r\n                enctype: 'multipart/form-data',\r\n                processData: false,\r\n                success: callback\r\n            });\r\n        },\r\n        cancelfileupload: function() {\r\n            var retfilename = ($(\"#retfilename\").html() == \"true\");\r\n            if (retfilename) {\r\n                WD.input(WD.ESCAPE + 'WHIR:');\r\n            } else {\r\n                WD.input(WD.ESCAPE + 'WDF' + WD.AM + 'CANCEL');\r\n            }\r\n        },\r\n        input: function(data, fireandforget, skipdata, noenter) {\r\n            // set flag to show that we are doing a request\r\n            if (!fireandforget) {\r\n                WD.busy();\r\n            }\r\n            var url = sid + \"/input\";\r\n            if (!mainwindow) {\r\n                url = approot + sid + \"/input\";\r\n                if (isgc && window.opener) {\r\n                    // Exclusions to the general rule of returning focus to the main window\r\n                    var sendfocus = true;\r\n                    if (data.search(\"csicmd:AIM-BROWSER\") > -1) {\r\n                        sendfocus = false;\r\n                    }\r\n                    if (data.search(\"csicmd:WO_FAVORITES\") > -1) {\r\n                        sendfocus = false;\r\n                    }\r\n                    if (sendfocus) {\r\n                        window.open('', window.opener.name);\r\n                    }\r\n                }\r\n                // report browsers don't have a socket, send data on the input path\r\n                $.ajax({\r\n                    url: url,\r\n                    method: \"POST\",\r\n                    data: {\r\n                        in: data,\r\n                        skipdata: 1,\r\n                        noenter: (noenter ? 1 : 0)\r\n                    }\r\n                }).always(WD.ready.bind(this));\r\n            }\r\n            if (socket) {\r\n                socket.emit(\"incoming\", {\r\n                    data: {\r\n                        in: data,\r\n                        session: sid,\r\n                        noenter: (noenter ? 1 : 0)\r\n                    }\r\n                }, WD.ready.bind(this));\r\n            }\r\n        },\r\n        startpoll: function() {\r\n            // prevent sleeping tabs here\r\n            if (mainwindow && !lockResolver) {\r\n                if (navigator && navigator.locks && navigator.locks.request) {\r\n                    const promise = new Promise((res) => {\r\n                        lockResolver = res;\r\n                    });\r\n                    navigator.locks.request(sid, { mode: \"shared\" }, () => {\r\n                        return promise;\r\n                    });\r\n                }\r\n            }\r\n            if (socket) {\r\n                return;\r\n            }\r\n            if (!mainwindow || loggedout) {\r\n                return;\r\n            }\r\n\r\n            if (!socketManager) {\r\n            // Use SocketIO's socket manager to set base configuration for the socket\r\n            // This allows us to control the rate of events.\r\n            // And initiate manual reconnects\r\n                var targeturl = window.location.origin;\r\n                var socketiopath = window.location.pathname.replace(\"#\", \"\");\r\n                if (loginserver && socketiopath.indexOf(\"login/\") > 0) {\r\n                    socketiopath = socketiopath.substring(0, socketiopath.indexOf(\"login/\"));\r\n                }\r\n                socketiopath += \"socket.io/\";\r\n                // build socket manager that will attempt to reconnect every 1s\r\n                // up until 300 attempts have been made (~5m)\r\n                console.log(\"Target %s, path %s\", targeturl, socketiopath);\r\n                socketManager = new io.Manager(targeturl, {\r\n                    reconnectionDelay: 1000,\r\n                    reconnectionAttempts: 5 * 60,\r\n                    query: {\r\n                        \"sessionid\": sid\r\n                    },\r\n                    path: socketiopath\r\n                });\r\n            }\r\n\r\n            // open socket from socket manager\r\n            socket = socketManager.socket(\"/\");\r\n            socket.on(\"connect\", function() {\r\n                if (disconnected) {\r\n                    // test that we are a valid connection\r\n                    WD.testConnectionValid();\r\n                }\r\n                disconnected = null;\r\n                connectionDelay = 0;\r\n            });\r\n\r\n            socket.on(\"disconnect\", function(reason) {\r\n\r\n                var errorMsg = \"\";\r\n                var manualReconnect = false;\r\n                // Log Errors Better, client errors from https://socket.io/docs/v3/client-socket-instance/#disconnect\r\n                switch(reason) {\r\n                    case \"ping timeout\":\r\n                        errorMsg = \"The server did not send a PING within the specified interval\";\r\n                        break;\r\n                    case \"transport close\":\r\n                        errorMsg = \"The connection was closed (i.e connection lost or changed)\";\r\n                        break;\r\n                    case  \"transport error\":\r\n                        errorMsg = \"The connection has encountered an error (server killed or some unexpected issue)\";\r\n                        break;\r\n                    case \"io server disconnect\":\r\n                        errorMsg = \"The server has forcefully disconnected the socket\";\r\n                        manualReconnect = true;\r\n                        break;\r\n                    case \"io client disconnect\":\r\n                        errorMsg = \"The socket was manually disconnected by the client\";\r\n                        break;\r\n                    default:\r\n                        errorMsg = \"Unexpected disconnect\";\r\n                }\r\n\r\n                console.log(errorMsg);\r\n                disconnected = Date.now();\r\n\r\n                if (manualReconnect) {\r\n                    // if the server disconnects, we need to do a manual check\r\n                    // we may be in the weird case of host died, resumed and lost our session\r\n                    // but we still think it's all good\r\n                    WD.attemptReconnect();\r\n                }\r\n            });\r\n            socket.io.on(\"reconnect_failed\", () => {\r\n                console.log(\"SocketIO could not reconnect automatically, falling bcak to manual attempt.\")\r\n                WD.attemptReconnect();\r\n            });\r\n            socket.on('connect_error', function() {\r\n                console.log(\"Connection could not be established, attempting to reconnect.\");\r\n            });\r\n            socket.on(\"data\", function(msg, cb) {\r\n                WD.processresponse(msg);\r\n            });\r\n        },\r\n        attemptReconnect: function(delay) {\r\n            // Manually reconnect the websocket\r\n            // disable internal reconnect\r\n\r\n            // destroy Websocket\r\n            // there's some issues with letting it reconnect on it's own\r\n            if (socket) {\r\n                socket.disconnect();\r\n            }\r\n            socket = null;\r\n\r\n            // Failed to establish connection to host\r\n            var ERR_MSG = WD.loadstringliteral(\"IDS_WEBERR0007\", \"Connection lost, attempting to reconnect...\");\r\n            WD.displaytoast({\r\n                msg: ERR_MSG,\r\n                msgtype: \"ERROR\"\r\n            }, false);\r\n\r\n            if (disconnected) {\r\n                // check how long it's been\r\n                var timediff = Date.now() - disconnected;\r\n                // allow for 15 minutes to reconnect\r\n                // otherwise logout, host will already have removed the connection\r\n                if (timediff > (15 * 60 * 1000)) {\r\n                    WD.logout({\r\n                        msg: \"Exceeded 15m wait time for server response.\",\r\n                        msgtype: 'ERROR'\r\n                    });\r\n                }\r\n            } else {\r\n                disconnected = Date.now();\r\n            }\r\n\r\n            if (delay) {\r\n                if (!reconnectTimer) {\r\n                    // keep increasing the delay\r\n                    connectionDelay += delay;\r\n                    // max it at 1 minute\r\n                    if (connectionDelay > 60 * 1000) {\r\n                        connectionDelay = 60 * 1000;\r\n                    }\r\n                    console.log(\" Restarting connection in %d\", connectionDelay);\r\n                    reconnectTimer = setTimeout(WD.restartConnection, connectionDelay);\r\n                }\r\n            } else {\r\n                // restart our connection\r\n                WD.restartConnection();\r\n            }\r\n        },\r\n        restartConnection: function() {\r\n            // clear timer\r\n            clearTimeout(reconnectTimer);\r\n            reconnectTimer = null;\r\n\r\n            // determine if server is up or not\r\n            $.ajax({\r\n                url: \"healthcheck\"\r\n            }).then(\r\n                WD.connectionPending,\r\n                WD.connectionfailure\r\n            );\r\n        },\r\n        testConnectionValid: function() {\r\n            $.ajax({\r\n                url: sid + \"/about\"\r\n            }).then(\r\n                function(data, textStatus, jqXHR) {\r\n                    // we are alive again, attempt connection\r\n                    if (!socket) {\r\n                        clearTimeout(reconnectTimer);\r\n                        WD.startpoll();\r\n                    }\r\n                },\r\n                WD.connectionfailure\r\n            );\r\n        },\r\n        connectionPending: function(data, textStatus, jqXHR) {\r\n            if (jqXHR.status == 200) {\r\n        // server is up, check to see if our session\r\n        // is still alive\r\n                WD.testConnectionValid();\r\n            } else {\r\n                // health check didn't return a 200\r\n                // something weird going on\r\n                console.log(\"Health check returned %d\", jqXHR.status);\r\n                WD.attemptReconnect(10000);\r\n            }\r\n        },\r\n        connectionfailure: function(xhr, status, errorThrown) {\r\n            console.log(\"Connection failure %s (%s)\", errorThrown, status);\r\n            if (xhr.status == 403) {\r\n                clearTimeout(reconnectTimer);\r\n                WD.logout({\r\n                    msg: \"Session no longer valid.\",\r\n                    msgtype: 'ERROR'\r\n                });\r\n            } else {\r\n                WD.attemptReconnect(10000);\r\n            }\r\n        },\r\n        updateprogressbar: function(command) {\r\n            // Status Bar display\r\n            var pbholder = $(\"#progress\");\r\n            var pb = $(\"#progressbar\");\r\n            var pbl = $(\"#progresslabel\");\r\n            var modalwin = pbholder.children().first();\r\n            var show = true;\r\n            if (command.init) {\r\n                pb.attr('aria-valuenow', 0);\r\n                if (command.message) {\r\n                    pbl.html(command.message);\r\n                }\r\n            } else if (command.close) {\r\n                pb.css({\r\n                    width: 0\r\n                });\r\n                pb.attr(\"aria-valuenow\", 0);\r\n                show = false;\r\n            } else if (command.show) {} else if (command.hide) {\r\n                show = false;\r\n            } else if (command.update) {\r\n                pb.attr(\"aria-valuenow\", command.update);\r\n                pb.css({\r\n                    width: command.update + \"%\"\r\n                });\r\n            } else if (command.message) {\r\n                pbl.html(command.message);\r\n            }\r\n            if (show) {\r\n                modalwin.modal({\r\n                    backdrop: 'static'\r\n                    // this should be turned on once we are satisfied,\r\n                    //keyboard: false\r\n                });\r\n            } else {\r\n                modalwin.modal(\"hide\");\r\n            }\r\n        },\r\n        updatemenubar: function(command) {\r\n            // console.log(\"updatemenubar\", command);\r\n            // menubar update\r\n            menubar = $(\".wdmenubar\", wcontainer);\r\n            switch (command.action) {\r\n                case \"ENABLE\":\r\n                case \"SHOW\":\r\n                    menubar.find(\"li\").removeClass(\"disabled\");\r\n                    menubar.show();\r\n                    if (command.value) {\r\n                        menubar.find(\".active\").removeClass(\"active\");\r\n                        var newval = menubar.find(\"[data-value='\" + command.value + \"']\");\r\n                        newval.addClass(\"active\");\r\n                        if (!newval.is(isdisplayed)) {\r\n                            // maybe on \"top\" level\r\n                            $(\".submenubar\").hide()\r\n                                .siblings(\"ul\").show();\r\n                        }\r\n\r\n                        if (newval && newval.length === 1) {\r\n                            newval = newval[0];\r\n                            setTimeout(function() {\r\n                                if (newval) {\r\n                                    newval.scrollIntoViewIfNeeded ? newval.scrollIntoViewIfNeeded() : newval.scrollIntoView();\r\n                                }\r\n                            }, 100);\r\n                        }\r\n                    }\r\n                    WD.positionmenubar();\r\n                    break;\r\n                case \"DISABLE\":\r\n                    menubar.find(\"li\").removeClass(\"disabled\");\r\n                    break;\r\n                case \"HIDE\":\r\n                    menubar.hide();\r\n                    break;\r\n                case \"SETFOCUS\":\r\n                    // This probably isn't good enough\r\n                    WD.hostfocus(menubar.attr(\"id\"), false);\r\n                    menubar.trigger(\"focus\");\r\n                    break;\r\n            }\r\n        },\r\n        positionmenubar: function(toitem, dragmove) {\r\n            // reposition menubar (if needed and exists)\r\n            var menubar = $(\".wdmenubar\", wcontainer);\r\n            if (menubar.length > 0) {\r\n                if (menubar.length > 1) {\r\n                    menubar.first().remove();\r\n                    menubar = $(\".wdmenubar\", wcontainer);\r\n                }\r\n                if (toitem && toitem.is(isdisplayed)) {\r\n                    toitem = null;\r\n                }\r\n                if (!toitem) {\r\n                    toitem = wcontainer.find(\".screen\").filter(isdisplayed).last();\r\n                }\r\n                // only move menubar if same execute level, and NOT a live menu bar\r\n                // OR if live and parent window is not shown\r\n                var sameexlevel = Math.floor(parseInt(menubar.data('screenid')) / 1000) >= Math.floor(parseInt(toitem.children('.reactscreen').data('screenid')) / 1000);\r\n                var calldifference = parseInt(toitem.children('.reactscreen').data('screenid')) - parseInt(menubar.data('screenid'));\r\n                var mbislive = (menubar.data(\"live\") == \"1\");\r\n                if (sameexlevel && calldifference < 2 && calldifference >= 0) {\r\n                    if (!mbislive || calldifference == 0) {\r\n                        menubar.insertAfter(toitem);\r\n                    }\r\n                    var toparent = toitem.prevAll(\".screen\").filter(isdisplayed).first();\r\n                    var bottom = 0;\r\n                    if (toparent.length > 0) {\r\n                        bottom = toparent.data(\"endrow\");\r\n                    }\r\n                    // console.log(mbislive, calldifference, dragmove);\r\n                    // console.log(bottom, toitem.data(\"endrow\"));\r\n                    toitem = toitem.children(\".reactscreen\");\r\n                    if (toitem.data(\"position\") !== \"FULLSCREEN\" &&\r\n                        ((calldifference == 0) ||\r\n                            (!mbislive) ||\r\n                            ((bottom == 0 || (bottom == toitem.data(\"endrow\") && calldifference > 0 && !dragmove))) ||\r\n                            (calldifference == 1 && mbislive && (!toitem.prevAll(\".screen\").first().is(isdisplayed))))\r\n                    ) {\r\n                        menubar.position({\r\n                            my: \"left top\",\r\n                            at: \"left bottom\",\r\n                            of: toitem,\r\n                            collision: \"none\"\r\n                        });\r\n                        menubar.css({\r\n                            width: toitem.outerWidth()\r\n                        });\r\n                    } else {\r\n\r\n                        var blockWindow = menubar.prevAll(\"#windowblock\");\r\n                        var draggableScreenAfterMenu = menubar.is(isdisplayed) ? blockWindow.nextAll(\".screen.ui-draggable\") : {};\r\n                        \r\n                        if (draggableScreenAfterMenu.length === 1 && draggableScreenAfterMenu.is(isdisplayed)) {\r\n                            // If there is (single) visible dragabble window after menu, adjust menu as per the screen\r\n                            var screenPosition = draggableScreenAfterMenu.position();\r\n\r\n                            //menu should be exactly below the window i.e screen top + height\r\n                            var menuTop = screenPosition.top + draggableScreenAfterMenu.height(); \r\n\r\n                            // menu should should be as left as the dragabble screen\r\n                            menubar.css({top : menuTop, left: screenPosition.left});\r\n\r\n                        } else {\r\n                            // reset menubar to fullscreen position\r\n                            // code from host can be wrong depending on screen flow and timing\r\n                            menubar.css({\r\n                                left: 0,\r\n                                right: 0,\r\n                                bottom: 0,\r\n                                top: \"\",\r\n                                width: \"100%\"\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (menubar && menubar.length === 1 && menubar.is(\".wdmenubar:visible\")) {\r\n                var menuchildren = menubar.children(\"ul\");\r\n                var isnooverflow = menuchildren.length === 1 && menubar.outerHeight() > menuchildren.outerHeight();\r\n                \r\n                if (menuchildren.length === 1) {\r\n                    menubar.css(\"overflow-y\", isnooverflow ? \"\" : \"auto\");\r\n                }\r\n            }\r\n        },\r\n        updatetext: function(command) {\r\n            // This is just used to update a container with text rather than a\r\n            // field in a screen\r\n            // it can handle multiple targets all stacked within the target\r\n            // property as an array\r\n            $.each(command.target, function(index, value) {\r\n                $(value).text(command.value[index]);\r\n            });\r\n        },\r\n        fireevent: function(command, delayClicks) {\r\n            //console.log(\"fireevent\");\r\n            var target = getiframe(command.targetid, true);\r\n            if (target && target.length > 0) {\r\n                var targetelement = target.find(\"#\" + jQueryID(command.element) + \", [name='\" + jQueryID(command.element) + \"']\");\r\n                if (targetelement.length > 0) {\r\n                    switch (command.event) {\r\n                        case \"CLICK\":\r\n                            if (delayClicks) {\r\n                                clickqueue.push(targetelement);\r\n                            } else {\r\n                                targetelement.trigger(\"click\");\r\n                            }\r\n                            break;\r\n                        case \"SUBMIT\":\r\n                            targetelement.trigger(\"submit\");\r\n                            break;\r\n                        case \"RESET\":\r\n                            targetelement.reset();\r\n                            break;\r\n                    }\r\n                } else {\r\n                    var bFoundInFrame = false;\r\n                    var frames = target.find(\"frame\");\r\n                    for (var j = 0, len = frames.length; j < len; j++) {\r\n                        var frame = frames[j];\r\n                        targetelement = $(frame.contentDocument).find(\"#\" + jQueryID(command.element) + \", [name='\" + jQueryID(command.element) + \"']\");\r\n                        if (targetelement.length > 0) {\r\n                            bFoundInFrame = true;\r\n                            switch (command.event) {\r\n                                case \"CLICK\":\r\n                                    if (delayClicks) {\r\n                                        clickqueue.push(targetelement);\r\n                                    } else {\r\n                                        targetelement.trigger(\"click\");\r\n                                    }\r\n                                    break;\r\n                                case \"SUBMIT\":\r\n                                    targetelement.trigger(\"submit\");\r\n                                    break;\r\n                                case \"RESET\":\r\n                                    targetelement.reset();\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                    /*if (!bFoundInFrame) {\r\n                        console.log(\"Could not find WFE/WFB element\", command.element);\r\n                    }*/\r\n                }\r\n            } else {\r\n                // external browser that hasn't loaded, wait for it\r\n                if (command.targetid in browsers) {\r\n                    $(browsers[command.targetid]).on(\"load\", function() {\r\n                        WD.fireevent(command, false);\r\n                    });\r\n                }\r\n                /* else {\r\n                    console.log(\"Could not find WFE/WFB target\", command.targetid);\r\n                }*/\r\n            }\r\n        },\r\n        updatebrowser: function(command) {\r\n            //console.log(\"updatebrowser\");\r\n            var target = getiframe(command.targetid, true);\r\n            if (target && target.length > 0) {\r\n                var targetelement = target.find(\"#\" + jQueryID(command.element) + \", [name='\" + jQueryID(command.element) + \"']\");\r\n                if (targetelement.length > 0) {\r\n                    if (command.updatetype === \"I\") {\r\n                        targetelement.get(0).innerHTML = command.html;\r\n                    } else {\r\n                        targetelement.get(0).outerHTML = command.html;\r\n                    }\r\n                } else {\r\n                    var bFoundInFrame = false;\r\n                    var frames = target.find(\"frame\");\r\n                    for (var j = 0, len = frames.length; j < len; j++) {\r\n                        var frame = frames[j];\r\n                        targetelement = $(frame.contentDocument).find(\"#\" + jQueryID(command.element) + \", [name='\" + jQueryID(command.element) + \"']\");\r\n                        if (targetelement.length > 0) {\r\n                            if (command.updatetype === \"I\") {\r\n                                targetelement.get(0).innerHTML = command.html;\r\n                            } else {\r\n                                targetelement.get(0).outerHTML = command.html;\r\n                            }\r\n                        }\r\n                    }\r\n                    /*if (!bFoundInFrame) {\r\n                        console.log(\"Could not find WUH/WUB element\", command.element);\r\n                    }*/\r\n                }\r\n            } else {\r\n                // external browser that hasn't loaded, wait for it\r\n                if (command.targetid in browsers) {\r\n                    $(browsers[command.targetid]).on(\"load\", function() {\r\n                        WD.updatebrowser(command);\r\n                    });\r\n                }\r\n                /* else {\r\n                    console.log(\"Could not find WUH/WUB target\", command.targetid);\r\n                }*/\r\n            }\r\n        },\r\n        closeallbrowsers: function() {\r\n            for (var key in browsers) {\r\n                if (browsers.hasOwnProperty(key) && browsers[key]) {\r\n                    browsers[key].close();\r\n                }\r\n            }\r\n            browsers = {};\r\n        },\r\n        externalbrowser: function(command) {\r\n            // handle EBR packet data\r\n            if (command.newwindow && command.newwindow == 1) {\r\n                // console.log(\"ebr\",command);\r\n                if (command.tag === \"ALL\") {\r\n                    WD.closeallbrowsers();\r\n                    return;\r\n                }\r\n                var win = browsers[command.tag];\r\n                if (command.cmd == \"CLOSE\") {\r\n                    if (win) {\r\n                        win.close();\r\n                        delete browsers[command.tag];\r\n                    }\r\n                } else {\r\n                    var targeturl = \"\";\r\n                    // console.log(win, targeturl);\r\n                    if (command.html == 1) {\r\n                        targeturl = sid + \"/external/\" + command.url;\r\n                    } else {\r\n                        targeturl = command.url;\r\n                    }\r\n                    if (targeturl && targeturl != \"\") {\r\n                        if (win != undefined && win != null && !win.closed) {\r\n                            win.location = targeturl;\r\n                            win.focus();\r\n                        } else {\r\n                            if (!command.realurl) {\r\n                                if (loginserver && window.location.href.indexOf(\"login/\") > 0) {\r\n                                    targeturl = window.location.href.substring(0,window.location.href.indexOf(\"login/\")).replace(\"#\", \"\") + targeturl;\r\n                                } else {\r\n                                    targeturl = window.location.href.replace(\"#\", \"\") + targeturl;\r\n                                }\r\n                            }\r\n                            // determine if we are opening it somewhere instead of as tab\r\n                            var specs = null;\r\n                            if (command.left || command.top || command.width || command.height) {\r\n                                specs = \"\";\r\n                                // open in specific location\r\n                                specs += \"left=\";\r\n                                specs += (command.left ? (command.left * 10).toString() : \"25\");\r\n                                specs += \",top=\";\r\n                                specs += (command.top ? (command.top * 8).toString() : \"25\");\r\n                                specs += \",width=\";\r\n                                specs += (command.width ? (command.width * 10).toString() : \"800\");\r\n                                specs += \",height=\";\r\n                                specs += (command.height ? (command.height * 8).toString() : \"600\");\r\n                            }\r\n\r\n                            if (command.cmd == \"PRINT\" || command.cmd == \"PRINT-ASK\") {\r\n                                specs += \",noopener\";\r\n                                targeturl += \"?action=print\";\r\n                            }\r\n\r\n                            win = window.open(targeturl, command.tag, specs);\r\n\r\n                            // This is supposed to be put focus back on main window\r\n                            if (win) {\r\n                                win.blur();\r\n                                $(win).on(\"load\", function() {\r\n                                    if (command.title) {\r\n                                        win.document.title = command.title;\r\n                                    }\r\n                                    window.focus();\r\n                                });\r\n                                browsers[command.tag] = win;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (win) {\r\n                            // this doesn't really do anything. :(\r\n                            win.focus();\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                WD.bgndbrowser(command);\r\n            }\r\n        },\r\n        bgndbrowser: function(command) {\r\n            // handle background browsers\r\n            var promptObj = $(\"#\" + jQueryID(command.targetid));\r\n            var browser = promptObj.find(\"iframe\").get(0);\r\n            if (command.url && browser.src != command.url) {\r\n                if (loginserver && window.location.href.indexOf(\"login/\") > 0 && command.url !== 'about:blank') {\r\n                    browser.src = \"..\\\\\" + command.url;\r\n                } else {\r\n                    browser.src = command.url;\r\n                }\r\n                promptObj.show().removeData(\"zorder\");\r\n            }\r\n            if (command.zorder == \"1\") {\r\n                // Move to back\r\n                if (promptObj.data(\"zorder\") !== undefined) {\r\n                    promptObj.data(\"zorder\", \"1\").hide();\r\n                    // Show the next visible background browser in the stack, if any\r\n                    $($(\"div.bgbrowser\").get().reverse()).each(function() {\r\n                        if ($(this).data(\"zorder\") !== undefined && $(this).data(\"zorder\") == \"0\") {\r\n                            $(this).show();\r\n                            return false;\r\n                        }\r\n                    });\r\n                } else {\r\n                    wcontainer.prepend(promptObj);\r\n                    promptObj.data(\"zorder\", \"1\");\r\n                }\r\n            } else if (command.zorder == \"0\") {\r\n                // Bring to front\r\n                if (promptObj.data(\"zorder\") !== undefined) {\r\n                    $(\".bgbrowser\").not(\"#WGBGB_1\").hide();\r\n                    promptObj.data(\"zorder\", \"0\").show();\r\n                } else {\r\n                    if (wcontainer.children().last()[0] !== promptObj[0]) {\r\n                        wcontainer.append(promptObj);\r\n                    }\r\n                    promptObj.data(\"zorder\", \"0\");\r\n                }\r\n            }\r\n            if (command.visible == true) {\r\n                if (command.targetid == \"WGBGB_1\") {\r\n                    if (isgc) {\r\n                        wcontainer.css('left', promptObj.outerWidth() + $(\"#commandbarcontainer\").outerWidth());\r\n                    } else {\r\n                        wcontainer.css('left', promptObj.css(\"width\"));\r\n                    }\r\n                } else {\r\n                    $(\".bgbrowser\").not(\"#WGBGB_1\").hide();\r\n                }\r\n                var promptObjWindow = promptObj.find(\"iframe\").get(0).contentWindow;\r\n                var iframeActiveElement = promptObjWindow.document.activeElement;\r\n                // show the browser\r\n                promptObj.show();\r\n                // try to focus the current/active element\r\n                if (promptObjWindow.EDGE !== undefined) {\r\n                    try {\r\n                        promptObjWindow.EDGE.HTML1.focusCurrentElement();\r\n                    } catch (e) {\r\n                        if (iframeActiveElement !== null) {\r\n                            iframeActiveElement.focus();\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (iframeActiveElement !== null) {\r\n                        iframeActiveElement.focus();\r\n                    }\r\n                }\r\n            } else if (command.visible == false) {\r\n                promptObj.hide();\r\n                if (command.targetid == \"WGBGB_1\") {\r\n                    if (isgc) {\r\n                        wcontainer.css('left', $(\"#commandbarcontainer\").outerWidth());\r\n                    } else {\r\n                        wcontainer.css('left', 0);\r\n                    }\r\n                }\r\n            }\r\n            if (command.width) {\r\n                promptObj.css(\"width\", command.width);\r\n                if (isgc) {\r\n                    wcontainer.css('left', command.width + $(\"#commandbarcontainer\").outerWidth());\r\n                } else {\r\n                    wcontainer.css('left', command.width);\r\n                }\r\n            }\r\n            WD.repositionblocker();\r\n        },\r\n        updatemailstatus: function(command) {\r\n            var mailcont = $(\"#mailstatus\");\r\n            var mail = $(\"#mailimg\");\r\n            if (!command.visible) {\r\n                // set it back to nothing if it's set to not visible.\r\n                mailcont.html('<img class=\"buttonimage\" id=\"mailimg\">');\r\n            } else {\r\n                if (command.iconname !== \"\" && command.iconname != null) {\r\n                    mail.attr(\"src\", mailcont.data(\"basepath\") + command.iconname);\r\n                }\r\n                // prefer custom messages if specified, otherwise just give\r\n                // a number of unread / total\r\n                if (command.message !== \"\" && command.message != null) {\r\n                    mail.attr(\"title\", command.message);\r\n                } else if (command.unreadnum != \"\" && command.unreadnum != null) {\r\n                    if (command.unreadnum > 1) {\r\n                        mail.attr(\"title\", \"You have \" + command.unreadnum + \" mail messages.\");\r\n                    } else {\r\n                        mail.attr(\"title\", \"You have \" + command.unreadnum + \" mail message.\");\r\n                    }\r\n                }\r\n                if (command.sendtype != \"\" && command.sendtype != null) {\r\n                    carrret = String.fromCharCode(13);\r\n                    // according to guicommand, sendtypes are W,E,& S.\r\n                    // W means Windows command which im assuming is out of the\r\n                    // question now.\r\n                    // so check if it's E, assume S if not.\r\n                    if (command.sendtype == \"E\") {\r\n                        mail.attr(\"onclick\", 'WD.senddata(\"' + command.sendtext + '\",true);');\r\n                    } else if (command.sendtype == \"S\") {\r\n                        mail.attr(\"onclick\", 'WD.senddata(\"' + command.sendtext + carrret + '\",false);');\r\n                    }\r\n                }\r\n                if (command.flash) {\r\n                    mail.addClass(\"flash\");\r\n                }\r\n            }\r\n        },\r\n        getinfo: function(command) {\r\n            if (command.query == \"browsers\") {\r\n                // return list of open sub-browsers\r\n                // get background browsers\r\n                var bgnd = document.querySelectorAll(\".bgbrowser\") || [];\r\n                var bgndnames = \"\";\r\n                var bgndurl = \"\";\r\n                bgnd.forEach(function(elem) {\r\n                    bgndnames += (bgndnames == \"\" ? \"\" : WD.SM) + elem.id;\r\n                    bgndurl += (bgndurl == \"\" ? \"\" : WD.SM) + $(elem).find(\"iframe\").attr(\"src\");\r\n                });\r\n                var rptnames = \"\";\r\n                for (var id in browsers) {\r\n                    var valid = false;\r\n                    try {\r\n                        // closed is true if the window is not visible\r\n                        // may not have been unloaded yet after user closes it\r\n                        if (!browsers[id].closed) {\r\n                            valid = true;\r\n                        }\r\n                    } catch (e) {\r\n                        valid = false;\r\n                    }\r\n                    if (valid) {\r\n                        rptnames += (rptnames == \"\" ? \"\" : WD.SM) + id;\r\n                    } else {\r\n                        // remove any closed windows\r\n                        delete browsers[id];\r\n                    }\r\n                }\r\n                var packet = WD.ESCAPE + 'WHIR:' + bgndnames + WD.VM + bgndurl + WD.VM + rptnames + WD.VM + rptnames;\r\n                // console.log(packet);\r\n                WD.input(packet, true);\r\n            }\r\n        },\r\n        askquestion: function(command) {\r\n            // ask user a question, return result to input\r\n            var connectwin = $(\"#connectingdialog\").children().first();\r\n            var modalwin = $(\"#question\").children().first();\r\n            if (connectwin.is(\":visible\")) {\r\n                modalwin.one('hidden.bs.modal', function() {\r\n                    WD.showconnecting();\r\n                });\r\n                connectwin.modal(\"hide\");\r\n            }\r\n            modalwin.find(\"#questionheader\").html(command.header);\r\n            modalwin.find(\"#questionlabel\").html(command.label);\r\n            modalwin.on('shown.bs.modal', function() {\r\n                $(\"input,button\", modalwin).trigger(\"focus\");\r\n            });\r\n            var input = modalwin.find(\"#questioninput\");\r\n            input.val(\"\");\r\n            if (command.inputtype) {\r\n                input.attr(\"type\", command.inputtype);\r\n            } else {\r\n                input.attr(\"type\", \"text\");\r\n            }\r\n\r\n            WD.showdraggablemodal(modalwin, {keyboard: false});\r\n        },\r\n        showdraggablemodal: function(modelelem, properties) {\r\n            modelelem.modal(properties || {});\r\n            modelelem.find(\".modal-dialog\").draggable({\r\n                handle: \".modal-header\"\r\n            });\r\n        },\r\n        destroymodaldraggable: function(dialogbutton) {\r\n            $(dialogbutton).parents(\".modal-dialog\").first().removeAttr(\"style\").draggable(\"destroy\");\r\n        },\r\n        showmessage: function(command) {\r\n            // Add the buttons into the message box\r\n            $(\"#messagecontainer .tbutton\").remove();\r\n            $.each(command.button, function(index, abutton) {\r\n                var sbutton = $(\"#messagecontainer\").find(\".modal-footer button:first\").clone();\r\n                sbutton.text(abutton.buttonlabel).addClass('tbutton').removeClass('hidden');\r\n                if (!abutton.nosend) {\r\n                    sbutton.on(\"click\", function(event) {\r\n                        WD.input(WD.ESCAPE + abutton.returndata);\r\n                    });\r\n                }\r\n                if (abutton.nosend && typeof abutton.callback === \"function\") {\r\n                    sbutton.on(\"click\", abutton.callback);\r\n                }\r\n                $(\"#messagecontainer .modal-footer\").append(sbutton);\r\n            });\r\n            $(\"#messageicon\").attr(\"src\", $(\"#messageicon\").data(\"basepath\") + command.image);\r\n            $(\"#popupmessagetext\").html(command.msg);\r\n            $(\"#msgtitle\").text(command.header);\r\n            var modalwin = $(\"#messagecontainer\").children().first();\r\n            modalwin.on('shown.bs.modal', function() {\r\n                // console.log(\"modal shown\");\r\n                WD.unsetfocus();\r\n                var focusbutton = modalwin.find(\"button.tbutton\").first();\r\n                hostfocusprompt = 0;\r\n                focusbutton = focusbutton.length > 0? focusbutton : modalwin.find(\".modal-footer > button\");\r\n                focusbutton.trigger(\"focus\");\r\n            });\r\n            WD.showdraggablemodal(modalwin);\r\n        },\r\n        showconnecting: function() {\r\n            // Show \"progress\" dialog during logon\r\n            connecting = true;\r\n            var modalwin = $(\"#connectingdialog\").children().first();\r\n            modalwin.modal({\r\n                backdrop: 'static',\r\n                keyboard: false\r\n            });\r\n        },\r\n        doneconnecting: function() {\r\n            if (connecting) {\r\n                keepTCLhidden = false;\r\n                WD.hideconnecting();\r\n                $(\"#statusbar\").show();\r\n                WD.hidestart();\r\n                connecting = false;\r\n            }\r\n        },\r\n        hideconnecting: function() {\r\n            // Hide logon \"progress\" dialog\r\n            var modalwin = $(\"#connectingdialog\").children().first();\r\n            modalwin.modal('hide');\r\n            $(\".wdbg\").hide();\r\n            $(\"#logoutbutton\").show();\r\n        },\r\n        repositionblocker: function() {\r\n            var itemset = $(\".bgbrowser\").filter(isdisplayed).add(\".screen, .menu\").not(\"#WGBGB_1\");\r\n            var winblocker = $(\"#windowblock\");\r\n            winblocker.remove();\r\n            winblocker = $(\"<div id='windowblock'></div>\");\r\n            var lastitem = itemset.eq(-2);\r\n            if (lastitem.length == 0) {\r\n                lastitem = itemset.last();\r\n                winblocker.insertBefore(lastitem);\r\n            } else {\r\n                // console.log(\"moving window block\", lastitem.attr(\"id\"));\r\n                winblocker.insertAfter(lastitem);\r\n            }\r\n            // This is all to get around MS Edge's inability to redraw things properly\r\n            // for MS Edge, need to redraw screen?\r\n            // This code causes AWD-1746, need to rework it\r\n            /*\r\n            itemset.last().insertAfter(winblocker);\r\n            if (itemset.next(\".wdmenubar\").length > 0) {\r\n                // redraw it\r\n                $(\".wdmenubar\").insertAfter(itemset.last());\r\n            }\r\n            */\r\n\r\n            // Some screens in case of AWD-2001 have no contents but only prompts still they are shown as empty panel with buttons only such window should be hidden\r\n            setTimeout(function() {\r\n                var screens = winblocker.siblings(\".screen\"); \r\n                screens.removeClass(\"invisiblepromptscreen\");\r\n                WD.hidewinblockedpromptscreen(screens);\r\n            }, 200);\r\n        },\r\n        hidewinblockedpromptscreen: function(scrs) {\r\n            // hide window which contains nothing\r\n            scrs.each(function() {\r\n\r\n                var elem = $(this);\r\n                var currentscreen = elem.children(\".subscreen\");\r\n                var screenelements = currentscreen.children();\r\n                var nonemptyelems = screenelements.not(\".manualprompt:hidden,button\");\r\n                \r\n                if (nonemptyelems.length > 0) { // if there is an element, this is not manualprompt and rest do nothing\r\n                    return;\r\n                }\r\n                \r\n                var manualprompts = screenelements.filter(\".manualprompt:hidden\");\r\n\r\n                if (manualprompts.length === 0) { // if no manualprompts do nothing\r\n                    return;\r\n                }\r\n\r\n                var allBtns = screenelements.filter(\"button\");\r\n\r\n                if (allBtns.length === 0) { // no buttons do nothing\r\n                    return;\r\n                }\r\n\r\n                if ((manualprompts.length + allBtns.length) !== screenelements.length) { //if only have manualprompts (hidden) and button, ignore it\r\n                    return;\r\n                }\r\n\r\n                // hide such screen where there is nothing but only hidden prompts\r\n                elem.addClass(\"invisiblepromptscreen\");\r\n\r\n            });\r\n\r\n        },\r\n        closecommand: function(command) {\r\n            // console.log(\"Close Command\", command);\r\n                var screenstoremove = $(\".screen\", wcontainer).filter(function() {\r\n                    // console.log(parseInt($(this).data(\"screenid\")) >= parseInt(command.targetid), this);\r\n                    return parseInt($(this).children(\".reactscreen\").data(\"screenid\")) >= parseInt(command.targetid);\r\n                });\r\n                screenstoremove.each(function( index ) {\r\n                    var container = $(this).get(0);\r\n                    WDC.unmountComponentAtNode(container);\r\n                    container.remove();\r\n                });\r\n                screens = screens.filter(function(screen) {return parseInt(screen.props.screenid) < parseInt(command.targetid)});\r\n            switch (command.type) {\r\n                case \"CLOSESCREEN\":\r\n                    var objstoclose = $(\".screen,.wdmenubar\", wcontainer).filter(function() {\r\n                        // console.log(parseInt($(this).data(\"screenid\")) >= parseInt(command.targetid), this);\r\n                        return parseInt($(this).children(\".reactscreen\").data(\"screenid\")) >= parseInt(command.targetid);\r\n                    });\r\n\r\n                    // Check if a flash toash is attached to screen being closed, if yes close toast after some time\r\n                    var tToast = $(\"#toast\");\r\n                    var screenattachedtotoast = tToast.data(\"screen-origin\");\r\n\r\n                    if (screenattachedtotoast) {\r\n                        tToast.removeData(\"screen-origin\");\r\n                        var isscreenattachedtotoast =  objstoclose.filter(\"#\" + screenattachedtotoast).length === 1;\r\n                        if (isscreenattachedtotoast) {\r\n                            globaltoasttimeout = setTimeout( function() { WD.cleartoast(); }, 5000 );\r\n                        }\r\n                    }\r\n\r\n                    objstoclose.remove();\r\n\r\n                    var menubar = $(\".wdmenubar\", wcontainer);\r\n                    if (menubar.length > 0) {\r\n                        WD.positionmenubar($(\".screen\", wcontainer).last());\r\n                    }\r\n                    $(\".screen\", wcontainer).last().find(\".active\").removeClass(\"active\");\r\n                    break;\r\n                case \"CLOSEMENU\":\r\n                    // closes both menus and screens\r\n                    $(\".menu,.wdmenubar\", wcontainer).filter(function() {\r\n                        // console.log($(this).data(\"menuid\"),\r\n                        // command.targetid);\r\n                        return ($(this).data(\"menuid\") >= command.targetid || $(this).data(\"screenid\") >= command.targetid);\r\n                    }).remove();\r\n                    break;\r\n            }\r\n            // clear dirty data\r\n            dirtydata = null;\r\n            dirtydataprompt = 0;\r\n            if (command.targetid == 0) {\r\n                //hide all background browsers too\r\n                $(\".bgbgbrowser\").hide();\r\n                WD.cleartoast();\r\n            }\r\n            $(\".screen\", wcontainer).last().find(\"input,textarea.tempreadonly,button\").prop(\"readOnly\", false).removeClass(\"tempreadonly\");\r\n            WD.repositionblocker();\r\n        },\r\n        setmenubar: function(menubar, live, data) {\r\n            // flip active\r\n            jmenubar = $(menubar);\r\n            // console.log(\"setmenubar\",jmenubar.hasClass(\"disabled\"));\r\n            var siblingsdisabled = jmenubar.siblings('li.disabled');\r\n            if (jmenubar.hasClass('disabled') || (jmenubar.hasClass(\"active\") && siblingsdisabled.length > 0)) {\r\n                return;\r\n            }\r\n            if (!live) {\r\n                if (data) {\r\n                    WD.senddata(data);\r\n                }\r\n                jmenubar.siblings('li').addClass(\"disabled\").removeClass(\"active\");\r\n                jmenubar.addClass(\"active\");\r\n            } else if (data) {\r\n                WD.updateelement(null, menubar, data);\r\n            }\r\n        },\r\n        updateprompt: function(command) {\r\n            // update a grid prompt (prompt literal)\r\n            var promptObjs = getPromptObjects(command.targetid, true, true);\r\n            var focusprompt = null;\r\n            promptObjs.forEach(function(elem) {\r\n                var jThis = $(elem);\r\n                jThis.data(\"promptliteral\", command.promptliteral);\r\n                if (jThis.hasClass(\"focuselement\")) {\r\n                    // updatae prompt literal\r\n                    $(\"#promptliteral\").html(command.promptliteral)\r\n                        .attr(\"title\", command.promptliteral);\r\n                }\r\n\r\n                var jThisParent = jThis.parent();\r\n                if (command.tlb) {\r\n                    var clonedata = $(command.tlbicon ? \"#tlbtemplate_icon\" : \"#tlbtemplate_button\");\r\n                    var newhtml = clonedata.html().replace(/default/g, jThis.attr(\"id\"));\r\n                    if (command.tlbicon) {\r\n                        newhtml = newhtml.replace(/iconname/g, command.tlbicon);\r\n                    }\r\n                    \r\n                    jThisParent.find(\".wdtlb\").remove();\r\n                    jThisParent.append(newhtml);\r\n\r\n                    var wdtlbInput = jThisParent.find(\".wdtlb, input\").removeClass(\"prompttlb\");\r\n                    if (command.tlbleft) {\r\n                        wdtlbInput.addClass(\"tlbleft\").removeClass(\"tlbright\");\r\n                    } else {\r\n                        wdtlbInput.addClass(\"tlbright\").removeClass(\"tlbleft\");\r\n                    }\r\n                    wdtlbInput.addClass(\"prompttlb\");\r\n\r\n                    if (jThis.has(\":focus\")) {\r\n                        // force draw of dropdown\r\n                        focusprompt = jThis;\r\n                    }\r\n                } else {\r\n                    jThisParent.find(\".wdtlb\").remove();\r\n                }\r\n            });\r\n            if (focusprompt !== null) {\r\n                focusprompt.trigger(\"focus\");\r\n            }\r\n        },\r\n        displayprompt: function(command, filteredprompt) {\r\n            // Handle Prompt Updating\r\n            var targetid = command.targetid;\r\n            if (command.mvndx) {\r\n                targetid += \"_\" + command.mvndx;\r\n            }\r\n            var promptObjs = filteredprompt ? filteredprompt[targetid] : getPromptObjects(targetid, false, true);\r\n            var infocus = (command.focus && document.activeElement.getAttribute(\"name\") === targetid) ? $(document.activeElement) : null;\r\n            // console.log(\"Display\", promptObjs.length);\r\n            if (promptObjs && promptObjs.length > 0) {\r\n                // need to know if they changed anything \r\n                if (infocus && command.hasOwnProperty(\"flash_msg_target\") && command.flash_msg_target === targetid) {\r\n                    // Fix For Clearing input on Road Service Screen\r\n                    var screenInput = $(\".screen:last input:not(:disabled)\");\r\n                    if (screenInput.length === 1  && screenInput[0].id === targetid) {\r\n                        infocus = null;\r\n                    }\r\n                }   \r\n\r\n                // do nothing for the codition met\r\n                if (!(infocus && infocus.data(\"dirty\"))) {\r\n\r\n                    var dirtyitems;\r\n                    if (command.focus) {\r\n                        dirtyitems = document.querySelectorAll(\".prompt\");\r\n                    }\r\n                    \r\n                    if (dirtyitems && dirtyitems.length > 0) {\r\n                        // we need to reset these to their values, we either go too far ahead, \r\n                        // or entered bad data\r\n                        dirtyitems.forEach(function(elem) {\r\n                            var jElem = $(elem);\r\n                            if (jElem.data('dirty')) {\r\n                                elem = jElem.data(\"orig\");\r\n                            }  \r\n                        });\r\n                    }\r\n                    // cleanup any bad input?\r\n                    if (command.value !== null && command.value !== undefined) {\r\n                        var screenid = targetid.split(\"_\")[0];\r\n                        if (screens[0].props.screenid = screenid) {\r\n                            if (command.mvndx) {\r\n                                screens[0].setGridValuefromHost(command.targetid,\r\n                                    command.mvndx,\r\n                                    command.value,\r\n                                    command.bgcolour != \"\" ? \"#\" + command.bgcolour : \"\",\r\n                                    command.textcolour != \"\" ? \"#\" + command.textcolour : \"\");\r\n                            } else {\r\n                                screens[0].setValuefromHost(targetid,\r\n                                    command.value,\r\n                                    command.bgcolour != \"\" ? \"#\" + command.bgcolour : \"\",\r\n                                    command.textcolour != \"\" ? \"#\" + command.textcolour : \"\");\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // could be an iframe, which is based on ID\r\n                var promptObj = getiframe(command.targetid, false);\r\n                if (promptObj.is(\"iframe\")) {\r\n                    if (command.value !== undefined && command.value !== null) {\r\n                        if (command.value !== \"XXX\") {\r\n                            if (command.value === \"\") {\r\n                                command.value = \"static/blank.html\";\r\n                            }\r\n                            // re-add this every time\r\n                            promptObj.on(\"load\", WD.updateiframefunctions(promptObj.get(0)));\r\n                            if (loginserver && window.location.href.indexOf(\"login/\") > 0 && command.value !== 'about:blank') {\r\n                                promptObj.get(0).src = \"..\\\\\" + command.value;\r\n                            } else {\r\n                                promptObj.get(0).src = command.value;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (command.focus) {\r\n                        // Save current active element\r\n                        var promptObjWindow = promptObj.get(0).contentWindow;\r\n                        var iframeActiveElement = promptObjWindow.document.activeElement;\r\n\r\n                        // Focus the iframe\r\n                        promptObj.trigger(\"focus\");\r\n                        // Try to focus on current/active element\r\n                        if (promptObjWindow.WDEDI !== undefined) {\r\n                            if (iframeActiveElement !== null) {\r\n                                iframeActiveElement.focus();\r\n                            }\r\n                        } else if (promptObjWindow.EDGE !== undefined) {\r\n                            try {\r\n                                promptObjWindow.EDGE.HTML1.focusCurrentElement();\r\n                            } catch (e) {\r\n                                if (iframeActiveElement !== null) {\r\n                                    iframeActiveElement.focus();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            if (iframeActiveElement !== null) {\r\n                                iframeActiveElement.focus();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (command.focus) {\r\n                var movefocus = !(infocus &&  infocus.data(\"dirty\"));\r\n                WD.hostfocus(targetid, movefocus);\r\n            }\r\n        },\r\n        hostfocus: function(targetid, movefocus) {\r\n            // console.log(\"Setting Focus\", targetid);\r\n            if (movefocus === undefined || movefocus === null) {\r\n                movefocus = true;\r\n            }\r\n            hostfocusprompt = getpromptnum(targetid, true);\r\n            if (movefocus) {\r\n                WD.unsetfocus();\r\n            }\r\n            jPromptObj = getPromptObjects(targetid).first();\r\n            if (jPromptObj.length == 0 && hostfocusprompt.indexOf(\".\") > 0) {\r\n                screens[0].scrollToGridItem(hostfocusprompt);\r\n                jPromptObj = getPromptObjects(targetid).first();\r\n            }\r\n            // we have a bit of weird case, where the prompt is text\r\n            // but the checkbox is the prompt that stacks the data\r\n            // so we need to handle this weird case\r\n            var isCheckbox = jPromptObj.is(\":checkbox\") || jPromptObj.is(\".checkboxlabel\");\r\n            if (dirtydataprompt != hostfocusprompt) {\r\n                dirtydata = null;\r\n                dirtydataprompt = 0;\r\n            } else if (jPromptObj.is(\":radio\") || isCheckbox || (dirtydata && dirtydata.substr(0, 2) == (WD.ESCAPE + \"?\"))) {\r\n                var data = dirtydata;\r\n                dirtydata = null;\r\n                dirtydataprompt = 0;\r\n                WD.senddata(data);\r\n            }\r\n            // make sure screen is on (if it's the last screen and a browser is on top)\r\n            var wcontainerbgsc = wcontainer.children(\".screen,.bgbrowser,.menu\").last();\r\n            if (wcontainerbgsc.is(\".bgbrowser\")) {\r\n                wcontainerbgsc.insertBefore(wcontainer.find(\".screen\").last());\r\n                WD.repositionblocker();\r\n            }\r\n            // need to handle being in a select grid\r\n            if (jPromptObj.length == 0) {\r\n                // could be an iframe\r\n                var promptObj = getiframe(targetid, false);\r\n                if (promptObj.is(\"iframe\")) {\r\n                    if (movefocus) {\r\n                        promptObj.addClass(\"focuselement\").trigger(\"focus\");\r\n                        WD.focuselement(null, targetid);\r\n                    }\r\n                    hotkeys.setScope(\"screen\");\r\n                } else if (movefocus) {\r\n                        // not on screen... uh, wtf?\r\n                        var newfocus = $(\".screen\", wcontainer).last().find(\"button\").not(\".close,.wdtlb,:disabled\").first();\r\n                        newfocus.trigger(\"focus\");\r\n                }\r\n            } else if (jPromptObj.parents(\"div.showselect\").length > 0 && jPromptObj.is(\":disabled\")) {\r\n                // console.log(\"in a row!\", jPromptObj);\r\n                // in a row!\r\n                var row = jPromptObj.parents(\"tr\");\r\n                // index is zero based, show select expects 1 based\r\n                // don't do dirty if multi-selects\r\n                WD.scrollintoview(row.get(0));\r\n                WD.ssprocessclick(row, row.parent().children().index(row) + 1, false, (row.parents(\".multiselect\").length == 0), true);\r\n                var enabledInput = row.find(\"input:enabled\").first();\r\n\r\n                if (enabledInput.length > 0) {\r\n                    enabledInput[0].focus();\r\n                }\r\n                \r\n                alttab = false;\r\n\r\n                hostfocusprompt = row.data(\"promptno\");\r\n                hotkeys.setScope(\"showselect\");\r\n            } else {\r\n                // console.log(\"Setting Focus from Display\");\r\n                if (movefocus) {\r\n                    jPromptObj.addClass(\"focuselement\").trigger(\"focus\");\r\n                    WD.focuselement(null, targetid);\r\n                }\r\n                hotkeys.setScope(\"screen\");\r\n            }\r\n        },\r\n        displaymanualprompt: function(jPromptObj, focus) {\r\n            var jManPrompt = $(\"#WD_manual_prompt\").children().first();\r\n            // Create the dialog from the prompt div\r\n            var jPromptHtml = jPromptObj.html();\r\n            jManPrompt.find(\".modal-body\").html(jPromptHtml);\r\n            jManPrompt.find(\".modal-title\").html(jPromptObj.prop(\"title\"));\r\n            jManPrompt.find(\"button\").data(\"promptid\", jPromptObj.attr(\"id\"));\r\n            jManPrompt.on('shown.bs.modal', function() {\r\n                hostfocusprompt = 0;\r\n                $(\"#promptliteral\").html(jPromptHtml).attr(\"title\", jPromptHtml);\r\n\r\n                if (jPromptObj.data(\"edittype\") === \"YORN\" || jPromptObj.data(\"edittype\") === \"CONFIRM.Y\") {\r\n                    $(this).parent().find('button:nth-child(1)').trigger(\"focus\");\r\n                } else if (jPromptObj.data(\"edittype\") == \"NORY\" || jPromptObj.data(\"edittype\") === \"CONFIRM.N\") {\r\n                    $(this).parent().find('button:nth-child(2)').trigger(\"focus\");\r\n                } else {\r\n                    // Is it possible to have no default button\r\n                }\r\n            });\r\n            if (focus) {\r\n                WD.showdraggablemodal(jManPrompt, {\r\n                    show: true,\r\n                    keyboard: false,\r\n                    backdrop: 'static'\r\n                });\r\n            }\r\n        },\r\n        scrollintoview: function(target) {\r\n            var jTarget = $(target);\r\n            var jParent = jTarget.parents(\"tbody\").first();\r\n            if (!WD.checkinview(jTarget, jParent, false)) {\r\n                target.scrollIntoView();\r\n            }\r\n        },\r\n        checkinview: function(elem, container, partial) {\r\n            if (!elem) {\r\n                return false;  // Add this check to handle undefined or null elem\r\n            }\r\n        \r\n            var contHeight = container.height();\r\n            var contTop = container.scrollTop();\r\n            var contBottom = contTop + contHeight;\r\n            var elemTop = elem.offset().top - container.offset().top;\r\n            var elemBottom = elemTop + elem.height();\r\n            var isTotal = (elemTop >= 0 && elemBottom <= contHeight);\r\n            var isPart = ((elemTop < 0 && elemBottom > 0) || (elemTop > 0 && elemTop <= container.height())) && partial;\r\n            \r\n            return isTotal || isPart;\r\n        },\r\n        delayedtoast: function(command) {\r\n            if (command && command.msg) {\r\n                sessionStorage.setItem('message', command.msg);\r\n                sessionStorage.setItem('msgtype', command.msgtype);\r\n            }\r\n        },\r\n        displaytoast: function(command, notimeout) {\r\n            // Toast Message Display\r\n            var tToast = $(\"#toast\").attr(\"style\", \"\");\r\n            tToast.removeData(\"screen-origin\");\r\n            tToast.find(\"#toastmessage\").html(command.msg);\r\n\r\n            var lastscreen = $(\".screen:last\", wcontainer);\r\n            clearTimeout(globaltoasttimeout);\r\n            // As in AFW, FLASH messages should not disappear after time\r\n            if (command.msgtype == \"FLASH\") {\r\n                notimeout = true;\r\n\r\n                var lastscreenelem = lastscreen[0];\r\n                if (lastscreen.length === 1 && lastscreenelem.id) {\r\n                    tToast.data(\"screen-origin\", lastscreenelem.id);\r\n                }\r\n            }\r\n            var error = (command.msgtype == \"ERROR\");\r\n            if (error) {\r\n                tToast.removeClass(\"alert-warning\");\r\n                tToast.addClass(\"alert-danger\");\r\n                if (!notimeout) {\r\n                    globaltoasttimeout = setTimeout(function() {\r\n                        tToast.fadeOut(\"slow\");\r\n                    }, 25000);\r\n                }\r\n            } else {\r\n                tToast.removeClass(\"alert-danger\");\r\n                tToast.addClass(\"alert-warning\");\r\n                if (!notimeout) {\r\n                    globaltoasttimeout = setTimeout(function() {\r\n                        tToast.fadeOut(\"slow\");\r\n                    }, 5000);\r\n                }\r\n            }\r\n            var positioned = false;\r\n            if (command.xpos && command.ypos) {\r\n                // positions come in row/column values that are intended to equal em\r\n                // from the following link, px are turned into em with this formula,\r\n                // em = (px.width / parseFloat($(\"body\").css(\"font-size\"))\r\n                // it's easy enough to reverse that into  em -> px\r\n                // px = em.width * parseFloat($(\"body\").css(\"font-size\"))\r\n                // http://stackoverflow.com/a/12241338\r\n                bodyscale = parseFloat($(\"body\").css(\"font-size\"));\r\n                if (isgc) {\r\n                    xpx = ((command.xpos * bodyscale) + $(\"#commandbarcontainer\").outerWidth() + tToast.width());\r\n                    ypx = (command.ypos * bodyscale);\r\n                } else {\r\n                    xpx = ((command.xpos * bodyscale) + tToast.width());\r\n                    ypx = ((command.ypos * bodyscale) + $(\"#commandbarcontainer\").height());\r\n                }\r\n                tToast.position({\r\n                    my: \"right top\",\r\n                    of: wcontainer,\r\n                    at: \"left+\" + xpx + \" top+\" + ypx,\r\n                    collision: \"fit\",\r\n                    within: wcontainer\r\n                });\r\n                positioned = true;\r\n            }\r\n            if (command.targetid) {\r\n                targetprompt = $(\"#\" + jQueryID(command.targetid));\r\n                if (targetprompt.length > 0) {\r\n                    // Use jqueryui's position to place it\r\n                    tToast.position({\r\n                        my: \"left center\",\r\n                        of: targetprompt,\r\n                        at: \"right+10 center-10\",\r\n                        collision: \"fit\",\r\n                        within: $(\"#windowcontainer\")\r\n                    });\r\n                    positioned = true;\r\n                }\r\n            }\r\n            if (!positioned) {\r\n                var target = lastscreen;\r\n                if (target.length == 0) {\r\n                    target = $(\".menu:last\", wcontainer);\r\n                }\r\n                if (target.length == 0 && !isgc) {\r\n                    target = $(\"#tcl\").filter(\":visible\");\r\n                }\r\n                if (target.length == 0) {\r\n                    target = wcontainer;\r\n                }\r\n                tToast.position({\r\n                    my: \"center top+1\",\r\n                    of: target,\r\n                    at: \"center top\"\r\n                });\r\n            }\r\n            tToast.fadeIn(\"slow\");\r\n        },\r\n        // Dismiss active flash message\r\n        cleartoast: function() {\r\n            $(\"#toast\").fadeOut(\"slow\");\r\n        },\r\n        updateiframefunctions: function(iframe) {\r\n            if ($(iframe).parents(\"#renderdata\").length !== 0) {\r\n                // don't apply this if we are in the render section\r\n                return;\r\n            }\r\n            if (iframe && iframe.contentWindow && iframe.contentWindow.csi_navigate != WD.navigate) {\r\n                // console.log($(iframe).data(\"browserid\"),\"overriding\r\n                // functions\", iframe.src);\r\n                if (iframe.contentWindow.EDGE) {\r\n                    // only do replace if Edge exists\r\n                    iframe.contentWindow.EDGE.HTML1.post_to_url = WD.posttourl;\r\n                    iframe.contentWindow.EDGE.HTML1.navigate = WD.navigate;\r\n                } else {\r\n                    // console.log(\"No edge in window\");\r\n                }\r\n                // always override csi_navigate\r\n                iframe.contentWindow.csi_navigate = WD.navigate;\r\n                WD.overwritehref(iframe.contentWindow.document);\r\n                for (var j = 0, len = iframe.contentWindow.frames.length; j < len; j++) {\r\n                    $(iframe.contentWindow.frames[j]).on(\"load\", function() {\r\n                        WD.overwritehref(this.window.document);\r\n                    });\r\n                    iframe.contentWindow.frames[j].window.csi_navigate = WD.navigate;\r\n                }\r\n                WD.overwritesubmit(iframe.contentWindow.document);\r\n                iframe.contentWindow.HTMLFormElement.prototype.submit = function() {\r\n                    // console.log(\"prototype overridden!\");\r\n                    // Taken from here\r\n                    // http://stackoverflow.com/a/33626279/110068\r\n                    if (!$(this).data(\"submithandled\")) {\r\n                        WD.handlesubmit($(this));\r\n                    }\r\n                    return false;\r\n                };\r\n                if (iframe.parentNode.id) {\r\n                    $(iframe.contentWindow.document).find(\"input,textarea,select\").on(\"focus\", function(e) {\r\n                        var iframepromptno = getpromptnum(iframe.parentNode.id, false);\r\n                        //console.log(\"input.focus hostfocusprompt=\"+hostfocusprompt.toString()+\", iframepromptno=\"+iframepromptno)\r\n                        if (iframepromptno > 0 && hostfocusprompt != iframepromptno) {\r\n                            WD.focuselement(e, iframe.parentNode.id);\r\n                        }\r\n                    });\r\n                }\r\n                setTimeout(\r\n                    function() {\r\n                        WD.updateiframefunctions(iframe);\r\n                    },\r\n                    100);\r\n            } else {\r\n                // console.log($(iframe).data(\"browserid\"),\"not overriding\r\n                // functions\", iframe.src);\r\n            }\r\n        },\r\n        overwritehref: function(doc) {\r\n            $(doc).on(\"click\", \"a[href^='CSICMD'],a[href^='csicmd']\", function(event) {\r\n                event.preventDefault();\r\n                var href_val = $(this).attr(\"href\");\r\n                WD.navigate(href_val);\r\n            });\r\n        },\r\n        convertserializetolatin1: function(data) {\r\n\r\n            var params = (data || \"\").split(\"&\").reduce(\r\n                function(paramsstr, currentparam) {\r\n                    currentparam = currentparam.split(\"=\");\r\n                    var currentparamval = decodeURIComponent(currentparam[1]);\r\n                    var encodedparam = currentparam[0] + \"=\" + WD.encodeLatin1URIComponent(currentparamval);\r\n                    return paramsstr + (paramsstr? \"&\":\"\") + encodedparam;\r\n                }, ''\r\n            );\r\n\r\n            return params;\r\n\r\n        },\r\n        handlesubmit: function(jform) {\r\n            // console.log(\"override of submit\");\r\n            var data = WD.convertserializetolatin1(jform.serialize());\r\n            var cmd = jform.attr(\"action\");\r\n            // get originating item (need to use indirect references)\r\n            var src = jform.parentsUntil(\"window\").parent().find(\"[wdclicked]\");\r\n            // console.log(src);\r\n            if (src.length > 0) {\r\n                data += \"&\" + src.attr(\"name\") + \"=\" + src.val();\r\n            }\r\n            // console.log(\"form submit\", cmd, data);\r\n            $(this).data(\"submithandled\", false);\r\n            WD.navigate(cmd + \"?\" + data);\r\n            //WD.input(WD.ESCAPE + cmd.replace(\"CSICMD\", \"csicmd\") + \"?\" + data, true);\r\n        },\r\n        overwritesubmit: function(doc) {\r\n            $(doc).on(\"click keypress\", \":button,:submit\", function(event) {\r\n                // console.log(\"click or keypress on button!\");\r\n                $(\":button,:submit\").removeAttr(\"wdclicked\");\r\n                $(this).attr(\"wdclicked\", 1);\r\n            });\r\n            $(doc).on(\"submit\", \"form[action^='csicmd'],form[action^='CSICMD']\", function(event) {\r\n                $(this).data(\"submithandled\", true);\r\n                WD.handlesubmit($(this));\r\n                return false;\r\n            });\r\n\r\n        },\r\n        posttourl: function(path, params) {\r\n            // replaces the EDGE.HTML1.postToWingem function\r\n            if (path.substr(0, 6).toUpperCase() == \"CSICMD\") {\r\n                // var navigatePath = path + \"?\" + $.param(params) // replaces jquery $.param to have latin-1 support\r\n                var navigatePath = path + \"?\" + WD.paramlatin1(params);\r\n                WD.navigate(navigatePath);\r\n                //WD.input(WD.ESCAPE + path.replace(\"CSICMD\", \"csicmd\") + \"?\" + $.param(params), true);\r\n            } else {\r\n                // ?? what should we do in the non-csicmd case?\r\n            }\r\n        },\r\n        paramlatin1: function(params) {\r\n            // Method to convert params dictionary to latin 1\r\n\r\n            if (!params) {\r\n                return \"\";\r\n            }\r\n\r\n            params_str = \"\";\r\n\r\n            for (var current_param_key in params) {\r\n                // process values that are keys of the object\r\n                if (params.hasOwnProperty(current_param_key)) {\r\n                    var current_param = params[current_param_key] || \"\";\r\n                    params_str += (params_str ? \"&\" : \"\") +  current_param_key + \"=\" + WD.encodeLatin1URIComponent(current_param);\r\n\r\n                }\r\n            }\r\n\r\n            return params_str;\r\n\r\n        },\r\n        encodeLatin1URIComponent: function(inputStr) {\r\n\r\n            // list of chars that need to be added to param_string_list (it is a temporary list)\r\n            var param_string_list = [];\r\n            var charlist = [];\r\n\r\n            var inputStrLen = (inputStr || \"\").length;\r\n            var inputCharIndex = 0;\r\n\r\n            while(inputCharIndex < inputStrLen) {\r\n\r\n                var inputChar = inputStr[inputCharIndex];\r\n                var charcode = inputChar.charCodeAt(0);\r\n                \r\n                // latin 1 has unique scheme for chars >128 and <256 only\r\n                if (charcode < 128 || charcode > 255 ) {\r\n                    charlist.push(inputChar);\r\n                } else  {\r\n                    var charliststr = encodeURIComponent( charlist.join(\"\") );\r\n\r\n                    // convert character to latin 1\r\n                    var char_mod = charcode % 16;\r\n\r\n                    // This is same as dividing by 16\r\n                    var char_base = (charcode - char_mod) >> 4;\r\n\r\n                    // if base is greater than 9 then replace it with hex represention of number i.e 10 (ascii : 10-9 +64 = 65) = A, \r\n                            // if base is greater than 9 then replace it with hex represention of number i.e 10 (ascii : 10-9 +64 = 65) = A, \r\n                    // if base is greater than 9 then replace it with hex represention of number i.e 10 (ascii : 10-9 +64 = 65) = A, \r\n                    if (char_base > 9) {\r\n                        char_base = String.fromCharCode((char_base - 9) + 64);\r\n                    }\r\n\r\n                    if (char_mod > 9) {\r\n                        char_mod = String.fromCharCode((char_mod - 9) + 64);\r\n                    }\r\n\r\n                    // add string to param list\r\n                    param_string_list.push( charliststr + \"%\" + String(char_base) + String(char_mod) );\r\n\r\n                    charlist = [];\r\n                }\r\n\r\n                inputCharIndex++;\r\n\r\n            }\r\n\r\n\r\n            if (charlist && charlist.length > 0) {\r\n                param_string_list.push(encodeURIComponent( charlist.join(\"\") ));\r\n            }\r\n\r\n            return param_string_list.join(\"\");\r\n\r\n        },\r\n        navigate: function(tmpURL) {\r\n            // console.log(\"navigate!\", tmpURL);\r\n            // replaces the EDGE.HTML1.navigate function,\r\n            // which assumes a full url\r\n            WD.input(WD.ESCAPE + tmpURL.replace(\"CSICMD\", \"csicmd\"), true, true);\r\n        },\r\n        receiveMessage: function(event) {\r\n            // Do we trust the sender of this message?\r\n            // do we require similar origin?\r\n            // if (event.origin !== \"http://example.com:8080\")\r\n            if (event.data && event.data.substr) {\r\n                var start = event.data.substr(0, 7).toLowerCase();\r\n                if (start == \"csicmd:\" || start == \"csicmd?\") {\r\n                    // push data to host as csicmd:\r\n                    WD.navigate(\"csicmd:postdata?\" + event.data.substr(7));\r\n                }\r\n            }\r\n        },\r\n        resizeTextarea: function(t) {\r\n            var scrollHeight = t.scrollHeight;\r\n            var selectionStart = t.selectionStart;\r\n            var selectionEnd = t.selectionEnd;\r\n            var offset = t.offsetHeight - t.clientHeight;\r\n            \r\n            $(t).css('height', 'auto').css('height', scrollHeight + offset)\r\n                .prop({\"selectionStart\": selectionStart, \"selectionEnd\" : selectionEnd});\r\n        },\r\n        saveLoginInfo: function() {\r\n            setCookie(\"server\", $(\"#server\").val(), 30);\r\n            setCookie(\"account\", $(\"#account\").val(), 30);\r\n        },\r\n        checkForMFA: function(value) {\r\n            var serversWithMFA = $(\"#mfaservers\").html();\r\n            if (serversWithMFA.search(\",\" + value + \",\") >= 0) {\r\n                $(\"#mfa\").removeClass(\"hidden\");\r\n            } else {\r\n                $(\"#mfa\").addClass(\"hidden\");\r\n            }\r\n        },\r\n        onServerChange: function() {\r\n            accountElement = $(\"#account\");\r\n            if (wdallowfree) {\r\n                accountElement.attr(\"list\", \"accounts-\" + this.value);\r\n            } else {\r\n                var sourceHTML = \"\";\r\n                var sourceElement;\r\n                // jQuery selectors don't like the periods in IDs\r\n                // not standard anyway and should probably be fixed at some\r\n                // point\r\n                sourceElement = $(\"#\" + jQueryID(\"accounts-\" + this.value));\r\n                if (sourceElement) {\r\n                    sourceHTML = sourceElement.html();\r\n                }\r\n                accountElement.html(sourceHTML);\r\n\r\n                // Enable account prompt if more than one choice, else disable\r\n                if (accountElement.children().length <= 1 && accountElement.prop(\"nodeName\").toUpperCase() == \"SELECT\") {\r\n                    accountElement.prop(\"disabled\", true);\r\n                } else {\r\n                    accountElement.prop(\"disabled\", false);\r\n                }\r\n            }\r\n        },\r\n        changeTerminalSize: function(cols, rows) {\r\n            // change terminal size\r\n            tclcols = cols;\r\n            tclrows = rows;\r\n            if ($(\".screen,.menu\", wcontainer).length == 0) {\r\n                // TCL\r\n                WD.input(\"TERM \" + cols + \",\" + rows);\r\n            } else {\r\n                // Window/Menu\r\n                WD.input(WD.ESCAPE + \"CSITERM:\" + cols + \",\" + rows);\r\n            }\r\n            setTerminalSize();\r\n        },\r\n        printterm: function() {\r\n            var termoutput = \"\";\r\n            // each char is painfully it's own array so the only element\r\n            // within that we care about is the 2nd([1]) and we have to build\r\n            // them all into a string on their natural lines.\r\n            var buffer = terminal.buffer.normal;\r\n            for (var i = 0; i < buffer.length; i++) {\r\n                var line = buffer.getLine(i);\r\n                var termline = line.translateToString();\r\n                termline = termline.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n                termoutput += termline + \"<br />\";\r\n            }\r\n            // create window to put output in\r\n            var twin = window.open();\r\n            twin.document.write(\"<html><head><title>\" + WD.loadstringliteral(\"IDS_CAP0118\") + \"</title>\");\r\n            twin.document.write(\"</head><body><pre>\" + termoutput + \"</pre></body></html>\");\r\n            // stop spinning\r\n            twin.document.close();\r\n            // scroll to end \r\n            twin.document.scrollingElement.scrollTop = twin.document.scrollingElement.scrollHeight;\r\n        },\r\n        textareaKeyHandler: function(e) {\r\n            // don't create newlines in textareas\r\n            if (e.keyCode === 10 || e.keyCode === 13) {\r\n                e.preventDefault();\r\n                var elem = $(e.target);\r\n                elem.data(\"dirty\", true).trigger(\"change\");\r\n                return false;\r\n            }\r\n        },\r\n        applyscheme: function(context) {\r\n            // loops through stored styles and applies them when invoked\r\n            if (context) {\r\n                context = context.parent();\r\n            }\r\n            $.each(schemesettings, function(index) {\r\n                var telement = schemesettings[index].element;\r\n                var tcolour = schemesettings[index].colour;\r\n                var tarea = schemesettings[index].area;\r\n                \r\n                if (tcolour === undefined) {\r\n                    return; // background colors of some are replaced by undefined style of focus element\r\n                }\r\n                if (tarea === \"TEXT\" || tarea === \"SHOWFIELD\" || tarea === 'EDITABLE' || tarea === 'FOCUS') {\r\n                    return; // handled by react\r\n                }\r\n\r\n                $(telement, context).not(\".bgcoloured\").css(\"background-color\", tcolour);\r\n            });\r\n        },\r\n        viewLogs: function() {\r\n            // the route for getting the log file download doesnt like to work with the\r\n            // ajax call - it returns data but not as a nice automagic download :(\r\n            // window closes anyways after the fact so nothing is really kicking around\r\n            // that shouldnt be\r\n            window.open(approot + sid + \"/getlog\");\r\n        },\r\n        toggleLogs: function() {\r\n            $.ajax({\r\n                url: sid + \"/togglelog\",\r\n                success: function(loggingEnabled, status, jqxhr) {\r\n                    var $tool = $(\"#COMMANDBAR_BAND_bndToolbarDebugCOMMANDBAR_TOOL_attEnable_Log img\");\r\n                    if ($tool.length) {\r\n                        var src = $tool.attr(\"src\");\r\n                        var title = $tool.attr(\"title\");\r\n\r\n                        var $parent = $tool.parent();\r\n                        var contents = $parent.contents();\r\n\r\n                        var enableLogStr = WD.loadstringliteral(\"IDS_CAP0142\");\r\n                        var disableLogStr = WD.loadstringliteral(\"IDS_WEB0003\", \"Disable Log\");\r\n\r\n                        if (loggingEnabled) {\r\n                            // was off, now flipped on\r\n                            title = disableLogStr;\r\n                            src = src.replace(\"log_start.svg\", \"log_stop.svg\");\r\n                            $parent.html(contents.slice(0, 2)).append(contents[2].textContent.replace(enableLogStr, disableLogStr));\r\n                        } else {\r\n                            // was on, now flipped off\r\n                            title = enableLogStr;\r\n                            src = src.replace(\"log_stop.svg\", \"log_start.svg\");\r\n                            $parent.html(contents.slice(0, 2)).append(contents[2].textContent.replace(disableLogStr, enableLogStr));\r\n                        }\r\n                        $tool.attr(\"src\", src);\r\n                        $tool.attr(\"title\", title);\r\n                        $tool.attr(\"alt\", title);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        sendContextHelp: function() {\r\n            if (hotkeys.getScope() == \"menu-selected\") {\r\n                var selmenu = $(\".menu\", wcontainer).last().find(\".menuitem.selected\");\r\n                WD.input(\"?\" + selmenu.attr(\"id\"), false);\r\n            } else {\r\n                WD.input(WD.ESCAPE + \"F1\", true);\r\n            }\r\n        },\r\n        /**\r\n         * Initializes and loads editor which has been opened in its own window\r\n         * @param {string} uriMod - URI to modified copy of file (new)\r\n         * @param {string} uriOrig - URI to original copy of file (old)\r\n         */\r\n        standaloneeditorinit: function(type, uriMod, uriOrig) {\r\n            setupEditor();\r\n            require(['vs/editor/editor.main'], function() {\r\n                if (type == \"DIFF\") {\r\n                    loadDiffEditorContent(uriOrig, uriMod, \"\");\r\n                } else {\r\n                    loadEditorContent(uriOrig, \"\", true);\r\n                }\r\n\r\n            });\r\n        },\r\n        nextdiff: function() {\r\n            diffnav.next();\r\n        },\r\n        prevdiff: function() {\r\n            diffnav.previous();\r\n        },\r\n        beforeprint: function() {\r\n            var iFrame = $(\"#externalsource\");\r\n            if (iFrame.length > 0) {\r\n                var externalprintsource = document.getElementById(\"externalsource_print\");\r\n                externalprintsource.innerHTML = \"\";\r\n                if (iFrame.get(0).contentWindow.frames.length > 0) {\r\n                    // some of our report browsers may have framesets...\r\n                    var subframes = iFrame.get(0).contentWindow.frames;\r\n                    for (var i = 0; i < subframes.length; i++) {\r\n                        if (subframes[i].name.toLowerCase() == \"csimain\") {\r\n                            var localcss = WD.getallcss(subframes[i].document);\r\n                            externalprintsource.innerHTML += (\"<style>\" + localcss + \"</style>\");\r\n                            externalprintsource.innerHTML += subframes[i].document.body.innerHTML;\r\n                        }\r\n                    }\r\n                } else {\r\n                    // just dump the regular stuff                                                       \r\n                    var internalcss = WD.getallcss(iFrame.get(0).contentWindow.document);\r\n                    WD.getalllinks(iFrame.get(0).contentWindow.document);\r\n                    externalprintsource.innerHTML += \"<style>\" + internalcss + \"</style>\";\r\n                    externalprintsource.innerHTML += iFrame.get(0).contentWindow.document.body.innerHTML;\r\n                }\r\n            }\r\n        },\r\n        getallcss: function(doc) {\r\n            var css = \"\", //variable to hold all the css that we extract\r\n                styletags = doc.getElementsByTagName(\"style\");\r\n            //loop over all the style tags\r\n            for (var i = 0; i < styletags.length; i++) {\r\n                css += styletags[i].innerHTML; //extract the css in the current style tag\r\n            }\r\n            return css;\r\n        },\r\n        getalllinks: function(doc) {\r\n            var head = document.getElementsByTagName('HEAD')[0];\r\n            var alllinks = doc.getElementsByTagName(\"link\");\r\n            //loop over all the links\r\n            for (var i = 0; i < alllinks.length; i++) {\r\n                // Create new link Element \r\n                link = document.createElement('link');\r\n                link.rel = 'stylesheet';\r\n                link.type = 'text/css';\r\n                link.href = alllinks[i].getAttribute(\"href\");\r\n                // Append link element to HTML head \r\n                head.appendChild(link);\r\n            }\r\n        },\r\n        setlanguageobject : function(langObj) {\r\n            /* Language object have additional characters in it & that are being used for specific purposes, we don't require it here\r\n                Create a map out of it and remove additional characters\r\n            */\r\n           for (var objKey in langObj) {\r\n\r\n            // Check if it is key rather than prototype property\r\n            if (langObj.hasOwnProperty(objKey)) {\r\n                var langVal = WD.es5trim(langObj[objKey]).replace(/\\u0026/g, \"\");\r\n                languageObject[objKey] = langVal;\r\n            }\r\n\r\n           }\r\n\r\n        },\r\n        loadstringliteral: function(resourceId, defaultValue) {\r\n            // search languageObject for the resource, if not found use defaultValue\r\n            return languageObject[resourceId] || defaultValue || \"\";\r\n        },\r\n        es5trim: function (inputStr) {\r\n            inputStr = inputStr || \"\";\r\n            // if trim exist on string use it else use regex to do this\r\n            return  inputStr.trim ? inputStr.trim() : inputStr.replace(/^\\s*(.*)\\s*$/,\"$1\");\r\n        },\r\n        getgridfromprompt: function(jPrompt) {\r\n\r\n            var promptid = jPrompt.attr('id');\r\n            var jPromptGrid;\r\n            if (promptid && jPrompt.hasClass(\"gridprompt\") && !jPrompt.is(\":disabled\")) {\r\n                var promptrootid = promptid.split(\"_\", 1)[0];\r\n                jPromptGrid = jPrompt.parents('[id^=\"' + promptrootid + '\"].editgrid.showselect');\r\n            }\r\n\r\n            return jPromptGrid && jPromptGrid.length > 0 ? jPromptGrid: null; \r\n\r\n        }\r\n    };\r\n}();"]}